{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport UserAvatar from \"@/components/UserAvatar\";\nimport Ckeditor4 from \"@/components/Ckeditor4\";\nexport default {\n  name: \"ChapterView\",\n  components: {\n    UserAvatar: UserAvatar,\n    Ckeditor4: Ckeditor4\n  },\n  data: function data() {\n    return {\n      user: '',\n      chapter: '',\n      replies: [],\n      // 回复发布对话框\n      EditDialogVisible: false,\n      // 对话框销毁器\n      closeDialog: false,\n      // 新建回复\n      replyData: {\n        replyId: '',\n        chapterId: '',\n        fromUid: '',\n        toUid: '',\n        content: ''\n      },\n      // 编辑回复而不是创建回复\n      editNotCreate: false\n    };\n  },\n  created: function created() {\n    // 初始化信息\n    this.getUser();\n    this.getchapter();\n  },\n  methods: {\n    // 获取用户数据\n    getUser: function getUser() {\n      var _this = this;\n\n      this.$axios.get(\"/Users/isUserLogin\").then(function (res) {\n        if (res.data.flag) {\n          // 保存用户数据\n          _this.user = res.data.data;\n        } else {\n          // 服务故障-跳转登陆界面\n          _this.$router.push({\n            name: 'Login'\n          });\n        }\n      });\n    },\n    // 获取章节信息\n    getchapter: function getchapter() {\n      var _this2 = this;\n\n      var chapter = {\n        chapterId: this.$route.params.chapterId\n      };\n      this.$axios.post(\"/Chapter/getChapterById\", chapter).then(function (res) {\n        if (res.data.flag) {\n          _this2.chapter = res.data.data; // 获取该讨论下的全部回复\n\n          _this2.getReplies();\n        } else {\n          _this2.$message.error(\"讨论数据获取失败，请稍后重试！\");\n        }\n      });\n    },\n    // 获取该讨论的全部回复\n    getReplies: function getReplies() {\n      var _this3 = this;\n\n      var reply = {\n        chapterId: this.chapter.chapterId\n      };\n      this.$axios.post(\"/Reply/getReplies\", reply).then(function (res) {\n        if (res.data.flag) {\n          _this3.replies = res.data.data;\n          console.log(_this3.replies);\n          if (_this3.replies.length === 0) _this3.replies = undefined;\n        } else {\n          _this3.$message.error(\"回复数据获取失败，请稍后重试！\");\n        }\n      });\n    },\n    // 创建回复\n    createReply: function createReply(toUid) {\n      // 数据封装\n      this.replyData.chapterId = this.chapter.chapterId;\n      this.replyData.fromUid = this.user.userId;\n      this.replyData.toUid = toUid;\n      this.replyData.content = ''; // 启动输入框\n\n      this.EditDialogVisible = true;\n      this.closeDialog = true;\n    },\n    // 回复Dialog销毁\n    dialogHandleClose: function dialogHandleClose() {\n      // 手动销毁\n      this.closeDialog = false;\n    },\n    // 编辑回复\n    editReply: function editReply(reply) {\n      // 数据封装\n      this.replyData.replyId = reply.replyId;\n      this.replyData.chapterId = reply.chapterId;\n      this.replyData.fromUid = reply.fromUid;\n      this.replyData.toUid = reply.toUid;\n      this.replyData.content = reply.content; // 打开编辑回复提交开关-Dialog提交时调用编辑接口\n\n      this.editNotCreate = true; // 启动输入框\n\n      this.EditDialogVisible = true;\n      this.closeDialog = true;\n    },\n    // 删除回复\n    deleteReply: function deleteReply(replyId) {\n      var _this4 = this;\n\n      // 弹框确认\n      this.$confirm('此操作将删除该回复, 是否继续?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        var reply = {\n          replyId: replyId\n        }; // 执行删除\n\n        _this4.$axios.post(\"/Reply/deleteReplyById\", reply).then(function (resp) {\n          if (resp.data.flag) {\n            // 删除成功，刷新数据\n            _this4.getReplies();\n\n            _this4.$message.success('删除成功！');\n          } else {\n            _this4.$message.error('删除失败！');\n          }\n        });\n      }).catch(function () {\n        // 取消删除\n        _this4.$message.info('取消删除');\n      });\n    },\n    // 提交Dialog编辑\n    onCommit: function onCommit(reply) {\n      var _this5 = this;\n\n      if (this.editNotCreate) {\n        // 编辑回复\n        this.$axios.post(\"/Reply/editReplies\", reply).then(function (res) {\n          if (res.data.flag) {\n            _this5.$message.success(\"编辑成功！\"); // 刷新讨论数据\n\n\n            _this5.getReplies();\n\n            _this5.EditDialogVisible = false;\n            _this5.replyData.content = '';\n          } else {\n            _this5.$message.error(\"回复失败，请稍后重试！\");\n          }\n        }); // 使用后关闭编辑模式\n\n        this.editNotCreate = false;\n      } else {\n        // 创建回复\n        this.$axios.post(\"/Reply/createReplies\", reply).then(function (res) {\n          if (res.data.flag) {\n            _this5.$message.success(\"回复成功！\"); // 刷新讨论数据\n\n\n            _this5.getReplies();\n\n            _this5.EditDialogVisible = false;\n            _this5.replyData.content = '';\n          } else {\n            _this5.$message.error(\"回复失败，请稍后重试！\");\n          }\n        });\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkHA;AACA;AACA;AACAA,qBADA;AAEAC;AACAC,0BADA;AAEAC;AAFA,GAFA;AAMAC,MANA,kBAMA;AACA;AACAC,cADA;AAEAC,iBAFA;AAGAC,iBAHA;AAIA;AACAC,8BALA;AAMA;AACAC,wBAPA;AAQA;AACAC;AACAC,mBADA;AAEAC,qBAFA;AAGAC,mBAHA;AAIAC,iBAJA;AAKAC;AALA,OATA;AAgBA;AACAC;AAjBA;AAmBA,GA1BA;AA2BAC,SA3BA,qBA2BA;AACA;AACA;AACA;AACA,GA/BA;AAgCAC;AACA;AACAC,WAFA,qBAEA;AAAA;;AACA;AACA;AACA;AACA;AACA,SAHA,MAGA;AACA;AACA;AAAAnB;AAAA;AACA;AACA,OARA;AASA,KAZA;AAaA;AACAoB,cAdA,wBAcA;AAAA;;AACA;AAAAR;AAAA;AACA;AACA;AACA,yCADA,CAEA;;AACA;AACA,SAJA,MAIA;AACA;AACA;AACA,OARA;AASA,KAzBA;AA0BA;AACAS,cA3BA,wBA2BA;AAAA;;AACA;AAAAT;AAAA;AACA;AACA;AACA;AACAU;AACA;AACA,SAJA,MAIA;AACA;AACA;AACA,OARA;AASA,KAtCA;AAuCA;AACAC,eAxCA,uBAwCAT,KAxCA,EAwCA;AACA;AACA;AACA;AACA;AACA,kCALA,CAMA;;AACA;AACA;AACA,KAjDA;AAkDA;AACAU,qBAnDA,+BAmDA;AACA;AACA;AACA,KAtDA;AAuDA;AACAC,aAxDA,qBAwDAC,KAxDA,EAwDA;AACA;AACA;AACA;AACA;AACA;AACA,6CANA,CAOA;;AACA,gCARA,CASA;;AACA;AACA;AACA,KApEA;AAqEA;AACAC,eAtEA,uBAsEAhB,OAtEA,EAsEA;AAAA;;AACA;AACA;AACAiB,+BADA;AAEAC,8BAFA;AAGAC;AAHA,SAIAC,IAJA,CAIA;AACA;AAAApB;AAAA,UADA,CAEA;;AACA;AACA;AACA;AACA;;AACA;AACA,WAJA,MAIA;AACA;AACA;AACA,SARA;AASA,OAhBA,EAgBAqB,KAhBA,CAgBA;AACA;AACA;AACA,OAnBA;AAoBA,KA5FA;AA6FA;AACAC,YA9FA,oBA8FAP,KA9FA,EA8FA;AAAA;;AACA;AAAA;AACA;AACA;AACA,6CADA,CAEA;;;AACA;;AACA;AACA;AACA,WANA,MAMA;AACA;AACA;AACA,SAVA,EADA,CAYA;;AACA;AACA,OAdA,MAcA;AAAA;AACA;AACA;AACA,6CADA,CAEA;;;AACA;;AACA;AACA;AACA,WANA,MAMA;AACA;AACA;AACA,SAVA;AAWA;AACA;AA1HA;AAhCA","names":["name","components","UserAvatar","Ckeditor4","data","user","chapter","replies","EditDialogVisible","closeDialog","replyData","replyId","chapterId","fromUid","toUid","content","editNotCreate","created","methods","getUser","getchapter","getReplies","console","createReply","dialogHandleClose","editReply","reply","deleteReply","confirmButtonText","cancelButtonText","type","then","catch","onCommit"],"sourceRoot":"src/pages/user/teacherComponents","sources":["ChapterView.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <!--视频详情 -->\r\n        <div>\r\n            <el-card :body-style=\"{ padding: '0px'}\" style=\"margin-top: 2em\">\r\n                <div  id=\"ChapterCards\">\r\n                    <!-- 标题和时间 -->\r\n                    <div style=\"margin-top: 20px;\">\r\n                        <span id=\"chapterTitle\">{{chapter.title}}</span>\r\n                        <span id=\"chapterDate\">{{chapter.formatDate}}</span>\r\n                    </div>\r\n                    <!-- 视频 -->\r\n                    <div id=\"chapterContent\">\r\n                        <video width=\"70%\" height=\"600\" :src=\"chapter.chapterUrl\" controls>\r\n                            <!-- 多种文件类型解析方式 -->\r\n                            <source :src=\"chapter.chapterUrl\" type=\"video/mp4\" />\r\n                            <source :src=\"chapter.chapterUrl\" type=\"video/ogg\" />\r\n                            <source :src=\"chapter.chapterUrl\" type=\"video/webm\" />\r\n                            <!-- 均解析失败则提示 -->\r\n                            Your browser does not support the video tag.\r\n                        </video>\r\n                    </div>\r\n                    <div id=\"videoController\">\r\n                        <span class=\"chapterDetail\"><i class=\"el-icon-view\"style=\"margin-right: 0.5em\"></i>{{chapter.views}}</span>\r\n                        <span class=\"chapterDetail\"><i class=\"ali-iconzan3\"style=\"font-size:1em;margin-right: 0.5em\"></i>{{chapter.likes}}</span>\r\n                        <!-- 回复按钮 -->\r\n                        <span class=\"functionReply chapterReply\" style=\"position: absolute; left: 94.5%;\" @click=\"createReply(null)\">\r\n                            <i class=\"el-icon-chat-dot-square\"></i>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </el-card>\r\n        </div>\r\n\r\n        <div style=\"margin: 30px;font-size: 18px\">评论区</div>\r\n\r\n        <!-- 回复列表 -->\r\n        <div>\r\n            <el-card :body-style=\"{ padding: '0px' }\">\r\n                <!-- 回复卡片 -->\r\n                <div id=\"RepliesCards\">\r\n                    <!-- 暂无回复 -->\r\n                    <div v-if=\"replies === undefined\" id=\"NoReplies\">暂无回复</div>\r\n                    <!-- 每条回复 -->\r\n                    <div  v-for=\"(item,index) in replies\"\r\n                          :key=\"item.replyId\"\r\n                          id=\"RepliesRow\">\r\n                        <!-- 分割线 -->\r\n                        <el-divider v-if=\"index !== 0\" class=\"ReplyDivider\"></el-divider>\r\n                        <!-- 回复内容 -->\r\n                        <div>\r\n                            <el-row>\r\n                                <!-- 头像 -->\r\n                                <el-col :span=\"1\">\r\n                                    <user-avatar :width=\"40\" :height=\"40\" :src=\"item.fromUserAvatar\" />\r\n                                </el-col>\r\n                                <!-- 内容 -->\r\n                                <el-col  :span=\"22\" style=\"position: relative\">\r\n                                    <!-- 用户名和时间 -->\r\n                                    <div style=\"margin-bottom: 10px\">\r\n                                        <span class=\"fromUserName\">{{item.fromUsername}}</span>\r\n                                        <span class=\"ReplyDate\">{{item.formatDate}}</span>\r\n                                    </div>\r\n                                    <!-- 回复内容 -->\r\n                                    <div>\r\n                                        <!-- @目标用户 -->\r\n                                        <span v-if=\"item.toUsername\" class=\"toUsername\">@{{item.toUsername}}：</span>\r\n                                        <p v-html=\"item.content\" class=\"ReplyContent\">{{item.content}}</p>\r\n                                    </div>\r\n                                    <!-- 功能区 -->\r\n                                    <div style=\"text-align: right\">\r\n                                        <!-- 回复 -->\r\n                                        <span v-if=\"item.fromUid !== user.userId\"\r\n                                              class=\"functionReply chapterReply\"\r\n                                              @click=\"createReply(item.fromUid)\"><i class=\"el-icon-chat-dot-square\"></i> </span>\r\n                                        <!-- 编辑 -->\r\n                                        <span v-if=\"item.fromUid === user.userId\"\r\n                                              class=\"functionReply EditReply\"\r\n                                              @click=\"editReply(item)\"><i class=\"el-icon-edit\"></i> </span>\r\n                                        <!-- 删除-->\r\n                                        <span class=\"functionReply ReplyDelete\"\r\n                                              @click=\"deleteReply(item.replyId)\"\r\n                                              style=\"margin-left: 20px\"><i class=\"el-icon-delete\"></i> </span>\r\n                                    </div>\r\n                                </el-col>\r\n                            </el-row>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style=\"height: 20px\"></div>\r\n            </el-card>\r\n        </div>\r\n\r\n        <!--编辑回复对话框表单 -->\r\n        <el-dialog\r\n                v-if=\"closeDialog\"\r\n                title=\"输入内容\"\r\n                :visible.sync=\"EditDialogVisible\"\r\n                @close=\"dialogHandleClose\"\r\n                width=\"60%\">\r\n            <!-- 内容编辑 -->\r\n            <div class=\"chapterInput\">在此输入</div>\r\n            <Ckeditor4 v-model=\"replyData.content\"></Ckeditor4>\r\n            <el-button type=\"text\"\r\n                       style=\"font-size: 16px;margin-top: 15px\"\r\n                       @click=\"onCommit(replyData)\">\r\n                保存编辑\r\n            </el-button>\r\n        </el-dialog>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import UserAvatar from \"@/components/UserAvatar\";\r\n    import Ckeditor4 from \"@/components/Ckeditor4\";\r\n    export default {\r\n        name: \"ChapterView\",\r\n        components:{\r\n            UserAvatar,\r\n            Ckeditor4\r\n        },\r\n        data(){\r\n            return{\r\n                user:'',\r\n                chapter:'',\r\n                replies:[],\r\n                // 回复发布对话框\r\n                EditDialogVisible:false,\r\n                // 对话框销毁器\r\n                closeDialog:false,\r\n                // 新建回复\r\n                replyData: {\r\n                    replyId: '',\r\n                    chapterId:'',\r\n                    fromUid:'',\r\n                    toUid:'',\r\n                    content:'',\r\n                },\r\n                // 编辑回复而不是创建回复\r\n                editNotCreate:false,\r\n            }\r\n        },\r\n        created() {\r\n            // 初始化信息\r\n            this.getUser();\r\n            this.getchapter();\r\n        },\r\n        methods:{\r\n            // 获取用户数据\r\n            getUser(){\r\n                this.$axios.get(\"/Users/isUserLogin\").then((res)=>{\r\n                    if(res.data.flag){\r\n                        // 保存用户数据\r\n                        this.user = res.data.data;\r\n                    }else{\r\n                        // 服务故障-跳转登陆界面\r\n                        this.$router.push({name:'Login'});\r\n                    }\r\n                });\r\n            },\r\n            // 获取章节信息\r\n            getchapter(){\r\n                let chapter = {chapterId:this.$route.params.chapterId};\r\n                this.$axios.post(\"/Chapter/getChapterById\",chapter).then((res)=>{\r\n                    if(res.data.flag){\r\n                        this.chapter = res.data.data;\r\n                        // 获取该讨论下的全部回复\r\n                        this.getReplies();\r\n                    }else{\r\n                        this.$message.error(\"讨论数据获取失败，请稍后重试！\");\r\n                    }\r\n                })\r\n            },\r\n            // 获取该讨论的全部回复\r\n            getReplies(){\r\n                let reply = {chapterId:this.chapter.chapterId};\r\n                this.$axios.post(\"/Reply/getReplies\",reply).then((res)=>{\r\n                    if(res.data.flag){\r\n                        this.replies = res.data.data;\r\n                        console.log(this.replies);\r\n                        if(this.replies.length === 0)this.replies = undefined;\r\n                    }else{\r\n                        this.$message.error(\"回复数据获取失败，请稍后重试！\");\r\n                    }\r\n                })\r\n            },\r\n            // 创建回复\r\n            createReply(toUid){\r\n                // 数据封装\r\n                this.replyData.chapterId = this.chapter.chapterId;\r\n                this.replyData.fromUid = this.user.userId;\r\n                this.replyData.toUid  = toUid;\r\n                this.replyData.content = '';\r\n                // 启动输入框\r\n                this.EditDialogVisible=true;\r\n                this.closeDialog=true;\r\n            },\r\n            // 回复Dialog销毁\r\n            dialogHandleClose(){\r\n                // 手动销毁\r\n                this.closeDialog = false;\r\n            },\r\n            // 编辑回复\r\n            editReply(reply){\r\n                // 数据封装\r\n                this.replyData.replyId = reply.replyId;\r\n                this.replyData.chapterId = reply.chapterId;\r\n                this.replyData.fromUid = reply.fromUid;\r\n                this.replyData.toUid  = reply.toUid;\r\n                this.replyData.content  = reply.content;\r\n                // 打开编辑回复提交开关-Dialog提交时调用编辑接口\r\n                this.editNotCreate = true;\r\n                // 启动输入框\r\n                this.EditDialogVisible=true;\r\n                this.closeDialog=true;\r\n            },\r\n            // 删除回复\r\n            deleteReply(replyId){\r\n                // 弹框确认\r\n                this.$confirm('此操作将删除该回复, 是否继续?', '提示', {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    let reply = {replyId:replyId};\r\n                    // 执行删除\r\n                    this.$axios.post(\"/Reply/deleteReplyById\",reply).then(resp=>{\r\n                        if(resp.data.flag){\r\n                            // 删除成功，刷新数据\r\n                            this.getReplies();\r\n                            this.$message.success('删除成功！');\r\n                        }else{\r\n                            this.$message.error('删除失败！');\r\n                        }\r\n                    })\r\n                }).catch(() => {\r\n                    // 取消删除\r\n                    this.$message.info('取消删除');\r\n                });\r\n            },\r\n            // 提交Dialog编辑\r\n            onCommit(reply){\r\n                if(this.editNotCreate){ // 编辑回复\r\n                    this.$axios.post(\"/Reply/editReplies\",reply).then((res)=>{\r\n                        if(res.data.flag){\r\n                            this.$message.success(\"编辑成功！\");\r\n                            // 刷新讨论数据\r\n                            this.getReplies();\r\n                            this.EditDialogVisible = false;\r\n                            this.replyData.content = '';\r\n                        }else{\r\n                            this.$message.error(\"回复失败，请稍后重试！\");\r\n                        }\r\n                    })\r\n                    // 使用后关闭编辑模式\r\n                    this.editNotCreate = false;\r\n                }else{  // 创建回复\r\n                    this.$axios.post(\"/Reply/createReplies\",reply).then((res)=>{\r\n                        if(res.data.flag){\r\n                            this.$message.success(\"回复成功！\");\r\n                            // 刷新讨论数据\r\n                            this.getReplies();\r\n                            this.EditDialogVisible = false;\r\n                            this.replyData.content = '';\r\n                        }else{\r\n                            this.$message.error(\"回复失败，请稍后重试！\");\r\n                        }\r\n                    })\r\n                }\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    /**\r\n    * 视频卡片\r\n    */\r\n    #ChapterCards{\r\n        width: 90%;\r\n        margin: auto;\r\n    }\r\n    /* 标题 */\r\n    #chapterTitle{\r\n        font-size: 18px;\r\n        color: #000000;\r\n    }\r\n    /* 发表时间 */\r\n    #chapterDate{\r\n        color: #8a8a8a;\r\n        margin-left: 20px;\r\n    }\r\n    /* 内容 */\r\n    #chapterContent{\r\n        margin-top: 20px;\r\n        margin-bottom: 20px;\r\n    }\r\n    /* 回复按钮 */\r\n    .functionReply{\r\n        font-size: 20px;\r\n        color: #3a75ff;\r\n    }\r\n    .functionReply:hover{\r\n        cursor:pointer;\r\n    }\r\n    /* 视频功能栏 */\r\n    #videoController{\r\n        text-align: left;\r\n        margin-bottom: 20px;\r\n        position: relative\r\n    }\r\n    /* 浏览和点赞 */\r\n    .chapterDetail{\r\n        font-size: 17px;\r\n        color: #3a3a3a;\r\n        margin-left: 40px;\r\n    }\r\n\r\n    /**\r\n    * 回复卡片\r\n    */\r\n    #RepliesCards{\r\n        width: 90%;\r\n        margin: auto;\r\n    }\r\n    /* 暂无回复 */\r\n    #NoReplies{\r\n        margin-top: 18px;\r\n        text-align: center;\r\n        color: #8a8a8a;\r\n    }\r\n    /* 每条回复 */\r\n    #RepliesRow{\r\n        margin-top: 18px;\r\n    }\r\n    /* 回复分割线 */\r\n    .ReplyDivider{\r\n        /* 定位 */\r\n        width: 107%;\r\n        position: relative;\r\n        left: -4%;\r\n        margin-bottom: 18px;\r\n    }\r\n    /* 回复人姓名 */\r\n    .fromUserName{\r\n        color: #818181;\r\n    }\r\n    /* 回复时间 */\r\n    .ReplyDate{\r\n        color: #818181;\r\n        margin-left: 20px;\r\n    }\r\n    /*　＠目标姓名　*/\r\n    .toUsername{\r\n        color: #3a75ff;\r\n    }\r\n    /*　回复内容　*/\r\n    .ReplyContent{\r\n        margin-top: -10px;\r\n    }\r\n  /*  !* 回复讨论 *!\r\n    .chapterReply:hover{\r\n        color: #3a75ff;\r\n    }\r\n    !* 编辑回复 *!\r\n    .EditReply:hover{\r\n        color: #15c615;\r\n    }\r\n    !* 删除回复 *!\r\n    .ReplyDelete:hover{\r\n        color: #ff4646;\r\n    }*/\r\n\r\n    /* 输入框标题 */\r\n    .chapterInput{\r\n        margin: 20px 0 ;\r\n        font-size: 16px;\r\n    }\r\n\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}