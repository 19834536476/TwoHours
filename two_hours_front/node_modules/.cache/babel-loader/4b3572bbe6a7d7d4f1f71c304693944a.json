{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'Ckeditor4',\n  props: ['value'],\n  mounted: function mounted() {\n    var self = this; // 渲染编辑器\n\n    self.ckeditor = window.CKEDITOR.replace(self.id); // 设置初始内容\n\n    self.ckeditor.setData(self.value); // 监听内容变更事件\n\n    self.ckeditor.on('change', function (event) {\n      self.$emit('input', self.ckeditor.getData());\n    });\n  },\n  data: function data() {\n    return {\n      id: parseInt(Math.random() * 10000).toString(),\n      ckeditor: null\n    };\n  },\n  watch: {\n    // 监听prop的变化，更新ckeditor编辑值\n    value: function value() {\n      if (this.value !== this.ckeditor.getData()) {\n        // this.ckeditor.setData(this.value);\n        // 反向拿到编辑内容\n        this.value = this.ckeditor.getDate();\n      }\n    }\n  },\n  methods: {\n    set: function set(val) {\n      this.ckeditor.setData(val);\n    },\n    get: function get() {\n      return this.ckeditor.getData();\n    }\n  },\n  // 销毁组件前，销毁编辑器\n  beforeDestroy: function beforeDestroy() {\n    this.ckeditor.destroy();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;AAQA;AACAA,mBADA;AAEAC,UACA,OADA,CAFA;AAKAC,SALA,qBAKA;AACA,oBADA,CAEA;;AACAC,qDAHA,CAIA;;AACAA,sCALA,CAMA;;AACAA;AACAA;AACA,KAFA;AAGA,GAfA;AAgBAC,MAhBA,kBAgBA;AACA;AACAC,oDADA;AAEAC;AAFA;AAIA,GArBA;AAsBAC;AACA;AACAC;AACA;AACA;AACA;AACA;AACA;AACA;AARA,GAtBA;AAgCAC;AACAC,OADA,eACAC,GADA,EACA;AACA;AACA,KAHA;AAIAC,OAJA,iBAIA;AACA;AACA;AANA,GAhCA;AAwCA;AACAC;AACA;AACA;AA3CA","names":["name","props","mounted","self","data","id","ckeditor","watch","value","methods","set","val","get","beforeDestroy"],"sourceRoot":"src/components","sources":["Ckeditor4.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <label>\r\n            <textarea :id=\"id\"></textarea>\r\n        </label>\r\n    </div>\r\n</template>\r\n<script>\r\n    export default {\r\n        name: 'Ckeditor4',\r\n        props: [\r\n            'value',\r\n        ],\r\n        mounted() {\r\n            const self = this;\r\n            // 渲染编辑器\r\n            self.ckeditor = window.CKEDITOR.replace(self.id);\r\n            // 设置初始内容\r\n            self.ckeditor.setData(self.value);\r\n            // 监听内容变更事件\r\n            self.ckeditor.on('change', function(event) {\r\n                self.$emit('input', self.ckeditor.getData());\r\n            });\r\n        },\r\n        data(){\r\n            return {\r\n                id: parseInt(Math.random() * 10000).toString(),\r\n                ckeditor: null,\r\n            }\r\n        },\r\n        watch: {\r\n            // 监听prop的变化，更新ckeditor编辑值\r\n            value: function() {\r\n                if (this.value !== this.ckeditor.getData()) {\r\n                    // this.ckeditor.setData(this.value);\r\n                    // 反向拿到编辑内容\r\n                    this.value = this.ckeditor.getDate();\r\n                }\r\n            }\r\n        },\r\n        methods:{\r\n            set(val){\r\n                this.ckeditor.setData(val);\r\n            },\r\n            get(){\r\n                return this.ckeditor.getData();\r\n            }\r\n        },\r\n        // 销毁组件前，销毁编辑器\r\n        beforeDestroy: function() {\r\n            this.ckeditor.destroy()\r\n        }\r\n    }\r\n</script>"]},"metadata":{},"sourceType":"module"}