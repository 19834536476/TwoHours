{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.keys.js\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar TurboType = {\n  SEQUENCE_FLOW: 1,\n  START_EVENT: 2,\n  END_EVENT: 3,\n  USER_TASK: 4,\n  // SERVICE_TASK = 5, 暂不支持\n  EXCLUSIVE_GATEWAY: 6\n};\nvar TurboTypeMap = {\n  1: 'bpmn:sequenceFlow',\n  2: 'bpmn:startEvent',\n  3: 'bpmn:endEvent',\n  4: 'bpmn:userTask',\n  6: 'bpmn:exclusiveGateway'\n}; // 转换Turbo识别的类型\n\nfunction getTurboType(type) {\n  switch (type) {\n    case 'bpmn:sequenceFlow':\n      return TurboType.SEQUENCE_FLOW;\n\n    case 'bpmn:startEvent':\n      return TurboType.START_EVENT;\n\n    case 'bpmn:endEvent':\n      return TurboType.END_EVENT;\n\n    case 'bpmn:userTask':\n      return TurboType.USER_TASK;\n    // case 'bpmn:serviceTask':\n    //   return TurboType.SERVICE_TASK;\n\n    case 'bpmn:exclusiveGateway':\n      return TurboType.EXCLUSIVE_GATEWAY;\n\n    default:\n      return type;\n  }\n} // 将LogicFlow中的Node数据转换为Turbo元素数据\n\n\nfunction convertNodeToTurboElement(node) {\n  var id = node.id,\n      type = node.type,\n      x = node.x,\n      y = node.y,\n      _a = node.text,\n      text = _a === void 0 ? '' : _a,\n      properties = node.properties;\n  return {\n    incoming: [],\n    outgoing: [],\n    dockers: [],\n    type: getTurboType(node.type),\n    properties: __assign(__assign({}, properties), {\n      name: text && text.value || '',\n      x: x,\n      y: y,\n      text: text\n    }),\n    key: id\n  };\n} // 将LogicFlow中的Edge数据转换为Turbo元素数据\n\n\nfunction convertEdgeToTurboElement(edge) {\n  var id = edge.id,\n      type = edge.type,\n      sourceNodeId = edge.sourceNodeId,\n      targetNodeId = edge.targetNodeId,\n      startPoint = edge.startPoint,\n      endPoint = edge.endPoint,\n      pointsList = edge.pointsList,\n      _a = edge.text,\n      text = _a === void 0 ? '' : _a,\n      properties = edge.properties;\n  return {\n    incoming: [sourceNodeId],\n    outgoing: [targetNodeId],\n    type: getTurboType(type),\n    dockers: [],\n    properties: __assign(__assign({}, properties), {\n      name: text && text.value || '',\n      text: text,\n      startPoint: JSON.stringify(startPoint),\n      endPoint: JSON.stringify(endPoint),\n      pointsList: JSON.stringify(text)\n    }),\n    key: id\n  };\n} // 将LogicFlow中数据转换为Turbo数据\n\n\nexport function toTurboData(data) {\n  var nodeMap = new Map();\n  var turboData = {\n    flowElementList: []\n  };\n  data.nodes.forEach(function (node) {\n    var flowElement = convertNodeToTurboElement(node);\n    turboData.flowElementList.push(flowElement);\n    nodeMap.set(node.id, flowElement);\n  });\n  data.edges.forEach(function (edge) {\n    var flowElement = convertEdgeToTurboElement(edge);\n    var sourceElement = nodeMap.get(edge.sourceNodeId);\n    sourceElement.outgoing.push(flowElement.key);\n    var targetElement = nodeMap.get(edge.targetNodeId);\n    targetElement.incoming.push(flowElement.key);\n    turboData.flowElementList.push(flowElement);\n  });\n  return turboData;\n} // 将Turbo元素数据转换为LogicFlow中的Edge数据\n\nfunction convertFlowElementToEdge(element) {\n  var incoming = element.incoming,\n      outgoing = element.outgoing,\n      properties = element.properties,\n      key = element.key,\n      type = element.type;\n  var text = properties.text,\n      name = properties.name,\n      startPoint = properties.startPoint,\n      endPoint = properties.endPoint,\n      pointsList = properties.pointsList;\n  var edge = {\n    id: key,\n    type: TurboTypeMap[type],\n    sourceNodeId: incoming[0],\n    targetNodeId: outgoing[0],\n    text: text || name,\n    properties: {}\n  };\n\n  if (startPoint) {\n    // @ts-ignore\n    edge.startPoint = JSON.parse(startPoint);\n  }\n\n  if (endPoint) {\n    // @ts-ignore\n    edge.endPoint = JSON.parse(endPoint);\n  }\n\n  if (pointsList) {\n    // @ts-ignore\n    edge.endPoint = JSON.parse(pointsList);\n  } // 这种转换方式，在自定义属性中不能与excludeProperties中的属性重名，否则将在转换过程中丢失\n\n\n  var excludeProperties = ['startPoint', 'endPoint', 'pointsList', 'text'];\n  Object.keys(element.properties).forEach(function (property) {\n    if (excludeProperties.indexOf(property) === -1) {\n      edge.properties[property] = element.properties[property];\n    }\n  });\n  return edge;\n} // 将Turbo元素数据转换为LogicFlow中的Node数据\n\n\nfunction convertFlowElementToNode(element) {\n  var properties = element.properties,\n      key = element.key,\n      type = element.type,\n      bounds = element.bounds;\n  var x = properties.x,\n      y = properties.y;\n\n  if (x === undefined) {\n    var _a = __read(bounds, 2),\n        _b = _a[0],\n        x1 = _b.x,\n        y1 = _b.y,\n        _c = _a[1],\n        x2 = _c.x,\n        y2 = _c.y;\n\n    x = (x1 + x2) / 2;\n    y = (y1 + y2) / 2;\n  }\n\n  var node = {\n    id: key,\n    type: TurboTypeMap[type],\n    x: x,\n    y: y,\n    text: properties.text,\n    properties: {}\n  }; // 这种转换方式，在自定义属性中不能与excludeProperties中的属性重名，否则将在转换过程中丢失\n\n  var excludeProperties = ['x', 'y', 'text'];\n  Object.keys(element.properties).forEach(function (property) {\n    if (excludeProperties.indexOf(property) === -1) {\n      node.properties[property] = element.properties[property];\n    }\n  });\n  return node;\n} // 将Turbo元素数据转换为LogicFlow数据\n\n\nexport function toLogicflowData(data) {\n  var lfData = {\n    nodes: [],\n    edges: []\n  };\n  var list = data.flowElementList;\n  list && list.length > 0 && list.forEach(function (element) {\n    if (element.type === TurboType.SEQUENCE_FLOW) {\n      var edge = convertFlowElementToEdge(element);\n      lfData.edges.push(edge);\n    } else {\n      var node = convertFlowElementToNode(element);\n      lfData.nodes.push(node);\n    }\n  });\n  return lfData;\n}\n\nvar TurboAdapter =\n/** @class */\nfunction () {\n  function TurboAdapter(_a) {\n    var lf = _a.lf;\n    lf.adapterIn = this.adapterIn;\n    lf.adapterOut = this.adapterOut;\n  }\n\n  TurboAdapter.prototype.adapterOut = function (logicflowData) {\n    if (logicflowData) {\n      return toTurboData(logicflowData);\n    }\n  };\n\n  TurboAdapter.prototype.adapterIn = function (turboData) {\n    if (turboData) {\n      return toLogicflowData(turboData);\n    }\n  };\n\n  TurboAdapter.pluginName = 'turboAdapter';\n  return TurboAdapter;\n}();\n\nexport default TurboAdapter;","map":{"version":3,"sources":["F:/Desktop/繁星教育/TH资料/two_hours_front/node_modules/@logicflow/extension/es/turbo-adapter/index.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__read","o","m","Symbol","iterator","r","ar","e","next","done","push","value","error","TurboType","SEQUENCE_FLOW","START_EVENT","END_EVENT","USER_TASK","EXCLUSIVE_GATEWAY","TurboTypeMap","getTurboType","type","convertNodeToTurboElement","node","id","x","y","_a","text","properties","incoming","outgoing","dockers","name","key","convertEdgeToTurboElement","edge","sourceNodeId","targetNodeId","startPoint","endPoint","pointsList","JSON","stringify","toTurboData","data","nodeMap","Map","turboData","flowElementList","nodes","forEach","flowElement","set","edges","sourceElement","get","targetElement","convertFlowElementToEdge","element","parse","excludeProperties","keys","property","indexOf","convertFlowElementToNode","bounds","undefined","_b","x1","y1","_c","x2","y2","toLogicflowData","lfData","list","TurboAdapter","lf","adapterIn","adapterOut","logicflowData","pluginName"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar TurboType = {\n    SEQUENCE_FLOW: 1,\n    START_EVENT: 2,\n    END_EVENT: 3,\n    USER_TASK: 4,\n    // SERVICE_TASK = 5, 暂不支持\n    EXCLUSIVE_GATEWAY: 6,\n};\nvar TurboTypeMap = {\n    1: 'bpmn:sequenceFlow',\n    2: 'bpmn:startEvent',\n    3: 'bpmn:endEvent',\n    4: 'bpmn:userTask',\n    6: 'bpmn:exclusiveGateway',\n};\n// 转换Turbo识别的类型\nfunction getTurboType(type) {\n    switch (type) {\n        case 'bpmn:sequenceFlow':\n            return TurboType.SEQUENCE_FLOW;\n        case 'bpmn:startEvent':\n            return TurboType.START_EVENT;\n        case 'bpmn:endEvent':\n            return TurboType.END_EVENT;\n        case 'bpmn:userTask':\n            return TurboType.USER_TASK;\n        // case 'bpmn:serviceTask':\n        //   return TurboType.SERVICE_TASK;\n        case 'bpmn:exclusiveGateway':\n            return TurboType.EXCLUSIVE_GATEWAY;\n        default:\n            return type;\n    }\n}\n// 将LogicFlow中的Node数据转换为Turbo元素数据\nfunction convertNodeToTurboElement(node) {\n    var id = node.id, type = node.type, x = node.x, y = node.y, _a = node.text, text = _a === void 0 ? '' : _a, properties = node.properties;\n    return {\n        incoming: [],\n        outgoing: [],\n        dockers: [],\n        type: getTurboType(node.type),\n        properties: __assign(__assign({}, properties), { name: (text && text.value) || '', x: x,\n            y: y,\n            text: text }),\n        key: id,\n    };\n}\n// 将LogicFlow中的Edge数据转换为Turbo元素数据\nfunction convertEdgeToTurboElement(edge) {\n    var id = edge.id, type = edge.type, sourceNodeId = edge.sourceNodeId, targetNodeId = edge.targetNodeId, startPoint = edge.startPoint, endPoint = edge.endPoint, pointsList = edge.pointsList, _a = edge.text, text = _a === void 0 ? '' : _a, properties = edge.properties;\n    return {\n        incoming: [sourceNodeId],\n        outgoing: [targetNodeId],\n        type: getTurboType(type),\n        dockers: [],\n        properties: __assign(__assign({}, properties), { name: (text && text.value) || '', text: text, startPoint: JSON.stringify(startPoint), endPoint: JSON.stringify(endPoint), pointsList: JSON.stringify(text) }),\n        key: id,\n    };\n}\n// 将LogicFlow中数据转换为Turbo数据\nexport function toTurboData(data) {\n    var nodeMap = new Map();\n    var turboData = {\n        flowElementList: [],\n    };\n    data.nodes.forEach(function (node) {\n        var flowElement = convertNodeToTurboElement(node);\n        turboData.flowElementList.push(flowElement);\n        nodeMap.set(node.id, flowElement);\n    });\n    data.edges.forEach(function (edge) {\n        var flowElement = convertEdgeToTurboElement(edge);\n        var sourceElement = nodeMap.get(edge.sourceNodeId);\n        sourceElement.outgoing.push(flowElement.key);\n        var targetElement = nodeMap.get(edge.targetNodeId);\n        targetElement.incoming.push(flowElement.key);\n        turboData.flowElementList.push(flowElement);\n    });\n    return turboData;\n}\n// 将Turbo元素数据转换为LogicFlow中的Edge数据\nfunction convertFlowElementToEdge(element) {\n    var incoming = element.incoming, outgoing = element.outgoing, properties = element.properties, key = element.key, type = element.type;\n    var text = properties.text, name = properties.name, startPoint = properties.startPoint, endPoint = properties.endPoint, pointsList = properties.pointsList;\n    var edge = {\n        id: key,\n        type: TurboTypeMap[type],\n        sourceNodeId: incoming[0],\n        targetNodeId: outgoing[0],\n        text: text || name,\n        properties: {},\n    };\n    if (startPoint) {\n        // @ts-ignore\n        edge.startPoint = JSON.parse(startPoint);\n    }\n    if (endPoint) {\n        // @ts-ignore\n        edge.endPoint = JSON.parse(endPoint);\n    }\n    if (pointsList) {\n        // @ts-ignore\n        edge.endPoint = JSON.parse(pointsList);\n    }\n    // 这种转换方式，在自定义属性中不能与excludeProperties中的属性重名，否则将在转换过程中丢失\n    var excludeProperties = ['startPoint', 'endPoint', 'pointsList', 'text'];\n    Object.keys(element.properties).forEach(function (property) {\n        if (excludeProperties.indexOf(property) === -1) {\n            edge.properties[property] = element.properties[property];\n        }\n    });\n    return edge;\n}\n// 将Turbo元素数据转换为LogicFlow中的Node数据\nfunction convertFlowElementToNode(element) {\n    var properties = element.properties, key = element.key, type = element.type, bounds = element.bounds;\n    var x = properties.x, y = properties.y;\n    if (x === undefined) {\n        var _a = __read(bounds, 2), _b = _a[0], x1 = _b.x, y1 = _b.y, _c = _a[1], x2 = _c.x, y2 = _c.y;\n        x = (x1 + x2) / 2;\n        y = (y1 + y2) / 2;\n    }\n    var node = {\n        id: key,\n        type: TurboTypeMap[type],\n        x: x,\n        y: y,\n        text: properties.text,\n        properties: {},\n    };\n    // 这种转换方式，在自定义属性中不能与excludeProperties中的属性重名，否则将在转换过程中丢失\n    var excludeProperties = ['x', 'y', 'text'];\n    Object.keys(element.properties).forEach(function (property) {\n        if (excludeProperties.indexOf(property) === -1) {\n            node.properties[property] = element.properties[property];\n        }\n    });\n    return node;\n}\n// 将Turbo元素数据转换为LogicFlow数据\nexport function toLogicflowData(data) {\n    var lfData = {\n        nodes: [],\n        edges: [],\n    };\n    var list = data.flowElementList;\n    list && list.length > 0 && list.forEach(function (element) {\n        if (element.type === TurboType.SEQUENCE_FLOW) {\n            var edge = convertFlowElementToEdge(element);\n            lfData.edges.push(edge);\n        }\n        else {\n            var node = convertFlowElementToNode(element);\n            lfData.nodes.push(node);\n        }\n    });\n    return lfData;\n}\nvar TurboAdapter = /** @class */ (function () {\n    function TurboAdapter(_a) {\n        var lf = _a.lf;\n        lf.adapterIn = this.adapterIn;\n        lf.adapterOut = this.adapterOut;\n    }\n    TurboAdapter.prototype.adapterOut = function (logicflowData) {\n        if (logicflowData) {\n            return toTurboData(logicflowData);\n        }\n    };\n    TurboAdapter.prototype.adapterIn = function (turboData) {\n        if (turboData) {\n            return toLogicflowData(turboData);\n        }\n    };\n    TurboAdapter.pluginName = 'turboAdapter';\n    return TurboAdapter;\n}());\nexport default TurboAdapter;\n"]},"metadata":{},"sourceType":"module"}