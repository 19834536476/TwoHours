{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.map.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.error.cause.js\";\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) {\n    ar = ar.concat(__read(arguments[i]));\n  }\n\n  return ar;\n};\n\nvar DefalutNodeMenuKey = 'lf:defaultNodeMenu';\nvar DefalutEdgeMenuKey = 'lf:defaultEdgeMenu';\nvar DefalutGraphMenuKey = 'lf:defaultGraphMenu';\nvar DefalutSelectionMenuKey = 'lf:defaultSelectionMenu';\n\nvar Menu =\n/** @class */\nfunction () {\n  function Menu(_a) {\n    var _this = this;\n\n    var lf = _a.lf;\n    this.__menuDOM = document.createElement('ul');\n    this.lf = lf;\n    this.menuTypeMap = new Map();\n    this.init();\n\n    this.lf.setMenuConfig = function (config) {\n      _this.setMenuConfig(config);\n    };\n\n    this.lf.addMenuConfig = function (config) {\n      _this.addMenuConfig(config);\n    };\n\n    this.lf.setMenuByType = function (config) {\n      _this.setMenuByType(config);\n    };\n  }\n  /**\n   * 初始化设置默认内置菜单栏\n   */\n\n\n  Menu.prototype.init = function () {\n    var _this = this;\n\n    var defalutNodeMenu = [{\n      text: '删除',\n      callback: function callback(node) {\n        _this.lf.deleteNode(node.id);\n      }\n    }, {\n      text: '编辑文本',\n      callback: function callback(node) {\n        _this.lf.graphModel.editText(node.id);\n      }\n    }, {\n      text: '复制',\n      callback: function callback(node) {\n        _this.lf.cloneNode(node.id);\n      }\n    }];\n    this.menuTypeMap.set(DefalutNodeMenuKey, defalutNodeMenu);\n    var defaultEdgeMenu = [{\n      text: '删除',\n      callback: function callback(edge) {\n        _this.lf.deleteEdge(edge.id);\n      }\n    }, {\n      text: '编辑文本',\n      callback: function callback(edge) {\n        _this.lf.graphModel.editText(edge.id);\n      }\n    }];\n    this.menuTypeMap.set(DefalutEdgeMenuKey, defaultEdgeMenu);\n    this.menuTypeMap.set(DefalutGraphMenuKey, []);\n    var DefalutSelectionMenu = [{\n      text: '删除',\n      callback: function callback(elements) {\n        _this.lf.clearSelectElements();\n\n        elements.edges.forEach(function (edge) {\n          return _this.lf.deleteEdge(edge.id);\n        });\n        elements.nodes.forEach(function (node) {\n          return _this.lf.deleteNode(node.id);\n        });\n      }\n    }];\n    this.menuTypeMap.set(DefalutSelectionMenuKey, DefalutSelectionMenu);\n  };\n\n  Menu.prototype.render = function (lf, container) {\n    var _this = this;\n\n    this.__container = container;\n    this.__currentData = null; // 当前展示的菜单所属元素的model数据\n\n    this.__menuDOM.className = 'lf-menu';\n    container.appendChild(this.__menuDOM); // 将选项的click事件委托至menu容器\n    // 在捕获阶段拦截并执行\n\n    this.__menuDOM.addEventListener('click', function (event) {\n      event.stopPropagation();\n      var target = event.target; // 菜单有多层dom，需要精确获取菜单项所对应的dom\n      // 除菜单项dom外，应考虑两种情况\n      // 1. 菜单项的子元素 2. 菜单外层容器\n\n      while (Array.from(target.classList).indexOf('lf-menu-item') === -1 && Array.from(target.classList).indexOf('lf-menu') === -1) {\n        target = target.parentElement;\n      }\n\n      if (Array.from(target.classList).indexOf('lf-menu-item') > -1) {\n        // 如果点击区域在菜单项内\n        target.onclickCallback(_this.__currentData); // 点击后隐藏menu\n\n        _this.__menuDOM.style.display = 'none';\n        _this.__currentData = null;\n      } else {\n        // 如果点击区域不在菜单项内\n        console.warn('点击区域不在菜单项内，请检查代码！');\n      }\n    }, true); // 通过事件控制菜单的显示和隐藏\n\n\n    this.lf.on('node:contextmenu', function (_a) {\n      var data = _a.data,\n          position = _a.position;\n      var _b = position.domOverlayPosition,\n          x = _b.x,\n          y = _b.y;\n      var id = data.id;\n\n      var model = _this.lf.graphModel.getNodeModelById(id);\n\n      var menuList = [];\n\n      var typeMenus = _this.menuTypeMap.get(model.type); // 如果单个节点自定义了节点，以单个节点自定义为准\n\n\n      if (model && model.menu && Array.isArray(model.menu)) {\n        menuList = model.menu;\n      } else if (typeMenus) {\n        // 如果定义当前节点类型的元素\n        menuList = typeMenus;\n      } else {\n        // 最后取全局默认\n        menuList = _this.menuTypeMap.get(DefalutNodeMenuKey);\n      }\n\n      _this.__currentData = data;\n\n      _this.showMenu(x, y, menuList);\n    });\n    this.lf.on('edge:contextmenu', function (_a) {\n      var data = _a.data,\n          position = _a.position;\n      var _b = position.domOverlayPosition,\n          x = _b.x,\n          y = _b.y;\n      var id = data.id;\n\n      var model = _this.lf.graphModel.getEdgeModelById(id);\n\n      var menuList = [];\n\n      var typeMenus = _this.menuTypeMap.get(model.type); // 如果单个节点自定义了边\n\n\n      if (model && model.menu && Array.isArray(model.menu)) {\n        menuList = model.menu;\n      } else if (typeMenus) {\n        // 如果定义当前边类型的元素\n        menuList = typeMenus;\n      } else {\n        // 最后取全局默认\n        menuList = _this.menuTypeMap.get(DefalutEdgeMenuKey);\n      }\n\n      _this.__currentData = data;\n\n      _this.showMenu(x, y, menuList);\n    });\n    this.lf.on('blank:contextmenu', function (_a) {\n      var position = _a.position;\n\n      var menuList = _this.menuTypeMap.get(DefalutGraphMenuKey);\n\n      var _b = position.domOverlayPosition,\n          x = _b.x,\n          y = _b.y;\n\n      _this.showMenu(x, y, menuList);\n    });\n    this.lf.on('selection:contextmenu', function (_a) {\n      var data = _a.data,\n          position = _a.position;\n\n      var menuList = _this.menuTypeMap.get(DefalutSelectionMenuKey);\n\n      var _b = position.domOverlayPosition,\n          x = _b.x,\n          y = _b.y;\n      _this.__currentData = data;\n\n      _this.showMenu(x, y, menuList);\n    });\n    this.lf.on('node:mousedown', function () {\n      _this.__menuDOM.style.display = 'none';\n    });\n    this.lf.on('edge:click', function () {\n      _this.__menuDOM.style.display = 'none';\n    });\n    this.lf.on('blank:click', function () {\n      _this.__menuDOM.style.display = 'none';\n    });\n  };\n\n  Menu.prototype.destroy = function () {\n    var _a;\n\n    (_a = this === null || this === void 0 ? void 0 : this.__container) === null || _a === void 0 ? void 0 : _a.removeChild(this.__menuDOM);\n    this.__menuDOM = null;\n  };\n\n  Menu.prototype.showMenu = function (x, y, menuList) {\n    if (!menuList || !menuList.length) return;\n    var menu = this.__menuDOM; // 菜单容器不变，需要先清空内部的菜单项\n\n    menu.innerHTML = '';\n    menu.append.apply(menu, __spread(this.__getMenuDom(menuList))); // 菜单中没有项，不显示\n\n    if (!menu.children.length) return;\n    menu.style.display = 'block';\n    menu.style.top = y + \"px\";\n    menu.style.left = x + \"px\";\n  };\n  /**\n   * 设置指定类型元素的菜单\n   */\n\n\n  Menu.prototype.setMenuByType = function (config) {\n    if (!config.type || !config.menu) {\n      return;\n    }\n\n    this.menuTypeMap.set(config.type, config.menu);\n  };\n  /**\n   * 获取 Menu DOM\n   * @param list 菜单项\n   * @return 菜单项 DOM\n   */\n\n\n  Menu.prototype.__getMenuDom = function (list) {\n    var menuList = [];\n    list && list.length > 0 && list.forEach(function (item) {\n      var element = document.createElement('li');\n\n      if (item.className) {\n        element.className = \"lf-menu-item \" + item.className;\n      } else {\n        element.className = 'lf-menu-item';\n      }\n\n      if (item.icon === true) {\n        var icon = document.createElement('span');\n        icon.className = 'lf-menu-item-icon';\n        element.appendChild(icon);\n      }\n\n      var text = document.createElement('span');\n      text.className = 'lf-menu-item-text';\n\n      if (item.text) {\n        text.innerText = item.text;\n      }\n\n      element.appendChild(text);\n      element.onclickCallback = item.callback;\n      menuList.push(element);\n    });\n    return menuList;\n  }; // 复写菜单\n\n\n  Menu.prototype.setMenuConfig = function (config) {\n    if (!config) {\n      return;\n    } // node\n\n\n    config.nodeMenu !== undefined && this.menuTypeMap.set(DefalutNodeMenuKey, config.nodeMenu ? config.nodeMenu : []); // edge\n\n    config.edgeMenu !== undefined && this.menuTypeMap.set(DefalutEdgeMenuKey, config.edgeMenu ? config.edgeMenu : []); // graph\n\n    config.graphMenu !== undefined && this.menuTypeMap.set(DefalutGraphMenuKey, config.graphMenu ? config.graphMenu : []);\n  }; // 在默认菜单后面追加菜单项\n\n\n  Menu.prototype.addMenuConfig = function (config) {\n    if (!config) {\n      return;\n    } // 追加项时，只支持数组类型，对false不做操作\n\n\n    if (Array.isArray(config.nodeMenu)) {\n      var menuList = this.menuTypeMap.get(DefalutNodeMenuKey);\n      this.menuTypeMap.set(DefalutNodeMenuKey, menuList.concat(config.nodeMenu));\n    }\n\n    if (Array.isArray(config.edgeMenu)) {\n      var menuList = this.menuTypeMap.get(DefalutEdgeMenuKey);\n      this.menuTypeMap.set(DefalutEdgeMenuKey, menuList.concat(config.edgeMenu));\n    }\n\n    if (Array.isArray(config.graphMenu)) {\n      var menuList = this.menuTypeMap.get(DefalutGraphMenuKey);\n      this.menuTypeMap.set(DefalutGraphMenuKey, menuList.concat(config.graphMenu));\n    }\n  };\n  /**\n   * @deprecated\n   * 复写添加\n   */\n\n\n  Menu.prototype.changeMenuItem = function (type, config) {\n    if (type === 'add') this.addMenuConfig(config);else if (type === 'reset') this.setMenuConfig(config);else {\n      throw new Error('The first parameter of changeMenuConfig should be \\'add\\' or \\'reset\\'');\n    }\n  };\n\n  Menu.pluginName = 'menu';\n  return Menu;\n}();\n\nexport default Menu;\nexport { Menu };","map":{"version":3,"sources":["F:/Desktop/繁星教育/TH资料/two_hours_front/node_modules/@logicflow/extension/es/components/menu/index.js"],"names":["__read","o","n","m","Symbol","iterator","i","call","r","ar","e","next","done","push","value","error","__spread","arguments","length","concat","DefalutNodeMenuKey","DefalutEdgeMenuKey","DefalutGraphMenuKey","DefalutSelectionMenuKey","Menu","_a","_this","lf","__menuDOM","document","createElement","menuTypeMap","Map","init","setMenuConfig","config","addMenuConfig","setMenuByType","prototype","defalutNodeMenu","text","callback","node","deleteNode","id","graphModel","editText","cloneNode","set","defaultEdgeMenu","edge","deleteEdge","DefalutSelectionMenu","elements","clearSelectElements","edges","forEach","nodes","render","container","__container","__currentData","className","appendChild","addEventListener","event","stopPropagation","target","Array","from","classList","indexOf","parentElement","onclickCallback","style","display","console","warn","on","data","position","_b","domOverlayPosition","x","y","model","getNodeModelById","menuList","typeMenus","get","type","menu","isArray","showMenu","getEdgeModelById","destroy","removeChild","innerHTML","append","apply","__getMenuDom","children","top","left","list","item","element","icon","innerText","nodeMenu","undefined","edgeMenu","graphMenu","changeMenuItem","Error","pluginName"],"mappings":"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","sourcesContent":["var __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar DefalutNodeMenuKey = 'lf:defaultNodeMenu';\nvar DefalutEdgeMenuKey = 'lf:defaultEdgeMenu';\nvar DefalutGraphMenuKey = 'lf:defaultGraphMenu';\nvar DefalutSelectionMenuKey = 'lf:defaultSelectionMenu';\nvar Menu = /** @class */ (function () {\n    function Menu(_a) {\n        var _this = this;\n        var lf = _a.lf;\n        this.__menuDOM = document.createElement('ul');\n        this.lf = lf;\n        this.menuTypeMap = new Map();\n        this.init();\n        this.lf.setMenuConfig = function (config) {\n            _this.setMenuConfig(config);\n        };\n        this.lf.addMenuConfig = function (config) {\n            _this.addMenuConfig(config);\n        };\n        this.lf.setMenuByType = function (config) {\n            _this.setMenuByType(config);\n        };\n    }\n    /**\n     * 初始化设置默认内置菜单栏\n     */\n    Menu.prototype.init = function () {\n        var _this = this;\n        var defalutNodeMenu = [\n            {\n                text: '删除',\n                callback: function (node) {\n                    _this.lf.deleteNode(node.id);\n                },\n            },\n            {\n                text: '编辑文本',\n                callback: function (node) {\n                    _this.lf.graphModel.editText(node.id);\n                },\n            },\n            {\n                text: '复制',\n                callback: function (node) {\n                    _this.lf.cloneNode(node.id);\n                },\n            },\n        ];\n        this.menuTypeMap.set(DefalutNodeMenuKey, defalutNodeMenu);\n        var defaultEdgeMenu = [\n            {\n                text: '删除',\n                callback: function (edge) {\n                    _this.lf.deleteEdge(edge.id);\n                },\n            },\n            {\n                text: '编辑文本',\n                callback: function (edge) {\n                    _this.lf.graphModel.editText(edge.id);\n                },\n            },\n        ];\n        this.menuTypeMap.set(DefalutEdgeMenuKey, defaultEdgeMenu);\n        this.menuTypeMap.set(DefalutGraphMenuKey, []);\n        var DefalutSelectionMenu = [\n            {\n                text: '删除',\n                callback: function (elements) {\n                    _this.lf.clearSelectElements();\n                    elements.edges.forEach(function (edge) { return _this.lf.deleteEdge(edge.id); });\n                    elements.nodes.forEach(function (node) { return _this.lf.deleteNode(node.id); });\n                },\n            },\n        ];\n        this.menuTypeMap.set(DefalutSelectionMenuKey, DefalutSelectionMenu);\n    };\n    Menu.prototype.render = function (lf, container) {\n        var _this = this;\n        this.__container = container;\n        this.__currentData = null; // 当前展示的菜单所属元素的model数据\n        this.__menuDOM.className = 'lf-menu';\n        container.appendChild(this.__menuDOM);\n        // 将选项的click事件委托至menu容器\n        // 在捕获阶段拦截并执行\n        this.__menuDOM.addEventListener('click', function (event) {\n            event.stopPropagation();\n            var target = event.target;\n            // 菜单有多层dom，需要精确获取菜单项所对应的dom\n            // 除菜单项dom外，应考虑两种情况\n            // 1. 菜单项的子元素 2. 菜单外层容器\n            while (Array.from(target.classList).indexOf('lf-menu-item') === -1 && Array.from(target.classList).indexOf('lf-menu') === -1) {\n                target = target.parentElement;\n            }\n            if (Array.from(target.classList).indexOf('lf-menu-item') > -1) {\n                // 如果点击区域在菜单项内\n                target.onclickCallback(_this.__currentData);\n                // 点击后隐藏menu\n                _this.__menuDOM.style.display = 'none';\n                _this.__currentData = null;\n            }\n            else {\n                // 如果点击区域不在菜单项内\n                console.warn('点击区域不在菜单项内，请检查代码！');\n            }\n        }, true);\n        // 通过事件控制菜单的显示和隐藏\n        this.lf.on('node:contextmenu', function (_a) {\n            var data = _a.data, position = _a.position;\n            var _b = position.domOverlayPosition, x = _b.x, y = _b.y;\n            var id = data.id;\n            var model = _this.lf.graphModel.getNodeModelById(id);\n            var menuList = [];\n            var typeMenus = _this.menuTypeMap.get(model.type);\n            // 如果单个节点自定义了节点，以单个节点自定义为准\n            if (model && model.menu && Array.isArray(model.menu)) {\n                menuList = model.menu;\n            }\n            else if (typeMenus) { // 如果定义当前节点类型的元素\n                menuList = typeMenus;\n            }\n            else { // 最后取全局默认\n                menuList = _this.menuTypeMap.get(DefalutNodeMenuKey);\n            }\n            _this.__currentData = data;\n            _this.showMenu(x, y, menuList);\n        });\n        this.lf.on('edge:contextmenu', function (_a) {\n            var data = _a.data, position = _a.position;\n            var _b = position.domOverlayPosition, x = _b.x, y = _b.y;\n            var id = data.id;\n            var model = _this.lf.graphModel.getEdgeModelById(id);\n            var menuList = [];\n            var typeMenus = _this.menuTypeMap.get(model.type);\n            // 如果单个节点自定义了边\n            if (model && model.menu && Array.isArray(model.menu)) {\n                menuList = model.menu;\n            }\n            else if (typeMenus) { // 如果定义当前边类型的元素\n                menuList = typeMenus;\n            }\n            else { // 最后取全局默认\n                menuList = _this.menuTypeMap.get(DefalutEdgeMenuKey);\n            }\n            _this.__currentData = data;\n            _this.showMenu(x, y, menuList);\n        });\n        this.lf.on('blank:contextmenu', function (_a) {\n            var position = _a.position;\n            var menuList = _this.menuTypeMap.get(DefalutGraphMenuKey);\n            var _b = position.domOverlayPosition, x = _b.x, y = _b.y;\n            _this.showMenu(x, y, menuList);\n        });\n        this.lf.on('selection:contextmenu', function (_a) {\n            var data = _a.data, position = _a.position;\n            var menuList = _this.menuTypeMap.get(DefalutSelectionMenuKey);\n            var _b = position.domOverlayPosition, x = _b.x, y = _b.y;\n            _this.__currentData = data;\n            _this.showMenu(x, y, menuList);\n        });\n        this.lf.on('node:mousedown', function () {\n            _this.__menuDOM.style.display = 'none';\n        });\n        this.lf.on('edge:click', function () {\n            _this.__menuDOM.style.display = 'none';\n        });\n        this.lf.on('blank:click', function () {\n            _this.__menuDOM.style.display = 'none';\n        });\n    };\n    Menu.prototype.destroy = function () {\n        var _a;\n        (_a = this === null || this === void 0 ? void 0 : this.__container) === null || _a === void 0 ? void 0 : _a.removeChild(this.__menuDOM);\n        this.__menuDOM = null;\n    };\n    Menu.prototype.showMenu = function (x, y, menuList) {\n        if (!menuList || !menuList.length)\n            return;\n        var menu = this.__menuDOM;\n        // 菜单容器不变，需要先清空内部的菜单项\n        menu.innerHTML = '';\n        menu.append.apply(menu, __spread(this.__getMenuDom(menuList)));\n        // 菜单中没有项，不显示\n        if (!menu.children.length)\n            return;\n        menu.style.display = 'block';\n        menu.style.top = y + \"px\";\n        menu.style.left = x + \"px\";\n    };\n    /**\n     * 设置指定类型元素的菜单\n     */\n    Menu.prototype.setMenuByType = function (config) {\n        if (!config.type || !config.menu) {\n            return;\n        }\n        this.menuTypeMap.set(config.type, config.menu);\n    };\n    /**\n     * 获取 Menu DOM\n     * @param list 菜单项\n     * @return 菜单项 DOM\n     */\n    Menu.prototype.__getMenuDom = function (list) {\n        var menuList = [];\n        list && list.length > 0 && list.forEach(function (item) {\n            var element = document.createElement('li');\n            if (item.className) {\n                element.className = \"lf-menu-item \" + item.className;\n            }\n            else {\n                element.className = 'lf-menu-item';\n            }\n            if (item.icon === true) {\n                var icon = document.createElement('span');\n                icon.className = 'lf-menu-item-icon';\n                element.appendChild(icon);\n            }\n            var text = document.createElement('span');\n            text.className = 'lf-menu-item-text';\n            if (item.text) {\n                text.innerText = item.text;\n            }\n            element.appendChild(text);\n            element.onclickCallback = item.callback;\n            menuList.push(element);\n        });\n        return menuList;\n    };\n    // 复写菜单\n    Menu.prototype.setMenuConfig = function (config) {\n        if (!config) {\n            return;\n        }\n        // node\n        config.nodeMenu !== undefined\n            && this.menuTypeMap.set(DefalutNodeMenuKey, config.nodeMenu ? config.nodeMenu : []);\n        // edge\n        config.edgeMenu !== undefined\n            && this.menuTypeMap.set(DefalutEdgeMenuKey, config.edgeMenu ? config.edgeMenu : []);\n        // graph\n        config.graphMenu !== undefined\n            && this.menuTypeMap.set(DefalutGraphMenuKey, config.graphMenu ? config.graphMenu : []);\n    };\n    // 在默认菜单后面追加菜单项\n    Menu.prototype.addMenuConfig = function (config) {\n        if (!config) {\n            return;\n        }\n        // 追加项时，只支持数组类型，对false不做操作\n        if (Array.isArray(config.nodeMenu)) {\n            var menuList = this.menuTypeMap.get(DefalutNodeMenuKey);\n            this.menuTypeMap.set(DefalutNodeMenuKey, menuList.concat(config.nodeMenu));\n        }\n        if (Array.isArray(config.edgeMenu)) {\n            var menuList = this.menuTypeMap.get(DefalutEdgeMenuKey);\n            this.menuTypeMap.set(DefalutEdgeMenuKey, menuList.concat(config.edgeMenu));\n        }\n        if (Array.isArray(config.graphMenu)) {\n            var menuList = this.menuTypeMap.get(DefalutGraphMenuKey);\n            this.menuTypeMap.set(DefalutGraphMenuKey, menuList.concat(config.graphMenu));\n        }\n    };\n    /**\n     * @deprecated\n     * 复写添加\n     */\n    Menu.prototype.changeMenuItem = function (type, config) {\n        if (type === 'add')\n            this.addMenuConfig(config);\n        else if (type === 'reset')\n            this.setMenuConfig(config);\n        else {\n            throw new Error('The first parameter of changeMenuConfig should be \\'add\\' or \\'reset\\'');\n        }\n    };\n    Menu.pluginName = 'menu';\n    return Menu;\n}());\nexport default Menu;\nexport { Menu, };\n"]},"metadata":{},"sourceType":"module"}