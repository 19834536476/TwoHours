{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { h, DiamondNode, DiamondNodeModel } from '@logicflow/core';\nimport ControlGroup from '../Control/ControlGroup';\nimport Polygon from '../BasicShape/Polygon';\n\nvar DiamondResizeModel =\n/** @class */\nfunction (_super) {\n  __extends(DiamondResizeModel, _super);\n\n  function DiamondResizeModel(data, graphModel) {\n    var _this = _super.call(this, data, graphModel) || this;\n\n    var nodeSize = _this.properties.nodeSize;\n\n    if (nodeSize) {\n      _this.rx = nodeSize.rx;\n      _this.ry = nodeSize.ry;\n    }\n\n    return _this;\n  }\n\n  DiamondResizeModel.prototype.initNodeData = function (data) {\n    _super.prototype.initNodeData.call(this, data);\n\n    this.minWidth = 30;\n    this.minHeight = 30;\n    this.maxWidth = 2000;\n    this.maxHeight = 2000;\n    this.gridSize = 1;\n  };\n\n  DiamondResizeModel.prototype.getOutlineStyle = function () {\n    var style = _super.prototype.getOutlineStyle.call(this);\n\n    style.stroke = 'none';\n\n    if (style.hover) {\n      style.hover.stroke = 'none';\n    }\n\n    return style;\n  };\n\n  DiamondResizeModel.prototype.getResizeOutlineStyle = function () {\n    return {\n      stroke: '#000000',\n      strokeWidth: 1,\n      strokeDasharray: '3,3'\n    };\n  };\n\n  DiamondResizeModel.prototype.getControlPointStyle = function () {\n    return {\n      width: 7,\n      height: 7,\n      fill: '#FFFFFF',\n      stroke: '#000000'\n    };\n  };\n\n  return DiamondResizeModel;\n}(DiamondNodeModel);\n\nvar DiamondResizeView =\n/** @class */\nfunction (_super) {\n  __extends(DiamondResizeView, _super);\n\n  function DiamondResizeView() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DiamondResizeView.prototype.getControlGroup = function () {\n    var _a = this.props,\n        model = _a.model,\n        graphModel = _a.graphModel;\n    return h(ControlGroup, {\n      model: model,\n      graphModel: graphModel\n    });\n  }; // getResizeShape绘制图形，功能等同于基础菱形的getShape功能，可以通过复写此方法，进行节点自定义\n\n\n  DiamondResizeView.prototype.getResizeShape = function () {\n    var model = this.props.model;\n    var points = model.points;\n    var style = model.getNodeStyle();\n    return h(\"g\", null, h(Polygon, __assign({}, style, {\n      points: points\n    })));\n  };\n\n  DiamondResizeView.prototype.getShape = function () {\n    var isSelected = this.props.model.isSelected;\n    return h(\"g\", null, this.getResizeShape(), isSelected ? this.getControlGroup() : '');\n  };\n\n  return DiamondResizeView;\n}(DiamondNode);\n\nvar EllipseResize = {\n  type: 'diamond',\n  view: DiamondResizeView,\n  model: DiamondResizeModel\n};\nexport default EllipseResize;","map":{"version":3,"sources":["F:/Desktop/繁星教育/TH资料/two_hours_front/node_modules/@logicflow/extension/es/NodeResize/Node/DiamondResize.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","h","DiamondNode","DiamondNodeModel","ControlGroup","Polygon","DiamondResizeModel","_super","data","graphModel","_this","nodeSize","properties","rx","ry","initNodeData","minWidth","minHeight","maxWidth","maxHeight","gridSize","getOutlineStyle","style","stroke","hover","getResizeOutlineStyle","strokeWidth","strokeDasharray","getControlPointStyle","width","height","fill","DiamondResizeView","getControlGroup","_a","props","model","getResizeShape","points","getNodeStyle","getShape","isSelected","EllipseResize","type","view"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { h, DiamondNode, DiamondNodeModel } from '@logicflow/core';\nimport ControlGroup from '../Control/ControlGroup';\nimport Polygon from '../BasicShape/Polygon';\nvar DiamondResizeModel = /** @class */ (function (_super) {\n    __extends(DiamondResizeModel, _super);\n    function DiamondResizeModel(data, graphModel) {\n        var _this = _super.call(this, data, graphModel) || this;\n        var nodeSize = _this.properties.nodeSize;\n        if (nodeSize) {\n            _this.rx = nodeSize.rx;\n            _this.ry = nodeSize.ry;\n        }\n        return _this;\n    }\n    DiamondResizeModel.prototype.initNodeData = function (data) {\n        _super.prototype.initNodeData.call(this, data);\n        this.minWidth = 30;\n        this.minHeight = 30;\n        this.maxWidth = 2000;\n        this.maxHeight = 2000;\n        this.gridSize = 1;\n    };\n    DiamondResizeModel.prototype.getOutlineStyle = function () {\n        var style = _super.prototype.getOutlineStyle.call(this);\n        style.stroke = 'none';\n        if (style.hover) {\n            style.hover.stroke = 'none';\n        }\n        return style;\n    };\n    DiamondResizeModel.prototype.getResizeOutlineStyle = function () {\n        return {\n            stroke: '#000000',\n            strokeWidth: 1,\n            strokeDasharray: '3,3',\n        };\n    };\n    DiamondResizeModel.prototype.getControlPointStyle = function () {\n        return {\n            width: 7,\n            height: 7,\n            fill: '#FFFFFF',\n            stroke: '#000000',\n        };\n    };\n    return DiamondResizeModel;\n}(DiamondNodeModel));\nvar DiamondResizeView = /** @class */ (function (_super) {\n    __extends(DiamondResizeView, _super);\n    function DiamondResizeView() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DiamondResizeView.prototype.getControlGroup = function () {\n        var _a = this.props, model = _a.model, graphModel = _a.graphModel;\n        return (h(ControlGroup, { model: model, graphModel: graphModel }));\n    };\n    // getResizeShape绘制图形，功能等同于基础菱形的getShape功能，可以通过复写此方法，进行节点自定义\n    DiamondResizeView.prototype.getResizeShape = function () {\n        var model = this.props.model;\n        var points = model.points;\n        var style = model.getNodeStyle();\n        return (h(\"g\", null,\n            h(Polygon, __assign({}, style, { points: points }))));\n    };\n    DiamondResizeView.prototype.getShape = function () {\n        var isSelected = this.props.model.isSelected;\n        return (h(\"g\", null,\n            this.getResizeShape(),\n            isSelected ? this.getControlGroup() : ''));\n    };\n    return DiamondResizeView;\n}(DiamondNode));\nvar EllipseResize = {\n    type: 'diamond',\n    view: DiamondResizeView,\n    model: DiamondResizeModel,\n};\nexport default EllipseResize;\n"]},"metadata":{},"sourceType":"module"}