{"ast":null,"code":"//\n//\n//\n//\n//\n//\n// 引入导出Excel表格依赖\nimport XLSX from \"xlsx\";\nimport FileSaver from \"file-saver\";\nexport default {\n  name: \"TableExport\",\n  props: ['tableId'],\n  data: function data() {\n    return {\n      filename: '',\n      lastName: '.xlsx'\n    };\n  },\n  methods: {\n    exportSubmit: function exportSubmit() {\n      var _this = this;\n\n      // 设置默认文件名\n      this.filename = 'table'; // 获取文件名\n\n      this.$prompt('请输入文件名', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        inputPattern: /[\\u4e00-\\u9fa5A-Za-z0-9\\s.]+/,\n        // 正则-至少一个字符\n        inputErrorMessage: '文件名格式不正确！'\n      }).then(function (_ref) {\n        var value = _ref.value;\n        // 添加后缀\n        _this.filename = value + _this.lastName; // 导出文件\n\n        _this.exportExcel();\n      }).catch(function () {\n        _this.$message({\n          type: 'info',\n          message: '取消操作'\n        });\n      });\n    },\n    // 导出表格\n    exportExcel: function exportExcel() {\n      /* 从表生成工作簿对象 */\n      var wb = XLSX.utils.table_to_book(document.getElementById(this.tableId), {\n        raw: true\n      });\n      /* 获取二进制字符串作为输出 */\n\n      var wbOut = XLSX.write(wb, {\n        bookType: \"xlsx\",\n        bookSST: true,\n        type: \"array\"\n      });\n\n      try {\n        //Blob 对象表示一个不可变、原始数据的类文件对象。\n        //Blob 表示的不一定是JavaScript原生格式的数据。\n        //File 接口基于Blob，继承了 blob 的功能并将其扩展使其支持用户系统上的文件。\n        //返回一个新创建的 Blob 对象，其内容由参数中给定的数组串联组成。\n        FileSaver.saveAs(new Blob([wbOut], {\n          type: \"application/octet-stream\"\n        }), this.filename);\n      } catch (e) {\n        if (typeof console !== \"undefined\") console.log(e, wbOut);\n      }\n\n      return wbOut;\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;AAOA;AACA;AACA;AACA;AACAA,qBADA;AAEAC,UACA,SADA,CAFA;AAKAC,MALA,kBAKA;AACA;AACAC,kBADA;AAEAC;AAFA;AAIA,GAVA;AAWAC;AACAC,gBADA,0BACA;AAAA;;AACA;AACA,8BAFA,CAGA;;AACA;AACAC,+BADA;AAEAC,8BAFA;AAGAC,oDAHA;AAGA;AACAC;AAJA,SAKAC,IALA,CAKA;AAAA;AACA;AACA,gDAFA,CAGA;;AACA;AACA,OAVA,EAUAC,KAVA,CAUA;AACA;AACAC,sBADA;AAEAC;AAFA;AAIA,OAfA;AAgBA,KArBA;AAsBA;AACAC,eAvBA,yBAuBA;AACA;AACA;AAAAC;AAAA;AACA;;AACA;AACAC,wBADA;AAEAC,qBAFA;AAGAL;AAHA;;AAKA;AACA;AACA;AACA;AACA;AACAM;AAAAN;AAAA;AACA,OANA,CAMA;AACA;AACA;;AACA;AACA;AA1CA;AAXA","names":["name","props","data","filename","lastName","methods","exportSubmit","confirmButtonText","cancelButtonText","inputPattern","inputErrorMessage","then","catch","type","message","exportExcel","raw","bookType","bookSST","FileSaver"],"sourceRoot":"src/components","sources":["TableExport.vue"],"sourcesContent":["<template>\r\n    <span>\r\n        <el-button type=\"primary\" plain @click=\"exportSubmit\">导出表格</el-button>\r\n    </span>\r\n</template>\r\n\r\n<script>\r\n    // 引入导出Excel表格依赖\r\n    import XLSX from \"xlsx\";\r\n    import FileSaver from \"file-saver\";\r\n    export default {\r\n        name: \"TableExport\",\r\n        props:[\r\n            'tableId',\r\n        ],\r\n        data(){\r\n            return{\r\n                filename:'',\r\n                lastName:'.xlsx',\r\n            }\r\n        },\r\n        methods:{\r\n            exportSubmit(){\r\n                // 设置默认文件名\r\n                this.filename = 'table';\r\n                // 获取文件名\r\n                this.$prompt('请输入文件名', '提示', {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    inputPattern: /[\\u4e00-\\u9fa5A-Za-z0-9\\s.]+/,    // 正则-至少一个字符\r\n                    inputErrorMessage: '文件名格式不正确！'\r\n                }).then(({ value }) => {\r\n                    // 添加后缀\r\n                    this.filename = value + this.lastName;\r\n                    // 导出文件\r\n                    this.exportExcel();\r\n                }).catch(() => {\r\n                    this.$message({\r\n                        type: 'info',\r\n                        message: '取消操作'\r\n                    });\r\n                });\r\n            },\r\n            // 导出表格\r\n            exportExcel() {\r\n                /* 从表生成工作簿对象 */\r\n                let wb = XLSX.utils.table_to_book(document.getElementById(this.tableId),{raw:true});\r\n                /* 获取二进制字符串作为输出 */\r\n                let wbOut = XLSX.write(wb, {\r\n                    bookType: \"xlsx\",\r\n                    bookSST: true,\r\n                    type: \"array\"\r\n                });\r\n                try {\r\n                    //Blob 对象表示一个不可变、原始数据的类文件对象。\r\n                    //Blob 表示的不一定是JavaScript原生格式的数据。\r\n                    //File 接口基于Blob，继承了 blob 的功能并将其扩展使其支持用户系统上的文件。\r\n                    //返回一个新创建的 Blob 对象，其内容由参数中给定的数组串联组成。\r\n                    FileSaver.saveAs(new Blob([wbOut], { type: \"application/octet-stream\" }), this.filename);\r\n                } catch (e) {\r\n                    if (typeof console !== \"undefined\") console.log(e, wbOut);\r\n                }\r\n                return wbOut;\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}