{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Ckeditor4 from \"@/components/Ckeditor4\";\nexport default {\n  name: \"ExamPaperManage\",\n  components: {\n    Ckeditor4: Ckeditor4\n  },\n  data: function data() {\n    return {\n      exam: {},\n      // 考试信息\n      subjects: [],\n      // 试题集合\n      activeNames: [],\n      // 试题激活项\n      showEditSubject: false,\n      // 编辑试题表单\n      editSubjectData: {\n        // 编辑试题数据模型\n        // 基本信息\n        paperId: undefined,\n        subjectId: undefined,\n        subjectNum: undefined,\n        subjectType: undefined,\n        // 题目内容\n        choice: {},\n        filling: {},\n        questionAnswer: {},\n        trueFalse: {},\n        // 项数组\n        choiceOptions: [],\n        fillingBlanks: []\n      },\n      // 试题编辑状态\n      isEditStatue: false,\n      // 对话框标题\n      dialogTitle: ''\n    };\n  },\n  created: function created() {\n    this.getExam();\n  },\n  methods: {\n    // 查询考试数据\n    getExam: function getExam() {\n      var _this = this;\n\n      var exam = {\n        examId: this.$route.params.examId\n      };\n      this.$axios.post(\"/Exam/getExamById\", exam).then(function (res) {\n        if (res.data.flag) {\n          /* 保存公告数据 */\n          _this.exam = res.data.data;\n\n          _this.getSubject();\n        } else {\n          // 服务故障\n          _this.$message.error(\"信息获取失败！\");\n        }\n      });\n    },\n    // 查询试题数据\n    getSubject: function getSubject() {\n      var _this2 = this;\n\n      this.$axios.post(\"/Paper/getPaperByExamId\", this.exam).then(function (res) {\n        if (res.data.flag) {\n          /* 保存公告数据 */\n          _this2.subjects = res.data.data;\n        } else {\n          // 服务故障\n          _this2.$message.error(\"信息获取失败！\");\n        }\n      });\n    },\n    // 全部折叠\n    allHidden: function allHidden() {\n      this.activeNames = [];\n    },\n    // 全部展开\n    allShow: function allShow() {\n      this.allHidden();\n      /* 激活全部题组 */\n\n      for (var i = 0; i < this.subjects.length; i++) {\n        this.$set(this.activeNames, i, i);\n      }\n    },\n    // 展示区变化\n    handleChange: function handleChange(val) {// console.log(val)\n    },\n    // 添加选择题\n    addChoice: function addChoice() {\n      // 检查考试是否开启\n      var currentDate = new Date();\n\n      if (currentDate < Date.parse(this.exam.beginDate)) {\n        // 数据清理\n        if (this.isEditStatue) {\n          // 残存的编辑状态\n          // 在用户未提交编辑内容时，会停留在编辑状态，故要状态重置\n          this.resetForm();\n          this.isEditStatue = false;\n        } // 确定题型并初始化题型数据-已有对应题目数据则不再初始化\n\n\n        if (this.editSubjectData.subjectType !== 1) {\n          this.editSubjectData.subjectType = 1; // 选择题\n\n          if (this.subjects.length > 0) {\n            // 题号增加\n            this.editSubjectData.subjectNum = this.subjects[this.subjects.length - 1].subjectNum + 1;\n          } else {\n            this.editSubjectData.subjectNum = 1;\n          }\n\n          this.editSubjectData.choice = {\n            // 题目数据初始化\n            content: '',\n            answerNum: 4,\n            analysis: '',\n            score: 5\n          };\n          this.editSubjectData.choiceOptions = [// 选项列表默认4个选项\n          {\n            num: 1,\n            content: '',\n            isAnswer: 0,\n            isAnswerBool: false\n          }, {\n            num: 2,\n            content: '',\n            isAnswer: 0,\n            isAnswerBool: false\n          }, {\n            num: 3,\n            content: '',\n            isAnswer: 0,\n            isAnswerBool: false\n          }, {\n            num: 4,\n            content: '',\n            isAnswer: 0,\n            isAnswerBool: false\n          }];\n        } // 启动表单\n\n\n        this.dialogTitle = \"选择题\";\n        this.showEditSubject = true;\n      } else {\n        this.$message.warning(\"为保护数据安全，考试开启后将无法编辑试题\");\n      }\n    },\n    // 添加选项\n    addOption: function addOption() {\n      var number = 0;\n\n      if (this.editSubjectData.choiceOptions.length > 0) {\n        number = this.editSubjectData.choiceOptions[this.editSubjectData.choiceOptions.length - 1].num + 1;\n        this.editSubjectData.choice.answerNum++;\n      } else {\n        // 无选项\n        number = 1;\n        this.editSubjectData.choice.answerNum = 1;\n      }\n\n      this.$set(this.editSubjectData.choiceOptions, this.editSubjectData.choiceOptions.length, {\n        num: number,\n        content: '',\n        isAnswer: 0,\n        isAnswerBool: false\n      });\n    },\n    // 移除选项\n    deleteOption: function deleteOption(index) {\n      this.$delete(this.editSubjectData.choiceOptions, index);\n      this.editSubjectData.choice.answerNum--;\n    },\n    // 添加填空题\n    addFilling: function addFilling() {\n      // 检查考试是否开启\n      var currentDate = new Date();\n\n      if (currentDate < Date.parse(this.exam.beginDate)) {\n        // 数据清理\n        if (this.isEditStatue) {\n          // 残存的编辑状态\n          // 在用户未提交编辑内容时，会停留在编辑状态，故要状态重置\n          this.resetForm();\n          this.isEditStatue = false;\n        } // 确定题型并初始化题型数据-已有对应题目数据则不再初始化\n\n\n        if (this.editSubjectData.subjectType !== 2) {\n          this.editSubjectData.subjectType = 2; // 填空题\n\n          if (this.subjects.length > 0) {\n            // 题号增加\n            this.editSubjectData.subjectNum = this.subjects[this.subjects.length - 1].subjectNum + 1;\n          } else {\n            this.editSubjectData.subjectNum = 1;\n          }\n\n          this.editSubjectData.filling = {\n            // 题目数据初始化\n            content: '',\n            answerNum: 1,\n            analysis: '',\n            score: 5,\n            isOrder: 0,\n            isCapital: 0,\n            isOrderBool: false,\n            isCapitalBool: false\n          };\n          this.editSubjectData.fillingBlanks = [// 填空默认一个答案\n          {\n            num: 1,\n            content: ''\n          }];\n        } // 启动表单\n\n\n        this.dialogTitle = \"填空题\";\n        this.showEditSubject = true;\n      } else {\n        this.$message.warning(\"为保护数据安全，考试开启后将无法编辑试题\");\n      }\n    },\n    // 添加空项\n    addBlank: function addBlank() {\n      var number = 0;\n\n      if (this.editSubjectData.fillingBlanks.length > 0) {\n        number = this.editSubjectData.fillingBlanks[this.editSubjectData.fillingBlanks.length - 1].num + 1;\n        this.editSubjectData.filling.answerNum++;\n      } else {\n        // 无选项\n        number = 1;\n        this.editSubjectData.filling.answerNum = 1;\n      }\n\n      this.$set(this.editSubjectData.fillingBlanks, this.editSubjectData.fillingBlanks.length, {\n        num: number,\n        content: ''\n      });\n    },\n    // 移除空项\n    deleteBlank: function deleteBlank(index) {\n      this.$delete(this.editSubjectData.fillingBlanks, index);\n      this.editSubjectData.filling.answerNum--;\n    },\n    // 添加判断题\n    addTrueFalse: function addTrueFalse() {\n      // 检查考试是否开启\n      var currentDate = new Date();\n\n      if (currentDate < Date.parse(this.exam.beginDate)) {\n        // 数据清理\n        if (this.isEditStatue) {\n          // 残存的编辑状态\n          // 在用户未提交编辑内容时，会停留在编辑状态，故要状态重置\n          this.resetForm();\n          this.isEditStatue = false;\n        } // 确定题型并初始化题型数据-已有对应题目数据则不再初始化\n\n\n        if (this.editSubjectData.subjectType !== 3) {\n          this.editSubjectData.subjectType = 3; // 判断题\n\n          if (this.subjects.length > 0) {\n            // 题号增加\n            this.editSubjectData.subjectNum = this.subjects[this.subjects.length - 1].subjectNum + 1;\n          } else {\n            this.editSubjectData.subjectNum = 1;\n          }\n\n          this.editSubjectData.trueFalse = {\n            // 题目数据初始化\n            content: '',\n            answer: '1',\n            analysis: '',\n            score: 5,\n            answerStr: '是',\n            // 默认答案正确\n            answerBool: true\n          };\n        } // 启动表单\n\n\n        this.dialogTitle = \"判断题\";\n        this.showEditSubject = true;\n      } else {\n        this.$message.warning(\"为保护数据安全，考试开启后将无法编辑试题\");\n      }\n    },\n    // 添加简答题\n    addQuestionAnswer: function addQuestionAnswer() {\n      // 检查考试是否开启\n      var currentDate = new Date();\n\n      if (currentDate < Date.parse(this.exam.beginDate)) {\n        // 数据清理\n        if (this.isEditStatue) {\n          // 残存的编辑状态\n          // 在用户未提交编辑内容时，会停留在编辑状态，故要状态重置\n          this.resetForm();\n          this.isEditStatue = false;\n        } // 确定题型并初始化题型数据-已有对应题目数据则不再初始化\n\n\n        if (this.editSubjectData.subjectType !== 4) {\n          this.editSubjectData.subjectType = 4; // 简答题\n\n          if (this.subjects.length > 0) {\n            // 题号增加\n            this.editSubjectData.subjectNum = this.subjects[this.subjects.length - 1].subjectNum + 1;\n          } else {\n            this.editSubjectData.subjectNum = 1;\n          }\n\n          this.editSubjectData.questionAnswer = {\n            // 题目数据初始化\n            content: '',\n            answer: '',\n            analysis: '',\n            score: 10\n          };\n        } // 启动表单\n\n\n        this.dialogTitle = \"简答题\";\n        this.showEditSubject = true;\n      } else {\n        this.$message.warning(\"为保护数据安全，考试开启后将无法编辑试题\");\n      }\n    },\n    // 编辑题目\n    editSubject: function editSubject(subject) {\n      // 检查考试是否开启\n      var currentDate = new Date();\n\n      if (currentDate < Date.parse(this.exam.beginDate)) {\n        this.editSubjectData.paperId = subject.paperId;\n        this.editSubjectData.subjectId = subject.subjectId;\n        this.editSubjectData.subjectType = subject.subjectType;\n        this.editSubjectData.subjectNum = subject.subjectNum;\n\n        switch (subject.subjectType) {\n          case 1:\n            // 选择\n            this.editSubjectData.choice = subject.choice;\n            this.editSubjectData.choiceOptions = subject.choiceOptions;\n            this.dialogTitle = \"选择题\";\n            this.isEditStatue = true; // 启动编辑模式\n\n            break;\n\n          case 2:\n            // 填空\n            this.editSubjectData.filling = subject.filling;\n            this.editSubjectData.fillingBlanks = subject.fillingBlanks;\n            this.dialogTitle = \"填空题\";\n            this.isEditStatue = true; // 启动编辑模式\n\n            break;\n\n          case 3:\n            // 判断\n            this.editSubjectData.trueFalse = subject.trueFalse;\n            this.dialogTitle = \"判断题\";\n            this.isEditStatue = true; // 启动编辑模式\n\n            break;\n\n          case 4:\n            // 简答\n            this.editSubjectData.questionAnswer = subject.questionAnswer;\n            this.dialogTitle = \"简答题\";\n            this.isEditStatue = true; // 启动编辑模式\n\n            break;\n        }\n\n        this.showEditSubject = true; // 打开对话框\n      } else {\n        this.$message.warning(\"为保护数据安全，考试开启后将无法编辑试题\");\n      }\n    },\n    // 删除题目\n    deleteSubject: function deleteSubject(subject) {\n      var _this3 = this;\n\n      // 检查考试是否开启\n      var currentDate = new Date();\n\n      if (currentDate < Date.parse(this.exam.beginDate)) {\n        // 弹框确认\n        this.$confirm('此操作将删除该题目, 是否继续?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(function () {\n          var paper = {\n            paperId: subject.paperId\n          }; // 执行删除\n\n          _this3.$axios.post(\"/Paper/deletePaperById\", paper).then(function (res) {\n            if (res.data.flag) {\n              // 删除成功，刷新数据\n              _this3.getSubject();\n\n              _this3.$message.success('删除成功！');\n            } else {\n              _this3.$message.error('删除失败！');\n            }\n          });\n        }).catch(function () {\n          // 取消删除\n          _this3.$message.info('取消删除');\n        });\n      } else {\n        this.$message.warning(\"为保护数据安全，考试开启后将无法编辑试题\");\n      }\n    },\n    // 试题编辑提交\n    submitSubject: function submitSubject(subjectOrg) {\n      var _this4 = this;\n\n      // 数据处理\n      if (subjectOrg.subjectType === 1) {\n        // bool类型转换\n        for (var i in subjectOrg.choiceOptions) {\n          if (subjectOrg.choiceOptions[i].isAnswerBool) {\n            subjectOrg.choiceOptions[i].isAnswer = 1;\n          } else {\n            subjectOrg.choiceOptions[i].isAnswer = 0;\n          }\n        }\n      } else if (subjectOrg.subjectType === 2) {\n        subjectOrg.filling.isOrder = subjectOrg.filling.isOrderBool ? 1 : 0;\n        subjectOrg.filling.isCapital = subjectOrg.filling.isCapitalBool ? 1 : 0;\n      } else if (subjectOrg.subjectType === 3) {\n        subjectOrg.trueFalse.answer = subjectOrg.trueFalse.answerBool ? '1' : '0';\n      } // 封装数据\n\n\n      var subjectInfo = {\n        subject: subjectOrg,\n        examId: this.exam.examId\n      }; // 提交状态\n\n      if (this.isEditStatue) {\n        // 编辑题目状态，通过id更新题目\n        this.$axios.post(\"/Paper/updatePaper\", subjectInfo).then(function (res) {\n          if (res.data.flag) {\n            _this4.getSubject(); // 刷新数据\n\n\n            _this4.$message.success(res.data.msg);\n\n            _this4.resetForm(); // 重置表单\n\n\n            _this4.isEditStatue = false; // 关闭编辑状态\n\n            _this4.showEditSubject = false;\n          } else {\n            _this4.$message.error(res.data.msg);\n          }\n        });\n      } else {\n        // 创建题目状态\n        this.$axios.post(\"/Paper/createPaper\", subjectInfo).then(function (res) {\n          if (res.data.flag) {\n            _this4.getSubject(); // 刷新数据\n\n\n            _this4.$message.success(res.data.msg);\n\n            _this4.resetForm(); // 重置表单\n\n\n            _this4.showEditSubject = false;\n          } else {\n            _this4.$message.error(res.data.msg);\n          }\n        });\n      }\n    },\n    // 取消试题编辑\n    cancleEdit: function cancleEdit() {\n      this.showEditSubject = false;\n      this.resetForm();\n    },\n    // 重置表单\n    resetForm: function resetForm() {\n      this.editSubjectData.paperId = undefined;\n      this.editSubjectData.subjectId = undefined;\n      this.editSubjectData.subjectNum = undefined;\n      this.editSubjectData.subjectType = undefined;\n      this.editSubjectData.choice = {};\n      this.editSubjectData.filling = {};\n      this.editSubjectData.questionAnswer = {};\n      this.editSubjectData.trueFalse = {};\n      this.editSubjectData.choiceOptions = [];\n      this.editSubjectData.fillingBlanks = [];\n    }\n  }\n};","map":{"version":3,"mappings":"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B,uBAFA;AAGAjB,wBAHA;AAIAC,oBAJA;AAKAiB,0BALA;AAKA;AACAC;AANA;AAQA,SAvBA,CAwBA;;;AACA;AACA;AACA,OA3BA,MA2BA;AACA;AACA;AACA,KAhMA;AAiMA;AACAC,qBAlMA,+BAkMA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAPA,CAQA;;;AACA;AACA,+CADA,CACA;;AACA;AAAA;AACA;AACA,WAFA,MAEA;AACA;AACA;;AACA;AAAA;AACAtB,uBADA;AAEAmB,sBAFA;AAGAjB,wBAHA;AAIAC;AAJA;AAMA,SAtBA,CAuBA;;;AACA;AACA;AACA,OA1BA,MA0BA;AACA;AACA;AACA,KAlOA;AAmOA;AACAoB,eApOA,uBAoOAC,OApOA,EAoOA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AAAA;AACA;AACA;AACA;AACA,qCAJA,CAIA;;AACA;;AACA;AAAA;AACA;AACA;AACA;AACA,qCAJA,CAIA;;AACA;;AACA;AAAA;AACA;AACA;AACA,qCAHA,CAGA;;AACA;;AACA;AAAA;AACA;AACA;AACA,qCAHA,CAGA;;AACA;AAtBA;;AAwBA,oCA7BA,CA6BA;AACA,OA9BA,MA8BA;AACA;AACA;AACA,KAxQA;AAyQA;AACAC,iBA1QA,yBA0QAD,OA1QA,EA0QA;AAAA;;AACA;AACA;;AACA;AACA;AACA;AACAE,iCADA;AAEAC,gCAFA;AAGAC;AAHA,WAIAC,IAJA,CAIA;AACA;AAAAnD;AAAA,YADA,CAEA;;AACA;AACA;AACA;AACA;;AACA;AACA,aAJA,MAIA;AACA;AACA;AACA,WARA;AASA,SAhBA,EAgBAoD,KAhBA,CAgBA;AACA;AACA;AACA,SAnBA;AAoBA,OAtBA,MAsBA;AACA;AACA;AACA,KAtSA;AAuSA;AACAC,iBAxSA,yBAwSAC,UAxSA,EAwSA;AAAA;;AACA;AACA;AAAA;AACA;AACA;AACAA;AACA,WAFA,MAGA;AACAA;AACA;AACA;AACA,OATA,MASA;AACAA;AACAA;AACA,OAHA,MAGA;AACAA;AACA,OAhBA,CAiBA;;;AACA;AAAAR;AAAA/B;AAAA,QAlBA,CAmBA;;AACA;AAAA;AACA;AACA;AACA,gCADA,CACA;;;AACA;;AACA,+BAHA,CAGA;;;AACA,wCAJA,CAIA;;AACA;AACA,WANA,MAMA;AACA;AACA;AACA,SAVA;AAWA,OAZA,MAYA;AAAA;AACA;AACA;AACA,gCADA,CACA;;;AACA;;AACA,+BAHA,CAGA;;;AACA;AACA,WALA,MAKA;AACA;AACA;AACA,SATA;AAUA;AACA,KApVA;AAqVA;AACAwC,cAtVA,wBAsVA;AACA;AACA;AACA,KAzVA;AA0VA;AACAC,aA3VA,uBA2VA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtWA;AAnCA","names":["name","components","Ckeditor4","data","exam","subjects","activeNames","showEditSubject","editSubjectData","paperId","subjectId","subjectNum","subjectType","choice","filling","questionAnswer","trueFalse","choiceOptions","fillingBlanks","isEditStatue","dialogTitle","created","methods","getExam","examId","getSubject","allHidden","allShow","handleChange","val","addChoice","content","answerNum","analysis","score","num","isAnswer","isAnswerBool","addOption","number","deleteOption","index","addFilling","isOrder","isCapital","isOrderBool","isCapitalBool","addBlank","deleteBlank","addTrueFalse","answer","answerStr","answerBool","addQuestionAnswer","editSubject","subject","deleteSubject","confirmButtonText","cancelButtonText","type","then","catch","submitSubject","subjectOrg","cancleEdit","resetForm"],"sourceRoot":"src/pages/user/teacherComponents","sources":["ExamPaperManage.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <!-- 讨论详情 -->\r\n        <el-card :body-style=\"{ padding: '0px'}\" style=\"margin-top: 2em\">\r\n            <div id=\"examCards\">\r\n                <!-- 标题和时间 -->\r\n                <div style=\"margin-top: 1.2em;\">\r\n                    <span id=\"examTitle\">{{exam.title}}</span>\r\n                    <span id=\"examDate\">{{exam.formatCreateDate}}</span>\r\n                </div>\r\n                <!-- 内容 -->\r\n                <div id=\"examDetails\" v-html=\"exam.detail\">{{exam.detail}}</div>\r\n            </div>\r\n        </el-card>\r\n        <!-- 分割区 -->\r\n        <div class=\"myDivider\"></div>\r\n        <!-- 题目区 -->\r\n        <el-card id=\"subjectCard\">\r\n            <!-- 题目创建选择器 -->\r\n            <div id=\"createSubject\">\r\n                <span id=\"addSubjectTitle\">添加题目</span>\r\n                <span class=\"addSubjectButton\"><el-button type=\"primary\" @click=\"addChoice\" round plain>选择题</el-button></span>\r\n                <span class=\"addSubjectButton\"><el-button type=\"primary\" @click=\"addFilling\" round plain>填空题</el-button></span>\r\n                <span class=\"addSubjectButton\"><el-button type=\"primary\" @click=\"addTrueFalse\" round plain>判断题</el-button></span>\r\n                <span class=\"addSubjectButton\"><el-button type=\"primary\" @click=\"addQuestionAnswer\" round plain>简答题</el-button></span>\r\n                <el-button type=\"text\" class=\"conSubjectButton\" @click=\"allHidden\">全部折叠</el-button>\r\n                <el-button type=\"text\" class=\"conSubjectButton\" @click=\"allShow\">全部展开</el-button>\r\n            </div>\r\n            <!-- 题目区 -->\r\n            <el-collapse v-model=\"activeNames\" @change=\"handleChange\">\r\n                <div id=\"emptySubject\" v-if=\"subjects.length === 0\">暂无题目</div>\r\n                <el-collapse-item v-for=\"(item,index) in subjects\" :key=\"index\" :name=\"index\">\r\n                    <!-- 标题 -->\r\n                    <template slot=\"title\">\r\n                        <span style=\"margin-left: 1em; position: relative;\">\r\n                            <!-- 题号 -->\r\n                            <span class=\"subjectNum\">{{index+1}}</span>\r\n                            <!-- 选择题 -->\r\n                            <span v-if=\"item.subjectType === 1\" class=\"tagBox\">\r\n                                <el-tag class=\"subjectTag\" v-if=\"item.isSingleChoice\">单选</el-tag>\r\n                                <el-tag class=\"subjectTag\" v-else>多选</el-tag>\r\n                                <el-tag class=\"subjectTag\" type=\"success\">{{item.choice.score}}分</el-tag>\r\n                            </span>\r\n                            <!-- 填空题 -->\r\n                            <span v-else-if=\"item.subjectType === 2\" class=\"tagBox\">\r\n                                <el-tag class=\"subjectTag\">填空</el-tag>\r\n                                <el-tag class=\"subjectTag\" type=\"success\">{{item.filling.score}}分</el-tag>\r\n                                <el-tag class=\"subjectTag\" type=\"success\" v-if=\"item.filling.isCapitalBool\">大写区分</el-tag>\r\n                                <el-tag class=\"subjectTag\" type=\"success\" v-if=\"item.filling.isOrderBool\">答案有序</el-tag>\r\n                            </span>\r\n                            <!-- 判断题 -->\r\n                            <span v-else-if=\"item.subjectType === 3\" class=\"tagBox\">\r\n                                <el-tag class=\"subjectTag\">判断</el-tag>\r\n                                <el-tag class=\"subjectTag\" type=\"success\">{{item.trueFalse.score}}分</el-tag>\r\n                            </span>\r\n                            <!-- 简答题 -->\r\n                            <span v-else-if=\"item.subjectType === 4\" class=\"tagBox\">\r\n                                <el-tag class=\"subjectTag\">简答</el-tag>\r\n                                <el-tag class=\"subjectTag\" type=\"success\">{{item.questionAnswer.score}}分</el-tag>\r\n                            </span>\r\n                        </span>\r\n                    </template>\r\n                    <!-- 内容 -->\r\n                    <div class=\"subjectContent\">\r\n                        <!-- 选择题 -->\r\n                        <div v-if=\"item.subjectType === 1\">\r\n                            <!-- 题目 -->\r\n                            <div class=\"divMargin\">\r\n                                <el-tag class=\"subjectTag\">题目</el-tag>\r\n                                <span v-html=\"item.choice.content\">{{item.choice.content}}</span>\r\n                            </div>\r\n                            <!-- 选项 -->\r\n                            <div class=\"divMargin choiceOption\" v-for=\"(option,nums) in item.choiceOptions\" :key=\"nums\">\r\n                                {{nums+1}}、 {{option.content}}\r\n                                <el-tag type=\"success\" v-if=\"option.isAnswerBool\">答案</el-tag>\r\n                            </div>\r\n                            <!-- 答案和解析 -->\r\n                            <div class=\"divMargin\">\r\n                                <el-tag class=\"subjectTag\">解析</el-tag>\r\n                                <span v-html=\"item.choice.analysis\">{{item.choice.analysis}}</span>\r\n                            </div>\r\n                        </div>\r\n                        <!-- 填空题 -->\r\n                        <div v-else-if=\"item.subjectType === 2\">\r\n                            <!-- 题目 -->\r\n                            <div class=\"divMargin\">\r\n                                <el-tag class=\"subjectTag\">题目</el-tag>\r\n                                <span v-html=\"item.filling.content\">{{item.filling.content}}</span>\r\n                            </div>\r\n                            <!-- 答案 -->\r\n                            <div class=\"divMargin\">\r\n                                <el-tag class=\"subjectTag\">答案</el-tag>\r\n                                <div class=\"fillingBlank\" v-for=\"(blank,nums) in item.fillingBlanks\" :key=\"nums\">\r\n                                   {{nums+1}}、{{blank.content}}\r\n                                </div>\r\n                            </div>\r\n                            <!-- 解析 -->\r\n                            <div class=\"divMargin\">\r\n                                <el-tag class=\"subjectTag\">解析</el-tag>\r\n                                <span v-html=\"item.filling.analysis\">{{item.filling.analysis}}</span>\r\n                            </div>\r\n                        </div>\r\n                        <!-- 判断题 -->\r\n                        <div v-else-if=\"item.subjectType === 3\">\r\n                            <!-- 题目 -->\r\n                            <div class=\"divMargin\">\r\n                                <el-tag class=\"subjectTag\">题目</el-tag>\r\n                                <span v-html=\"item.trueFalse.content\">{{item.trueFalse.content}}</span>\r\n                            </div>\r\n                            <!-- 答案 -->\r\n                            <div class=\"divMargin\">\r\n                                <el-tag class=\"subjectTag\">答案</el-tag>\r\n                                <span>{{item.trueFalse.answerStr}}</span>\r\n                            </div>\r\n                            <!-- 答案和解析 -->\r\n                            <div class=\"divMargin\">\r\n                                <el-tag class=\"subjectTag\">解析</el-tag>\r\n                                <span v-html=\"item.trueFalse.analysis\">{{item.trueFalse.analysis}}</span>\r\n                            </div>\r\n                        </div>\r\n                        <!-- 简答题 -->\r\n                        <div v-else-if=\"item.subjectType === 4\">\r\n                            <!-- 题目 -->\r\n                            <div class=\"divMargin\">\r\n                                <el-tag class=\"subjectTag\">题目</el-tag>\r\n                                <span v-html=\"item.questionAnswer.content\">{{item.questionAnswer.content}}</span>\r\n                            </div>\r\n                            <!-- 答案 -->\r\n                            <div class=\"divMargin\">\r\n                                <el-tag class=\"subjectTag\">答案</el-tag>\r\n                                <span v-html=\"item.questionAnswer.answer\">{{item.questionAnswer.answer}}</span>\r\n                            </div>\r\n                            <!-- 答案和解析 -->\r\n                            <div class=\"divMargin\">\r\n                                <el-tag class=\"subjectTag\">解析</el-tag>\r\n                                <span v-html=\"item.questionAnswer.analysis\">{{item.questionAnswer.analysis}}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!-- 功能区 -->\r\n                    <div style=\"text-align: right\">\r\n                        <!-- 编辑按钮 -->\r\n                        <span class=\"editSubjectButton\" @click=\"editSubject(item)\"><i class=\"el-icon-edit\"></i></span>\r\n                        <!-- 删除按钮 -->\r\n                        <span class=\"deleteSubjectButton\" @click=\"deleteSubject(item)\"><i class=\"el-icon-delete\"></i></span>\r\n                    </div>\r\n                </el-collapse-item>\r\n            </el-collapse>\r\n        </el-card>\r\n        <!-- 添加试题 -->\r\n        <el-dialog :title=\"dialogTitle\"\r\n                   v-if=\"showEditSubject\"\r\n                   :visible.sync=\"showEditSubject\"\r\n                   width=\"50%\">\r\n            <!-- 表单 -->\r\n            <el-form :model=\"editSubjectData\"\r\n                     ref=\"editSubjectForm\"\r\n                     style=\"margin-right: 2em\"\r\n                     label-width=\"6em\">\r\n                <!-- 选择题面板 -->\r\n                <div v-if=\"editSubjectData.subjectType === 1\">\r\n                    <!-- 分值 -->\r\n                    <el-form-item label=\"分值\">\r\n                        <el-row>\r\n                            <el-col :span=\"2\"><el-input v-model=\"editSubjectData.choice.score\" ></el-input></el-col>\r\n                            <el-col :span=\"2\"><span style=\"margin-left: 0.5em\">分</span></el-col>\r\n                        </el-row>\r\n                    </el-form-item>\r\n                    <!-- 题目 -->\r\n                    <el-form-item label=\"题目\">\r\n                        <ckeditor4 v-model=\"editSubjectData.choice.content\"></ckeditor4>\r\n                    </el-form-item>\r\n                    <!-- 选项列表 -->\r\n                    <el-form-item :label=\"'选项 '+(index+1)\" v-for=\"(option,index) in editSubjectData.choiceOptions\" :key=\"index\">\r\n                        <el-row>\r\n                            <el-col :span=\"4\">\r\n                                <el-checkbox v-model=\"editSubjectData.choiceOptions[index].isAnswerBool\" label=\"设为答案\" border></el-checkbox>\r\n                            </el-col>\r\n                            <el-col :span=\"10\"> <el-input v-model=\"editSubjectData.choiceOptions[index].content\"></el-input></el-col>\r\n                            <el-col :span=\"2\">\r\n                                <el-button type=\"danger\" style=\"margin-left: 1em\" icon=\"el-icon-delete\" plain @click=\"deleteOption(index)\"></el-button>\r\n                            </el-col>\r\n                        </el-row>\r\n                    </el-form-item>\r\n                    <!-- 添加选项 -->\r\n                    <el-form-item>\r\n                        <el-button type=\"primary\" @click=\"addOption\" round plain>添加选项</el-button>\r\n                    </el-form-item>\r\n                    <!-- 解析 -->\r\n                    <el-form-item label=\"解析\">\r\n                        <ckeditor4 v-model=\"editSubjectData.choice.analysis\"></ckeditor4>\r\n                    </el-form-item>\r\n                </div>\r\n                <!-- 填空题面板 -->\r\n                <div v-if=\"editSubjectData.subjectType === 2\">\r\n                    <!-- 分值 -->\r\n                    <el-form-item label=\"分值\">\r\n                        <el-row>\r\n                            <el-col :span=\"2\"><el-input v-model=\"editSubjectData.filling.score\" ></el-input></el-col>\r\n                            <el-col :span=\"2\"><span style=\"margin-left: 0.5em\">分</span></el-col>\r\n                        </el-row>\r\n                    </el-form-item>\r\n                    <!-- 功能 -->\r\n                    <el-form-item label=\"功能\">\r\n                        <el-row>\r\n                            <el-col :span=\"4\"><el-switch v-model=\"editSubjectData.filling.isOrderBool\" active-text=\"答案有序\"></el-switch></el-col>\r\n                            <el-col :span=\"4\"><el-switch v-model=\"editSubjectData.filling.isCapitalBool\" active-text=\"大写区分\"></el-switch></el-col>\r\n                        </el-row>\r\n                    </el-form-item>\r\n                    <!-- 题目 -->\r\n                    <el-form-item label=\"题目\">\r\n                        <ckeditor4 v-model=\"editSubjectData.filling.content\"></ckeditor4>\r\n                    </el-form-item>\r\n                    <!-- 选项列表 -->\r\n                    <el-form-item :label=\"'空项 '+(index+1)\" v-for=\"(option,index) in editSubjectData.fillingBlanks\" :key=\"index\">\r\n                        <el-row>\r\n                            <el-col :span=\"10\"> <el-input v-model=\"editSubjectData.fillingBlanks[index].content\"></el-input></el-col>\r\n                            <el-col :span=\"2\">\r\n                                <el-button type=\"danger\" style=\"margin-left: 1em\" icon=\"el-icon-delete\" plain @click=\"deleteBlank(index)\"></el-button>\r\n                            </el-col>\r\n                        </el-row>\r\n                    </el-form-item>\r\n                    <!-- 添加选项 -->\r\n                    <el-form-item>\r\n                        <el-button type=\"primary\" @click=\"addBlank\" round plain>添加空项</el-button>\r\n                    </el-form-item>\r\n                    <!-- 解析 -->\r\n                    <el-form-item label=\"解析\">\r\n                        <ckeditor4 v-model=\"editSubjectData.filling.analysis\"></ckeditor4>\r\n                    </el-form-item>\r\n                </div>\r\n                <!-- 判断题面板 -->\r\n                <div v-if=\"editSubjectData.subjectType === 3\">\r\n                    <!-- 分值 -->\r\n                    <el-form-item label=\"分值\">\r\n                        <el-row>\r\n                            <el-col :span=\"2\"><el-input v-model=\"editSubjectData.trueFalse.score\" ></el-input></el-col>\r\n                            <el-col :span=\"2\"><span style=\"margin-left: 0.5em\">分</span></el-col>\r\n                        </el-row>\r\n                    </el-form-item>\r\n                    <!-- 题目 -->\r\n                    <el-form-item label=\"题目\">\r\n                        <ckeditor4 v-model=\"editSubjectData.trueFalse.content\"></ckeditor4>\r\n                    </el-form-item>\r\n                    <!-- 答案 -->\r\n                    <el-form-item label=\"答案\">\r\n                        <el-switch v-model=\"editSubjectData.trueFalse.answerBool\" active-text=\"对\" inactive-text=\"错\"></el-switch>\r\n                    </el-form-item>\r\n                    <!-- 解析 -->\r\n                    <el-form-item label=\"解析\">\r\n                        <ckeditor4 v-model=\"editSubjectData.trueFalse.analysis\"></ckeditor4>\r\n                    </el-form-item>\r\n                </div>\r\n                <!-- 简答题面板 -->\r\n                <div v-if=\"editSubjectData.subjectType === 4\">\r\n                    <!-- 分值 -->\r\n                    <el-form-item label=\"分值\">\r\n                        <el-row>\r\n                            <el-col :span=\"2\"><el-input v-model=\"editSubjectData.questionAnswer.score\" ></el-input></el-col>\r\n                            <el-col :span=\"2\"><span style=\"margin-left: 0.5em\">分</span></el-col>\r\n                        </el-row>\r\n                    </el-form-item>\r\n                    <!-- 题目 -->\r\n                    <el-form-item label=\"题目\">\r\n                        <ckeditor4 v-model=\"editSubjectData.questionAnswer.content\"></ckeditor4>\r\n                    </el-form-item>\r\n                    <!-- 答案 -->\r\n                    <el-form-item label=\"答案\">\r\n                        <ckeditor4 v-model=\"editSubjectData.questionAnswer.answer\"></ckeditor4>\r\n                    </el-form-item>\r\n                    <!-- 解析 -->\r\n                    <el-form-item label=\"解析\">\r\n                        <ckeditor4 v-model=\"editSubjectData.questionAnswer.analysis\"></ckeditor4>\r\n                    </el-form-item>\r\n                </div>\r\n                <!-- 提交表单 -->\r\n                <el-form-item>\r\n                    <el-button type=\"primary\" @click=\"submitSubject(editSubjectData)\">提交</el-button>\r\n                    <el-button type=\"info\" @click=\"cancleEdit\">取消</el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </el-dialog>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import Ckeditor4 from \"@/components/Ckeditor4\";\r\n    export default {\r\n        name: \"ExamPaperManage\",\r\n        components:{\r\n            Ckeditor4,\r\n        },\r\n        data(){\r\n            return{\r\n                exam:{},                // 考试信息\r\n                subjects:[],            // 试题集合\r\n                activeNames: [],        // 试题激活项\r\n                showEditSubject: false, // 编辑试题表单\r\n                editSubjectData: {      // 编辑试题数据模型\r\n                    // 基本信息\r\n                    paperId:undefined,\r\n                    subjectId:undefined,\r\n                    subjectNum:undefined,\r\n                    subjectType:undefined,\r\n                    // 题目内容\r\n                    choice:{},\r\n                    filling:{},\r\n                    questionAnswer:{},\r\n                    trueFalse:{},\r\n                    // 项数组\r\n                    choiceOptions:[],\r\n                    fillingBlanks:[],\r\n                },\r\n                // 试题编辑状态\r\n                isEditStatue:false,\r\n                // 对话框标题\r\n                dialogTitle:''\r\n            }\r\n        },\r\n        created(){\r\n            this.getExam();\r\n        },\r\n        methods:{\r\n            // 查询考试数据\r\n            getExam(){\r\n                let exam = {examId:this.$route.params.examId};\r\n                this.$axios.post(\"/Exam/getExamById\", exam).then((res)=>{\r\n                    if(res.data.flag){\r\n                        /* 保存公告数据 */\r\n                        this.exam = res.data.data;\r\n                        this.getSubject();\r\n                    }else{\r\n                        // 服务故障\r\n                        this.$message.error(\"信息获取失败！\");\r\n                    }\r\n                });\r\n            },\r\n            // 查询试题数据\r\n            getSubject(){\r\n                this.$axios.post(\"/Paper/getPaperByExamId\", this.exam).then((res)=>{\r\n                    if(res.data.flag){\r\n                        /* 保存公告数据 */\r\n                        this.subjects = res.data.data;\r\n                    }else{\r\n                        // 服务故障\r\n                        this.$message.error(\"信息获取失败！\");\r\n                    }\r\n                });\r\n            },\r\n            // 全部折叠\r\n            allHidden(){\r\n                this.activeNames = [];\r\n            },\r\n            // 全部展开\r\n            allShow(){\r\n                this.allHidden();\r\n                /* 激活全部题组 */\r\n                for(let i = 0;i<this.subjects.length;i++) this.$set(this.activeNames,i,i);\r\n            },\r\n            // 展示区变化\r\n            handleChange(val){\r\n                // console.log(val)\r\n            },\r\n            // 添加选择题\r\n            addChoice(){\r\n                // 检查考试是否开启\r\n                let currentDate = new Date();\r\n                if(currentDate < Date.parse(this.exam.beginDate)){\r\n                    // 数据清理\r\n                    if(this.isEditStatue){\r\n                        // 残存的编辑状态\r\n                        // 在用户未提交编辑内容时，会停留在编辑状态，故要状态重置\r\n                        this.resetForm();\r\n                        this.isEditStatue = false;\r\n                    }\r\n                    // 确定题型并初始化题型数据-已有对应题目数据则不再初始化\r\n                    if(this.editSubjectData.subjectType !== 1){\r\n                        this.editSubjectData.subjectType = 1;   // 选择题\r\n                        if(this.subjects.length>0) { // 题号增加\r\n                            this.editSubjectData.subjectNum = this.subjects[this.subjects.length-1].subjectNum+1;\r\n                        }else{\r\n                            this.editSubjectData.subjectNum = 1;\r\n                        }\r\n                        this.editSubjectData.choice = {         // 题目数据初始化\r\n                            content:'',\r\n                            answerNum:4,\r\n                            analysis:'',\r\n                            score:5,\r\n                        }\r\n                        this.editSubjectData.choiceOptions = [   // 选项列表默认4个选项\r\n                            {num:1,content:'',isAnswer:0,isAnswerBool:false},\r\n                            {num:2,content:'',isAnswer:0,isAnswerBool:false},\r\n                            {num:3,content:'',isAnswer:0,isAnswerBool:false},\r\n                            {num:4,content:'',isAnswer:0,isAnswerBool:false}\r\n                        ];\r\n                    }\r\n                    // 启动表单\r\n                    this.dialogTitle = \"选择题\";\r\n                    this.showEditSubject = true;\r\n                }else{\r\n                    this.$message.warning(\"为保护数据安全，考试开启后将无法编辑试题\");\r\n                }\r\n            },\r\n            // 添加选项\r\n            addOption(){\r\n                let number = 0;\r\n                if(this.editSubjectData.choiceOptions.length>0) {\r\n                    number = this.editSubjectData.choiceOptions[this.editSubjectData.choiceOptions.length-1].num+1\r\n                    this.editSubjectData.choice.answerNum++;\r\n                }else{  // 无选项\r\n                    number = 1;\r\n                    this.editSubjectData.choice.answerNum = 1;\r\n                }\r\n                this.$set(this.editSubjectData.choiceOptions,this.editSubjectData.choiceOptions.length,\r\n                    {num: number, content:'', isAnswer:0, isAnswerBool:false})\r\n            },\r\n            // 移除选项\r\n            deleteOption(index){\r\n                this.$delete(this.editSubjectData.choiceOptions,index);\r\n                this.editSubjectData.choice.answerNum--;\r\n            },\r\n            // 添加填空题\r\n            addFilling(){\r\n                // 检查考试是否开启\r\n                let currentDate = new Date();\r\n                if(currentDate < Date.parse(this.exam.beginDate)){\r\n                    // 数据清理\r\n                    if(this.isEditStatue){\r\n                        // 残存的编辑状态\r\n                        // 在用户未提交编辑内容时，会停留在编辑状态，故要状态重置\r\n                        this.resetForm();\r\n                        this.isEditStatue = false;\r\n                    }\r\n                    // 确定题型并初始化题型数据-已有对应题目数据则不再初始化\r\n                    if(this.editSubjectData.subjectType !== 2){\r\n                        this.editSubjectData.subjectType = 2;   // 填空题\r\n                        if(this.subjects.length>0) { // 题号增加\r\n                            this.editSubjectData.subjectNum = this.subjects[this.subjects.length-1].subjectNum+1;\r\n                        }else{\r\n                            this.editSubjectData.subjectNum = 1;\r\n                        }\r\n                        this.editSubjectData.filling = {         // 题目数据初始化\r\n                            content:'',\r\n                            answerNum:1,\r\n                            analysis:'',\r\n                            score:5,\r\n                            isOrder:0,\r\n                            isCapital:0,\r\n                            isOrderBool:false,\r\n                            isCapitalBool:false,\r\n                        }\r\n                        this.editSubjectData.fillingBlanks = [   // 填空默认一个答案\r\n                            {num:1,content:''},\r\n                        ];\r\n                    }\r\n                    // 启动表单\r\n                    this.dialogTitle = \"填空题\";\r\n                    this.showEditSubject = true;\r\n                }else{\r\n                    this.$message.warning(\"为保护数据安全，考试开启后将无法编辑试题\");\r\n                }\r\n            },\r\n            // 添加空项\r\n            addBlank(){\r\n                let number = 0;\r\n                if(this.editSubjectData.fillingBlanks.length>0) {\r\n                    number = this.editSubjectData.fillingBlanks[this.editSubjectData.fillingBlanks.length-1].num+1\r\n                    this.editSubjectData.filling.answerNum++;\r\n                }else{  // 无选项\r\n                    number = 1;\r\n                    this.editSubjectData.filling.answerNum = 1;\r\n                }\r\n                this.$set(this.editSubjectData.fillingBlanks,this.editSubjectData.fillingBlanks.length,\r\n                    {num:number, content:''})\r\n            },\r\n            // 移除空项\r\n            deleteBlank(index){\r\n                this.$delete(this.editSubjectData.fillingBlanks,index);\r\n                this.editSubjectData.filling.answerNum--;\r\n            },\r\n            // 添加判断题\r\n            addTrueFalse(){\r\n                // 检查考试是否开启\r\n                let currentDate = new Date();\r\n                if(currentDate < Date.parse(this.exam.beginDate)){\r\n                    // 数据清理\r\n                    if(this.isEditStatue){      // 残存的编辑状态\r\n                        // 在用户未提交编辑内容时，会停留在编辑状态，故要状态重置\r\n                        this.resetForm();\r\n                        this.isEditStatue = false;\r\n                    }\r\n                    // 确定题型并初始化题型数据-已有对应题目数据则不再初始化\r\n                    if(this.editSubjectData.subjectType !== 3){\r\n                        this.editSubjectData.subjectType = 3;   // 判断题\r\n                        if(this.subjects.length>0) { // 题号增加\r\n                            this.editSubjectData.subjectNum = this.subjects[this.subjects.length-1].subjectNum+1;\r\n                        }else{\r\n                            this.editSubjectData.subjectNum = 1;\r\n                        }\r\n                        this.editSubjectData.trueFalse = {      // 题目数据初始化\r\n                            content:'',\r\n                            answer:'1',\r\n                            analysis:'',\r\n                            score:5,\r\n                            answerStr:'是',  // 默认答案正确\r\n                            answerBool:true,\r\n                        }\r\n                    }\r\n                    // 启动表单\r\n                    this.dialogTitle = \"判断题\";\r\n                    this.showEditSubject = true;\r\n                }else{\r\n                    this.$message.warning(\"为保护数据安全，考试开启后将无法编辑试题\");\r\n                }\r\n            },\r\n            // 添加简答题\r\n            addQuestionAnswer(){\r\n                // 检查考试是否开启\r\n                let currentDate = new Date();\r\n                if(currentDate < Date.parse(this.exam.beginDate)){\r\n                    // 数据清理\r\n                    if(this.isEditStatue){\r\n                        // 残存的编辑状态\r\n                        // 在用户未提交编辑内容时，会停留在编辑状态，故要状态重置\r\n                        this.resetForm();\r\n                        this.isEditStatue = false;\r\n                    }\r\n                    // 确定题型并初始化题型数据-已有对应题目数据则不再初始化\r\n                    if(this.editSubjectData.subjectType !== 4){\r\n                        this.editSubjectData.subjectType = 4;   // 简答题\r\n                        if(this.subjects.length>0) { // 题号增加\r\n                            this.editSubjectData.subjectNum = this.subjects[this.subjects.length-1].subjectNum+1;\r\n                        }else{\r\n                            this.editSubjectData.subjectNum = 1;\r\n                        }\r\n                        this.editSubjectData.questionAnswer = {         // 题目数据初始化\r\n                            content:'',\r\n                            answer:'',\r\n                            analysis:'',\r\n                            score:10,\r\n                        }\r\n                    }\r\n                    // 启动表单\r\n                    this.dialogTitle = \"简答题\";\r\n                    this.showEditSubject = true;\r\n                }else{\r\n                    this.$message.warning(\"为保护数据安全，考试开启后将无法编辑试题\");\r\n                }\r\n            },\r\n            // 编辑题目\r\n            editSubject(subject){\r\n                // 检查考试是否开启\r\n                let currentDate = new Date();\r\n                if(currentDate < Date.parse(this.exam.beginDate)){\r\n                    this.editSubjectData.paperId = subject.paperId;\r\n                    this.editSubjectData.subjectId = subject.subjectId;\r\n                    this.editSubjectData.subjectType = subject.subjectType;\r\n                    this.editSubjectData.subjectNum = subject.subjectNum;\r\n                    switch (subject.subjectType) {\r\n                        case 1: // 选择\r\n                            this.editSubjectData.choice = subject.choice;\r\n                            this.editSubjectData.choiceOptions = subject.choiceOptions;\r\n                            this.dialogTitle = \"选择题\";\r\n                            this.isEditStatue = true;   // 启动编辑模式\r\n                            break;\r\n                        case 2: // 填空\r\n                            this.editSubjectData.filling = subject.filling;\r\n                            this.editSubjectData.fillingBlanks = subject.fillingBlanks;\r\n                            this.dialogTitle = \"填空题\";\r\n                            this.isEditStatue = true;   // 启动编辑模式\r\n                            break;\r\n                        case 3: // 判断\r\n                            this.editSubjectData.trueFalse = subject.trueFalse;\r\n                            this.dialogTitle = \"判断题\";\r\n                            this.isEditStatue = true;   // 启动编辑模式\r\n                            break;\r\n                        case 4: // 简答\r\n                            this.editSubjectData.questionAnswer = subject.questionAnswer;\r\n                            this.dialogTitle = \"简答题\";\r\n                            this.isEditStatue = true;   // 启动编辑模式\r\n                            break;\r\n                    }\r\n                    this.showEditSubject = true;        // 打开对话框\r\n                }else{\r\n                    this.$message.warning(\"为保护数据安全，考试开启后将无法编辑试题\");\r\n                }\r\n            },\r\n            // 删除题目\r\n            deleteSubject(subject){\r\n                // 检查考试是否开启\r\n                let currentDate = new Date();\r\n                if(currentDate < Date.parse(this.exam.beginDate)){\r\n                    // 弹框确认\r\n                    this.$confirm('此操作将删除该题目, 是否继续?', '提示', {\r\n                        confirmButtonText: '确定',\r\n                        cancelButtonText: '取消',\r\n                        type: 'warning'\r\n                    }).then(() => {\r\n                        let paper = {paperId:subject.paperId};\r\n                        // 执行删除\r\n                        this.$axios.post(\"/Paper/deletePaperById\",paper).then(res=>{\r\n                            if(res.data.flag){\r\n                                // 删除成功，刷新数据\r\n                                this.getSubject();\r\n                                this.$message.success('删除成功！');\r\n                            }else{\r\n                                this.$message.error('删除失败！');\r\n                            }\r\n                        })\r\n                    }).catch(() => {\r\n                        // 取消删除\r\n                        this.$message.info('取消删除');\r\n                    });\r\n                }else{\r\n                    this.$message.warning(\"为保护数据安全，考试开启后将无法编辑试题\");\r\n                }\r\n            },\r\n            // 试题编辑提交\r\n            submitSubject(subjectOrg){\r\n                // 数据处理\r\n                if(subjectOrg.subjectType === 1){ // bool类型转换\r\n                    for(let i in subjectOrg.choiceOptions){\r\n                        if(subjectOrg.choiceOptions[i].isAnswerBool){\r\n                            subjectOrg.choiceOptions[i].isAnswer = 1;\r\n                        }\r\n                        else {\r\n                            subjectOrg.choiceOptions[i].isAnswer = 0;\r\n                        }\r\n                    }\r\n                }else if(subjectOrg.subjectType === 2){\r\n                    subjectOrg.filling.isOrder = subjectOrg.filling.isOrderBool ? 1:0;\r\n                    subjectOrg.filling.isCapital = subjectOrg.filling.isCapitalBool ? 1:0;\r\n                }else if(subjectOrg.subjectType === 3){\r\n                    subjectOrg.trueFalse.answer = subjectOrg.trueFalse.answerBool ? '1':'0';\r\n                }\r\n                // 封装数据\r\n                let subjectInfo = {subject:subjectOrg,examId:this.exam.examId};\r\n                // 提交状态\r\n                if(this.isEditStatue){  // 编辑题目状态，通过id更新题目\r\n                    this.$axios.post(\"/Paper/updatePaper\",subjectInfo).then((res)=>{\r\n                        if(res.data.flag){\r\n                            this.getSubject();          // 刷新数据\r\n                            this.$message.success(res.data.msg);\r\n                            this.resetForm();           // 重置表单\r\n                            this.isEditStatue = false;  // 关闭编辑状态\r\n                            this.showEditSubject = false;\r\n                        }else{\r\n                            this.$message.error(res.data.msg);\r\n                        }\r\n                    })\r\n                }else{  // 创建题目状态\r\n                    this.$axios.post(\"/Paper/createPaper\",subjectInfo).then((res)=>{\r\n                        if(res.data.flag){\r\n                            this.getSubject();          // 刷新数据\r\n                            this.$message.success(res.data.msg);\r\n                            this.resetForm();           // 重置表单\r\n                            this.showEditSubject = false;\r\n                        }else{\r\n                            this.$message.error(res.data.msg);\r\n                        }\r\n                    })\r\n                }\r\n            },\r\n            // 取消试题编辑\r\n            cancleEdit(){\r\n               this.showEditSubject = false;\r\n               this.resetForm();\r\n            },\r\n            // 重置表单\r\n            resetForm(){\r\n                this.editSubjectData.paperId = undefined;\r\n                this.editSubjectData.subjectId = undefined;\r\n                this.editSubjectData.subjectNum = undefined;\r\n                this.editSubjectData.subjectType = undefined;\r\n                this.editSubjectData.choice = {};\r\n                this.editSubjectData.filling = {};\r\n                this.editSubjectData.questionAnswer = {};\r\n                this.editSubjectData.trueFalse = {};\r\n                this.editSubjectData.choiceOptions = [];\r\n                this.editSubjectData.fillingBlanks = [];\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    /* 信息卡片 */\r\n    #examCards{\r\n        width: 90%;\r\n        min-height: 10em;\r\n        margin: auto;\r\n    }\r\n    /* 考试标题 */\r\n    #examTitle{\r\n     margin-bottom: 1.2em;\r\n     font-size: 28px;\r\n     font-weight: 600;\r\n     font-family: \"微软雅黑\";\r\n    }\r\n    /* 发表时间 */\r\n    #examDate{\r\n        color: #8a8a8a;\r\n        margin-left: 1.2em;\r\n    }\r\n    /* 详情 */\r\n    #examDetails{\r\n     margin-top: 20px;\r\n     margin-bottom: 20px;\r\n    }\r\n    /* 分割线 */\r\n    ::v-deep.myDivider{\r\n        margin: 2em 0;\r\n    }\r\n    /**\r\n     * 题型栏\r\n     */\r\n    /* 题目卡片区 */\r\n    #subjectCard{\r\n        padding: 0;\r\n        position: relative;\r\n    }\r\n    /* 题型选择栏 */\r\n    #createSubject{\r\n        text-align: center;\r\n        margin-bottom: 1.2em;\r\n    }\r\n    /* 添加题目标题 */\r\n    #addSubjectTitle{\r\n        font-size: 15px;\r\n        margin:0 1.5em;\r\n        color: #8c8c8c;\r\n    }\r\n    /* 添加题目按钮 */\r\n    .addSubjectButton{\r\n        margin:0 1.5em;\r\n    }\r\n    /**\r\n     * 题目区\r\n     */\r\n    /* 展开折叠按钮 */\r\n    .conSubjectButton{\r\n        left: 23em;\r\n        position: relative;\r\n    }——\r\n    /* 题目序号 */\r\n    .subjectNum{\r\n        left: 1em;\r\n        position: relative;\r\n    }\r\n    /* 标签整体 */\r\n    .tagBox{\r\n        left: 3em;\r\n        width: 100em;\r\n        position: absolute;\r\n    }\r\n    /*　题目标签　*/\r\n    .subjectTag{\r\n        margin: 0 0.4em;\r\n    }\r\n    /**\r\n     * 内容区\r\n     */\r\n    .divMargin{\r\n        margin: 0.5em 0\r\n    }\r\n    /* 暂无题目 */\r\n    #emptySubject{\r\n        margin-left: 39vw;\r\n        color:#8d8d8d;\r\n        height:3em;\r\n        line-height:2.5em;\r\n        font-size: 16px\r\n    }\r\n    /* 内容区 */\r\n    .subjectContent{\r\n        width: 90%;\r\n        font-size: 18px;\r\n        left: 3em;\r\n        position: relative;\r\n    }\r\n    /* 选择题选项 */\r\n    .choiceOption{\r\n        left: 1em;\r\n        position: relative;\r\n    }\r\n    /* 填空题答案 */\r\n    .fillingBlank{\r\n        margin: 0 0.5em;\r\n    }\r\n    /* */\r\n\r\n\r\n    /**\r\n     * 功能区\r\n     */\r\n    /* 编辑题目按钮 */\r\n    .editSubjectButton{\r\n        color:#3a75ff;\r\n        right: 5em;\r\n        position: relative;\r\n        font-size: 1.2em;\r\n    }\r\n    .editSubjectButton:hover{\r\n        cursor: pointer;\r\n    }\r\n    /* 删除题目按钮 */\r\n    .deleteSubjectButton{\r\n        color: #ff3a3a;\r\n        right: 4em;\r\n        position: relative;\r\n        font-size: 1.2em;\r\n    }\r\n    .deleteSubjectButton:hover{\r\n        cursor: pointer;\r\n    }\r\n</style>"]},"metadata":{},"sourceType":"module"}