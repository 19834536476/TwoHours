{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 引入导出Excel表格依赖\nimport TableExport from \"@/components/TableExport\"; // 自定义组件\n\nimport Ckeditor4 from \"@/components/Ckeditor4\";\nimport SHAEncrypt from \"@/components/SHAEncrypt\";\nexport default {\n  name: 'AdmUserManage',\n  components: {\n    Ckeditor4: Ckeditor4,\n    SHAEncrypt: SHAEncrypt,\n    TableExport: TableExport\n  },\n  data: function data() {\n    return {\n      // 当前页码\n      currentPage: 1,\n      // 分页大小\n      pageSize: 10,\n      // 总页码数\n      totalCount: 1,\n      // 搜索表单数据模型\n      searchTitle: {\n        userId: '',\n        username: ''\n      },\n      // 内置查询模型\n      searchFormIn: {\n        userId: '',\n        username: ''\n      },\n      // 用户编辑数据\n      userData: {\n        userId: '',\n        password: '',\n        checkPsw: ''\n      },\n      // 添加账户对话框\n      insertDialogVisible: false,\n      // 修改密码对话框\n      updatePswDialogVisible: false,\n      // 通知数据列表\n      tableData: [],\n      // 对话框销毁器\n      closeDialog: false\n    };\n  },\n  created: function created() {\n    this.getTableData();\n  },\n  methods: {\n    // 查询用户数据\n    // 系统内置一个title，默认为空，即全查询。每次条件查询都会把条件赋给该title。\n    // 因此这样点击分页栏时可以正常显示查询结果。\n    getTableData: function getTableData() {\n      var _this = this;\n\n      this.searchFormIn[\"pageSize\"] = this.pageSize;\n      this.searchFormIn[\"currentPage\"] = this.currentPage;\n      this.$axios.post(\"/Users/getPageByUsername\", this.searchFormIn).then(function (res) {\n        if (res.data.flag) {\n          /* 保存用户数据 */\n          _this.tableData = res.data.data.records;\n          /* 保存分页数据 */\n\n          _this.totalCount = res.data.data.total;\n          _this.currentPage = res.data.data.current;\n          _this.pageSize = res.data.data.size;\n        } else {\n          // 服务故障\n          _this.$message.error(\"信息获取失败！\");\n        }\n      });\n    },\n    // 表格颜色控制\n    tableRowClassName: function tableRowClassName(_ref) {\n      var row = _ref.row,\n          rowIndex = _ref.rowIndex;\n\n      if (rowIndex % 4 === 1) {\n        return 'warning-row';\n      } else if (rowIndex % 4 === 3) {\n        return 'success-row';\n      }\n\n      return '';\n    },\n    // 添加用户\n    insertUserOnSubmit: function insertUserOnSubmit() {\n      this.userData.userId = '';\n      this.userData.password = '';\n      this.closeDialog = true;\n      this.insertDialogVisible = true;\n    },\n    // 查询用户\n    searchUserOnSubmit: function searchUserOnSubmit(flag) {\n      if (flag === '1') {\n        // 刷新查询条件\n        this.searchFormIn.userId = this.searchTitle.userId;\n        this.searchFormIn.username = this.searchTitle.username;\n      } else {\n        // 刷新查询条件\n        this.searchFormIn.userId = '';\n        this.searchFormIn.username = '';\n      } // 执行查询\n\n\n      this.getTableData();\n      /* 清空查询条件 */\n\n      this.searchTitle.userId = '';\n      this.searchTitle.username = '';\n    },\n    // 创建账户\n    insertUser: function insertUser(user) {\n      var _this2 = this;\n\n      /* 数据检查 */\n      if (user.userId === '' || user.password === '') {\n        this.$message.warning(\"请填写完整再提交！\");\n        return;\n      } // 数据加密\n\n\n      user.password = SHAEncrypt.methods.sha1(user.password); // 保存到数据库\n\n      this.$axios.post(\"/Users/createUser\", user).then(function (res) {\n        if (res.data.flag) {\n          // 修改成功\n          _this2.$message.success(res.data.msg); // 刷新用户数据\n\n\n          _this2.getTableData(); // 关闭编辑窗口\n\n\n          _this2.insertDialogVisible = false;\n        } else {\n          // 服务故障\n          _this2.$message.error(res.data.msg);\n        }\n      });\n    },\n    // 修改密码激活\n    updateUserPsw: function updateUserPsw(row) {\n      // 预先绑定数据\n      this.userData.userId = row.userId;\n      this.userData.password = '';\n      this.userData.checkPsw = '';\n      this.closeDialog = true;\n      this.updatePswDialogVisible = true;\n    },\n    // 更新用户数据\n    updateUserData: function updateUserData(user) {\n      var _this3 = this;\n\n      if (user.password !== user.checkPsw || user.checkPsw === '') {\n        this.$message.warning(\"两次密码不一致！\");\n        return;\n      } // 数据加密\n\n\n      user.password = SHAEncrypt.methods.sha1(user.password);\n      user.checkPsw = SHAEncrypt.methods.sha1(user.checkPsw); // 保存到数据库\n\n      this.$axios.post(\"/Users/updatePsw\", user).then(function (res) {\n        if (res.data.flag) {\n          // 修改成功\n          _this3.$message.success(res.data.msg); // 刷新用户数据\n\n\n          _this3.getTableData(); // 关闭编辑窗口\n\n\n          _this3.updatePswDialogVisible = false;\n        } else {\n          // 服务故障\n          _this3.$message.error(res.data.msg);\n        }\n      });\n    },\n    // 编辑用户数据dialog销毁\n    dialogHandleClose: function dialogHandleClose() {\n      // 手动销毁\n      this.closeDialog = false;\n    },\n    // 当某行数据被点击\n    rowClick: function rowClick(row, column) {\n      // 排除操作列\n      if (column.label === '操作') return; //\n    },\n    // 注销用户\n    deleteUser: function deleteUser(row) {\n      var _this4 = this;\n\n      // 弹框确认\n      this.$confirm('此操作将注销该账户及其相关全部数据, 是否继续?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        var user = {\n          userId: row.userId\n        }; // 执行删除\n\n        console.log(user);\n\n        _this4.$axios.post(\"/Users/deleteUser\", user).then(function (res) {\n          if (res.data.flag) {\n            // 删除成功，刷新数据\n            _this4.getTableData();\n\n            _this4.$message.success('删除成功！');\n          } else {\n            _this4.$message.error('删除失败！');\n          }\n        });\n      }).catch(function () {\n        // 取消删除\n        _this4.$message.info('取消删除');\n      });\n    },\n    // 分页大小变化\n    handleSizeChange: function handleSizeChange(val) {\n      this.pageSize = val; // 查询所有用户数据\n\n      this.getTableData();\n    },\n    // 当前页变化\n    handleCurrentChange: function handleCurrentChange(val) {\n      this.currentPage = val; // 查询所有用户数据\n\n      this.getTableData();\n    }\n  }\n};","map":{"version":3,"mappings":"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","names":["name","components","Ckeditor4","SHAEncrypt","TableExport","data","currentPage","pageSize","totalCount","searchTitle","userId","username","searchFormIn","userData","password","checkPsw","insertDialogVisible","updatePswDialogVisible","tableData","closeDialog","created","methods","getTableData","tableRowClassName","insertUserOnSubmit","searchUserOnSubmit","flag","insertUser","user","updateUserPsw","row","updateUserData","dialogHandleClose","rowClick","column","deleteUser","confirmButtonText","cancelButtonText","type","then","console","catch","handleSizeChange","val","handleCurrentChange"],"sourceRoot":"src/pages/admin/components","sources":["AdmUserManage.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <!-- 功能菜单 -->\r\n        <el-row style=\"position: relative; height: 90px\">\r\n            <!--按钮-->\r\n            <el-col :span=\"6\" id=\"functionMenu\">\r\n                <el-button type=\"primary\" plain @click=\"insertUserOnSubmit\">添加账户</el-button>\r\n                <TableExport style=\"margin-left: 1em;\" table-id=\"user-table\"></TableExport>\r\n            </el-col>\r\n            <!--搜索表单-->\r\n            <el-col :span=\"12\">\r\n                <el-form :inline=\"true\" :model=\"searchTitle\" id=\"file-form-select\">\r\n                    <el-form-item label=\"搜索内容\">\r\n                        <el-input v-model=\"searchTitle.userId\" placeholder=\"账号\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item>\r\n                        <el-input v-model=\"searchTitle.username\" placeholder=\"用户名\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item>\r\n                        <el-button type=\"primary\" @click=\"searchUserOnSubmit('1')\">查询</el-button>\r\n                    </el-form-item>\r\n                    <el-form-item>\r\n                        <el-button type=\"success\" @click=\"searchUserOnSubmit('0')\">重置</el-button>\r\n                    </el-form-item>\r\n                </el-form>\r\n            </el-col>\r\n        </el-row>\r\n\r\n        <!-- 添加账户 -->\r\n        <el-dialog\r\n                v-if=\"closeDialog\"\r\n                title=\"添加账户\"\r\n                :visible.sync=\"insertDialogVisible\"\r\n                @close=\"dialogHandleClose\"\r\n                width=\"25%\">\r\n            <el-form ref=\"form\" :model=\"userData\">\r\n                <el-form-item> <!-- 账号 -->\r\n                    <el-input class=\"input\" v-model=\"userData.userId\" placeholder=\"账号\" maxlength=\"24\" autocomplete=\"off\" clearable></el-input>\r\n                </el-form-item>\r\n                <el-form-item> <!-- 密码 -->\r\n                    <el-input class=\"input\" v-model=\"userData.password\" placeholder=\"密码\" maxlength=\"24\" autocomplete=\"off\" clearable show-password></el-input>\r\n                </el-form-item>\r\n                <el-form-item>  <!-- 确认按钮 -->\r\n                    <el-button type=\"primary\" @click=\"insertUser(userData)\" style=\"width:100%; font-size: 16px;margin-top: 15px\">\r\n                        <span class=\"btLogin\">提交</span>\r\n                    </el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </el-dialog>\r\n\r\n        <!-- 修改密码 -->\r\n        <el-dialog\r\n                v-if=\"closeDialog\"\r\n                title=\"修改密码\"\r\n                :visible.sync=\"updatePswDialogVisible\"\r\n                @close=\"dialogHandleClose\"\r\n                width=\"25%\">\r\n            <el-form ref=\"form\" :model=\"userData\">\r\n                <el-form-item> <!-- 密码 自带显示密码 -->\r\n                    <el-input class=\"input\" v-model=\"userData.password\" placeholder=\"新密码\" maxlength=\"24\" autocomplete=\"off\" clearable show-password></el-input>\r\n                </el-form-item>\r\n                <el-form-item> <!-- 确认密码 自带显示密码 -->\r\n                    <el-input class=\"input\" v-model=\"userData.checkPsw\" placeholder=\"确认密码\" maxlength=\"24\" autocomplete=\"off\" clearable show-password></el-input>\r\n                </el-form-item>\r\n                <el-form-item>  <!-- 确认按钮 -->\r\n                    <el-button type=\"primary\" @click=\"updateUserData(userData)\" style=\"width:100%; font-size: 16px;margin-top: 15px\">\r\n                        <span class=\"btLogin\">确认</span>\r\n                    </el-button>\r\n                </el-form-item>\r\n            </el-form>\r\n        </el-dialog>\r\n\r\n        <!--表格-->\r\n        <template>\r\n            <el-table\r\n                    id=\"user-table\"\r\n                    :data=\"tableData\"\r\n                    style=\"width: 100%\"\r\n                    :row-class-name=\"tableRowClassName\"\r\n                    @row-click=\"rowClick\">\r\n                <el-table-column\r\n                        label=\"序号\"\r\n                        type=\"index\"\r\n                        align=\"center\"\r\n                        width=\"100\">\r\n                </el-table-column>\r\n\r\n                <el-table-column\r\n                        prop=\"userId\"\r\n                        label=\"账号\"\r\n                        align=\"center\"\r\n                        sortable>\r\n                </el-table-column>\r\n                <el-table-column\r\n                        prop=\"username\"\r\n                        label=\"姓名\"\r\n                        align=\"center\"\r\n                        sortable>\r\n                </el-table-column>\r\n                <el-table-column\r\n                        prop=\"telephone\"\r\n                        label=\"联系方式\"\r\n                        align=\"center\">\r\n                </el-table-column>\r\n                <el-table-column\r\n                        prop=\"email\"\r\n                        label=\"邮箱\"\r\n                        align=\"center\">\r\n                </el-table-column>\r\n\r\n                <el-table-column\r\n                        align=\"center\"\r\n                        label=\"操作\">\r\n                    <template slot-scope=\"scope\">\r\n                        <el-button type=\"text\" style=\"font-size: 16px\" size=\"medium\" @click=\"updateUserPsw(scope.row)\">修改密码</el-button>\r\n                        <el-button type=\"text\" style=\"color: #afafaf;font-size: 16px\" @click=\"deleteUser(scope.row)\">\r\n                            <i style=\"margin:0 0.2em\" class=\"el-icon-warning\"></i>注销</el-button>\r\n                    </template>\r\n                </el-table-column>\r\n\r\n            </el-table>\r\n        </template>\r\n\r\n        <!-- 分页工具条 数据小于10条不展示 -->\r\n        <el-pagination\r\n                id=\"pageBar\"\r\n                v-show=\"totalCount >= 10\"\r\n                @size-change=\"handleSizeChange\"\r\n                @current-change=\"handleCurrentChange\"\r\n                :current-page=\"currentPage\"\r\n                :page-sizes=\"[5, 10, 15, 20, 50, 100]\"\r\n                :page-size=\"pageSize\"\r\n                layout=\"total, sizes, prev, pager, next, jumper\"\r\n                :total=\"totalCount\">\r\n        </el-pagination>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    // 引入导出Excel表格依赖\r\n    import TableExport from \"@/components/TableExport\";\r\n    // 自定义组件\r\n    import Ckeditor4 from \"@/components/Ckeditor4\";\r\n    import SHAEncrypt from \"@/components/SHAEncrypt\";\r\n    export default {\r\n        name: 'AdmUserManage',\r\n        components:{\r\n            Ckeditor4,\r\n            SHAEncrypt,\r\n            TableExport\r\n        },\r\n        data(){\r\n            return{\r\n                // 当前页码\r\n                currentPage: 1,\r\n                // 分页大小\r\n                pageSize: 10,\r\n                // 总页码数\r\n                totalCount: 1,\r\n                // 搜索表单数据模型\r\n                searchTitle:{\r\n                    userId:'',\r\n                    username:'',\r\n                },\r\n                // 内置查询模型\r\n                searchFormIn:{\r\n                    userId:'',\r\n                    username:'',\r\n                },\r\n                // 用户编辑数据\r\n                userData:{\r\n                    userId:'',\r\n                    password:'',\r\n                    checkPsw:'',\r\n                },\r\n                // 添加账户对话框\r\n                insertDialogVisible:false,\r\n                // 修改密码对话框\r\n                updatePswDialogVisible:false,\r\n                // 通知数据列表\r\n                tableData:[],\r\n                // 对话框销毁器\r\n                closeDialog:false,\r\n            }\r\n        },\r\n        created() {\r\n            this.getTableData();\r\n        },\r\n        methods:{\r\n            // 查询用户数据\r\n            // 系统内置一个title，默认为空，即全查询。每次条件查询都会把条件赋给该title。\r\n            // 因此这样点击分页栏时可以正常显示查询结果。\r\n            getTableData(){\r\n                this.searchFormIn[\"pageSize\"]=this.pageSize;\r\n                this.searchFormIn[\"currentPage\"]=this.currentPage;\r\n                this.$axios.post(\"/Users/getPageByUsername\",this.searchFormIn).then((res)=>{\r\n                    if(res.data.flag){\r\n                        /* 保存用户数据 */\r\n                        this.tableData = res.data.data.records;\r\n                        /* 保存分页数据 */\r\n                        this.totalCount = res.data.data.total;\r\n                        this.currentPage = res.data.data.current;\r\n                        this.pageSize = res.data.data.size;\r\n                    }else{\r\n                        // 服务故障\r\n                        this.$message.error(\"信息获取失败！\");\r\n                    }\r\n                });\r\n            },\r\n            // 表格颜色控制\r\n            tableRowClassName({row, rowIndex}) {\r\n                if (rowIndex%4 === 1) {\r\n                    return 'warning-row';\r\n                } else if (rowIndex%4 === 3) {\r\n                    return 'success-row';\r\n                }\r\n                return '';\r\n            },\r\n            // 添加用户\r\n            insertUserOnSubmit(){\r\n                this.userData.userId = '';\r\n                this.userData.password = '';\r\n                this.closeDialog=true;\r\n                this.insertDialogVisible=true;\r\n            },\r\n            // 查询用户\r\n            searchUserOnSubmit(flag){\r\n                if(flag === '1'){\r\n                    // 刷新查询条件\r\n                    this.searchFormIn.userId =  this.searchTitle.userId;\r\n                    this.searchFormIn.username =  this.searchTitle.username;\r\n                }else{\r\n                    // 刷新查询条件\r\n                    this.searchFormIn.userId =  '';\r\n                    this.searchFormIn.username = '';\r\n                }\r\n                // 执行查询\r\n                this.getTableData();\r\n                /* 清空查询条件 */\r\n                this.searchTitle.userId='';\r\n                this.searchTitle.username='';\r\n            },\r\n            // 创建账户\r\n            insertUser(user){\r\n                /* 数据检查 */\r\n                if(user.userId === '' || user.password === ''){\r\n                    this.$message.warning(\"请填写完整再提交！\");\r\n                    return;\r\n                }\r\n                // 数据加密\r\n                user.password = SHAEncrypt.methods.sha1(user.password);\r\n                // 保存到数据库\r\n                this.$axios.post(\"/Users/createUser\",user).then((res)=>{\r\n                    if(res.data.flag){\r\n                        // 修改成功\r\n                        this.$message.success(res.data.msg);\r\n                        // 刷新用户数据\r\n                        this.getTableData();\r\n                        // 关闭编辑窗口\r\n                        this.insertDialogVisible=false;\r\n                    }else{\r\n                        // 服务故障\r\n                        this.$message.error(res.data.msg);\r\n                    }\r\n                });\r\n            },\r\n            // 修改密码激活\r\n            updateUserPsw(row){\r\n                // 预先绑定数据\r\n                this.userData.userId = row.userId;\r\n                this.userData.password = '';\r\n                this.userData.checkPsw = '';\r\n                this.closeDialog = true;\r\n                this.updatePswDialogVisible = true;\r\n            },\r\n            // 更新用户数据\r\n            updateUserData(user){\r\n                if(user.password !== user.checkPsw || user.checkPsw === ''){\r\n                    this.$message.warning(\"两次密码不一致！\");\r\n                    return;\r\n                }\r\n                // 数据加密\r\n                user.password = SHAEncrypt.methods.sha1(user.password);\r\n                user.checkPsw = SHAEncrypt.methods.sha1(user.checkPsw);\r\n                // 保存到数据库\r\n                this.$axios.post(\"/Users/updatePsw\",user).then((res)=>{\r\n                    if(res.data.flag){\r\n                        // 修改成功\r\n                        this.$message.success(res.data.msg);\r\n                        // 刷新用户数据\r\n                        this.getTableData();\r\n                        // 关闭编辑窗口\r\n                        this.updatePswDialogVisible=false;\r\n                    }else{\r\n                        // 服务故障\r\n                        this.$message.error(res.data.msg);\r\n                    }\r\n                });\r\n            },\r\n            // 编辑用户数据dialog销毁\r\n            dialogHandleClose(){\r\n                // 手动销毁\r\n                this.closeDialog = false;\r\n            },\r\n            // 当某行数据被点击\r\n            rowClick(row,column){\r\n                // 排除操作列\r\n                if(column.label === '操作')return;\r\n                //\r\n\r\n            },\r\n            // 注销用户\r\n            deleteUser(row){\r\n                // 弹框确认\r\n                this.$confirm('此操作将注销该账户及其相关全部数据, 是否继续?', '警告', {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    type: 'warning'\r\n                }).then(() => {\r\n                    let user = {userId:row.userId};\r\n                    // 执行删除\r\n                    console.log(user)\r\n                    this.$axios.post(\"/Users/deleteUser\",user).then((res)=>{\r\n                        if(res.data.flag){\r\n                            // 删除成功，刷新数据\r\n                            this.getTableData();\r\n                            this.$message.success('删除成功！');\r\n                        }else{\r\n                            this.$message.error('删除失败！');\r\n                        }\r\n                    })\r\n                }).catch(() => {\r\n                    // 取消删除\r\n                    this.$message.info('取消删除');\r\n                });\r\n            },\r\n            // 分页大小变化\r\n            handleSizeChange(val) {\r\n                this.pageSize = val;\r\n                // 查询所有用户数据\r\n                this.getTableData();\r\n            },\r\n            // 当前页变化\r\n            handleCurrentChange(val) {\r\n                this.currentPage = val;\r\n                // 查询所有用户数据\r\n                this.getTableData();\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n    /* 功能栏 */\r\n    #functionMenu{\r\n        display: block;\r\n        margin-top: 20px;\r\n        margin-left: 20px;\r\n    }\r\n    /* 确认文字 */\r\n    .btLogin{\r\n        color: #ffffff;\r\n        font-size: 17px;\r\n        font-weight: 500;\r\n        font-family: \"微软雅黑\";\r\n        /* 文字间距 */\r\n        letter-spacing: 10px;\r\n    }\r\n    /* 搜索框 */\r\n    #file-form-select{\r\n        left: 58%;\r\n        margin-top: 20px;\r\n        position: relative;\r\n    }\r\n    /* 表格行高控制 */\r\n    ::v-deep .el-table .el-table__cell{\r\n        padding: 9px 0;\r\n    }\r\n    .el-table{\r\n        font-size: 17px;\r\n    }\r\n    /* 分页工具条上框 */\r\n    #pageBar{\r\n        margin-top: 20px;\r\n    }\r\n</style>"]},"metadata":{},"sourceType":"module"}