{"ast":null,"code":"import \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.map.js\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { h } from '@logicflow/core';\nexport default function Polygon(_a) {\n  var _b = _a.fillOpacity,\n      fillOpacity = _b === void 0 ? 1 : _b,\n      _c = _a.strokeWidth,\n      strokeWidth = _c === void 0 ? 1 : _c,\n      _d = _a.strokeOpacity,\n      strokeOpacity = _d === void 0 ? 1 : _d,\n      _e = _a.fill,\n      fill = _e === void 0 ? 'transparent' : _e,\n      _f = _a.stroke,\n      stroke = _f === void 0 ? '#000' : _f,\n      points = _a.points,\n      _g = _a.className,\n      className = _g === void 0 ? 'lf-basic-shape' : _g;\n  var attrs = {\n    fill: fill,\n    fillOpacity: fillOpacity,\n    strokeWidth: strokeWidth,\n    stroke: stroke,\n    strokeOpacity: strokeOpacity,\n    points: '',\n    className: className\n  };\n  attrs.points = points.map(function (point) {\n    return point.join(',');\n  }).join(' ');\n  return h(\"polygon\", __assign({}, attrs));\n}","map":{"version":3,"sources":["F:/Desktop/繁星教育/TH资料/two_hours_front/node_modules/@logicflow/extension/es/NodeResize/BasicShape/Polygon.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","h","Polygon","_a","_b","fillOpacity","_c","strokeWidth","_d","strokeOpacity","_e","fill","_f","stroke","points","_g","className","attrs","map","point","join"],"mappings":";;;;AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd;AAAiB,YAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AADJ;AAEH;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,SAASO,CAAT,QAAkB,iBAAlB;AACA,eAAe,SAASC,OAAT,CAAiBC,EAAjB,EAAqB;AAChC,MAAIC,EAAE,GAAGD,EAAE,CAACE,WAAZ;AAAA,MAAyBA,WAAW,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,CAAhB,GAAoBA,EAA3D;AAAA,MAA+DE,EAAE,GAAGH,EAAE,CAACI,WAAvE;AAAA,MAAoFA,WAAW,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,CAAhB,GAAoBA,EAAtH;AAAA,MAA0HE,EAAE,GAAGL,EAAE,CAACM,aAAlI;AAAA,MAAiJA,aAAa,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,CAAhB,GAAoBA,EAArL;AAAA,MAAyLE,EAAE,GAAGP,EAAE,CAACQ,IAAjM;AAAA,MAAuMA,IAAI,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,aAAhB,GAAgCA,EAA9O;AAAA,MAAkPE,EAAE,GAAGT,EAAE,CAACU,MAA1P;AAAA,MAAkQA,MAAM,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,MAAhB,GAAyBA,EAApS;AAAA,MAAwSE,MAAM,GAAGX,EAAE,CAACW,MAApT;AAAA,MAA4TC,EAAE,GAAGZ,EAAE,CAACa,SAApU;AAAA,MAA+UA,SAAS,GAAGD,EAAE,KAAK,KAAK,CAAZ,GAAgB,gBAAhB,GAAmCA,EAA9X;AACA,MAAIE,KAAK,GAAG;AACRN,IAAAA,IAAI,EAAEA,IADE;AAERN,IAAAA,WAAW,EAAEA,WAFL;AAGRE,IAAAA,WAAW,EAAEA,WAHL;AAIRM,IAAAA,MAAM,EAAEA,MAJA;AAKRJ,IAAAA,aAAa,EAAEA,aALP;AAMRK,IAAAA,MAAM,EAAE,EANA;AAORE,IAAAA,SAAS,EAAEA;AAPH,GAAZ;AASAC,EAAAA,KAAK,CAACH,MAAN,GAAeA,MAAM,CAACI,GAAP,CAAW,UAAUC,KAAV,EAAiB;AAAE,WAAOA,KAAK,CAACC,IAAN,CAAW,GAAX,CAAP;AAAyB,GAAvD,EAAyDA,IAAzD,CAA8D,GAA9D,CAAf;AACA,SAAQnB,CAAC,CAAC,SAAD,EAAYd,QAAQ,CAAC,EAAD,EAAK8B,KAAL,CAApB,CAAT;AACH","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { h } from '@logicflow/core';\nexport default function Polygon(_a) {\n    var _b = _a.fillOpacity, fillOpacity = _b === void 0 ? 1 : _b, _c = _a.strokeWidth, strokeWidth = _c === void 0 ? 1 : _c, _d = _a.strokeOpacity, strokeOpacity = _d === void 0 ? 1 : _d, _e = _a.fill, fill = _e === void 0 ? 'transparent' : _e, _f = _a.stroke, stroke = _f === void 0 ? '#000' : _f, points = _a.points, _g = _a.className, className = _g === void 0 ? 'lf-basic-shape' : _g;\n    var attrs = {\n        fill: fill,\n        fillOpacity: fillOpacity,\n        strokeWidth: strokeWidth,\n        stroke: stroke,\n        strokeOpacity: strokeOpacity,\n        points: '',\n        className: className,\n    };\n    attrs.points = points.map(function (point) { return point.join(','); }).join(' ');\n    return (h(\"polygon\", __assign({}, attrs)));\n}\n"]},"metadata":{},"sourceType":"module"}