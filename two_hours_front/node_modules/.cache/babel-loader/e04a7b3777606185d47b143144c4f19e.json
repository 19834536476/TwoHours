{"ast":null,"code":"import \"core-js/modules/es.number.max-safe-integer.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.from.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\n\n/**\n * 快照插件，生成视图\n */\nvar Snapshot =\n/** @class */\nfunction () {\n  function Snapshot(_a) {\n    var _this = this;\n\n    var lf = _a.lf;\n    this.lf = lf;\n    this.customCssRules = '';\n    this.useGlobalRules = true;\n    /* 下载快照 */\n\n    lf.getSnapshot = function (fileName, backgroundColor) {\n      _this.getSnapshot(fileName, backgroundColor);\n    };\n    /* 获取Blob对象，用户图片上传 */\n\n\n    lf.getSnapshotBlob = function (backgroundColor) {\n      return _this.getSnapshotBlob(backgroundColor);\n    };\n    /* 获取Base64对象，用户图片上传 */\n\n\n    lf.getSnapshotBase64 = function (backgroundColor) {\n      return _this.getSnapshotBase64(backgroundColor);\n    };\n  }\n  /* 获取svgRoot对象 */\n\n\n  Snapshot.prototype.getSvgRootElement = function (lf) {\n    var _this = this;\n\n    this.offsetX = Number.MAX_SAFE_INTEGER;\n    this.offsetY = Number.MAX_SAFE_INTEGER;\n    lf.graphModel.nodes.forEach(function (item) {\n      var x = item.x,\n          width = item.width,\n          y = item.y,\n          height = item.height;\n      var offsetX = x - width / 2;\n      var offsetY = y - height / 2;\n\n      if (offsetX < _this.offsetX) {\n        _this.offsetX = offsetX - 5;\n      }\n\n      if (offsetY < _this.offsetY) {\n        _this.offsetY = offsetY - 5;\n      }\n    });\n    lf.graphModel.edges.forEach(function (edge) {\n      if (edge.pointsList) {\n        edge.pointsList.forEach(function (point) {\n          var x = point.x,\n              y = point.y;\n\n          if (x < _this.offsetX) {\n            _this.offsetX = x - 5;\n          }\n\n          if (y < _this.offsetY) {\n            _this.offsetY = y - 5;\n          }\n        });\n      }\n    });\n    var svgRootElement = lf.container.querySelector('.lf-canvas-overlay');\n    return svgRootElement;\n  };\n\n  Snapshot.prototype.triggerDownload = function (imgURI) {\n    var evt = new MouseEvent('click', {\n      view: window,\n      bubbles: false,\n      cancelable: true\n    });\n    var a = document.createElement('a');\n    a.setAttribute('download', this.fileName);\n    a.setAttribute('href', imgURI);\n    a.setAttribute('target', '_blank');\n    a.dispatchEvent(evt);\n  };\n\n  Snapshot.prototype.removeAnchor = function (element) {\n    var childNodes = element.childNodes;\n    var childLength = element.childNodes && element.childNodes.length;\n\n    for (var i = 0; i < childLength; i++) {\n      var child = childNodes[i];\n      var classList = child.classList && Array.from(child.classList) || [];\n\n      if (classList.indexOf('lf-anchor') > -1) {\n        element.removeChild(element.childNodes[i]);\n        childLength--;\n        i--;\n      }\n    }\n  };\n  /* 下载图片 */\n\n\n  Snapshot.prototype.getSnapshot = function (fileName, backgroundColor) {\n    var _this = this;\n\n    this.fileName = fileName || \"logic-flow.\" + Date.now() + \".png\";\n    var svg = this.getSvgRootElement(this.lf);\n    this.getCanvasData(svg, backgroundColor).then(function (canvas) {\n      var imgURI = canvas.toDataURL('image/png').replace('image/png', 'image/octet-stream');\n\n      _this.triggerDownload(imgURI);\n    });\n  };\n  /* 获取base64对象 */\n\n\n  Snapshot.prototype.getSnapshotBase64 = function (backgroundColor) {\n    var _this = this;\n\n    var svg = this.getSvgRootElement(this.lf);\n    return new Promise(function (resolve) {\n      _this.getCanvasData(svg, backgroundColor).then(function (canvas) {\n        var base64 = canvas.toDataURL('image/png'); // 输出图片数据以及图片宽高\n\n        resolve({\n          data: base64,\n          width: canvas.width,\n          height: canvas.height\n        });\n      });\n    });\n  };\n  /* 获取Blob对象 */\n\n\n  Snapshot.prototype.getSnapshotBlob = function (backgroundColor) {\n    var _this = this;\n\n    var svg = this.getSvgRootElement(this.lf);\n    return new Promise(function (resolve) {\n      _this.getCanvasData(svg, backgroundColor).then(function (canvas) {\n        canvas.toBlob(function (blob) {\n          // 输出图片数据以及图片宽高\n          resolve({\n            data: blob,\n            width: canvas.width,\n            height: canvas.height\n          });\n        }, 'image/png');\n      });\n    });\n  };\n\n  Snapshot.prototype.getClassRules = function () {\n    var rules = '';\n\n    if (this.useGlobalRules) {\n      var styleSheets = document.styleSheets;\n\n      for (var i = 0; i < styleSheets.length; i++) {\n        var sheet = styleSheets[i];\n\n        for (var j = 0; j < sheet.cssRules.length; j++) {\n          rules += sheet.cssRules[j].cssText;\n        }\n      }\n    }\n\n    if (this.customCssRules) {\n      rules += this.customCssRules;\n    }\n\n    return rules;\n  }; // 获取图片生成中中间产物canvas对象，用户转换为其他需要的格式\n\n\n  Snapshot.prototype.getCanvasData = function (svg, backgroundColor) {\n    var _this = this;\n\n    var copy = svg.cloneNode(true);\n    var graph = copy.lastChild;\n    var childLength = graph.childNodes && graph.childNodes.length;\n\n    if (childLength) {\n      for (var i = 0; i < childLength; i++) {\n        var lfLayer = graph.childNodes[i]; // 只保留包含节点和边的基础图层进行下载，其他图层删除\n\n        var layerClassList = lfLayer.classList && Array.from(lfLayer.classList);\n\n        if (layerClassList && layerClassList.indexOf('lf-base') < 0) {\n          graph.removeChild(graph.childNodes[i]);\n          childLength--;\n          i--;\n        } else {\n          // 删除锚点\n          var lfBase = graph.childNodes[i];\n          lfBase && lfBase.childNodes.forEach(function (item) {\n            var element = item;\n\n            _this.removeAnchor(element.firstChild);\n          });\n        }\n      }\n    } // offset值加10，保证图形不会紧贴着下载图片的左边和上边\n\n\n    copy.lastChild.style.transform = \"matrix(1, 0, 0, 1, \" + (-this.offsetX + 10) + \", \" + (-this.offsetY + 10) + \")\";\n    var dpr = window.devicePixelRatio || 1;\n    var canvas = document.createElement('canvas');\n    /*\n    为了计算真实宽高需要取图的真实dom\n    真实dom存在缩放影响其宽高数值\n    在得到真实宽高后除以缩放比例即可得到正常宽高\n    */\n\n    var base = document.getElementsByClassName('lf-base')[0];\n    var bbox = base.getBoundingClientRect();\n    var graphModel = this.lf.graphModel;\n    var transformModel = graphModel.transformModel;\n    var SCALE_X = transformModel.SCALE_X,\n        SCALE_Y = transformModel.SCALE_Y;\n    var bboxWidth = Math.ceil(bbox.width / SCALE_X);\n    var bboxHeight = Math.ceil(bbox.height / SCALE_Y); // width,height 值加40，保证图形不会紧贴着下载图片的右边和下边\n\n    canvas.style.width = bboxWidth + \"px\";\n    canvas.style.height = bboxHeight + \"px\";\n    canvas.width = bboxWidth * dpr + 80;\n    canvas.height = bboxHeight * dpr + 80;\n    var ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.scale(dpr, dpr); // 如果有背景色，设置流程图导出的背景色\n\n    if (backgroundColor) {\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(0, 0, bboxWidth * dpr + 80, bboxHeight * dpr + 80);\n    } else {\n      ctx.clearRect(0, 0, bboxWidth, bboxHeight);\n    }\n\n    var img = new Image();\n    var style = document.createElement('style');\n    style.innerHTML = this.getClassRules();\n    var foreignObject = document.createElement('foreignObject');\n    foreignObject.appendChild(style);\n    copy.appendChild(foreignObject);\n    return new Promise(function (resolve) {\n      img.onload = function () {\n        ctx.drawImage(img, 0, 0);\n        resolve(canvas);\n      };\n      /*\n      因为svg中存在dom存放在foreignObject元素中\n      SVG图形转成img对象\n      todo: 会导致一些清晰度问题这个需要再解决\n      fixme: XMLSerializer的中的css background url不会下载图片\n      */\n\n\n      var svg2Img = \"data:image/svg+xml;charset=utf-8,\" + new XMLSerializer().serializeToString(copy);\n      var imgSrc = svg2Img.replace(/\\n/g, '').replace(/\\t/g, '').replace(/#/g, '%23');\n      img.src = imgSrc;\n    });\n  };\n\n  Snapshot.pluginName = 'snapshot';\n  return Snapshot;\n}();\n\nexport default Snapshot;\nexport { Snapshot };","map":{"version":3,"sources":["F:/Desktop/繁星教育/TH资料/two_hours_front/node_modules/@logicflow/extension/es/tools/snapshot/index.js"],"names":["Snapshot","_a","_this","lf","customCssRules","useGlobalRules","getSnapshot","fileName","backgroundColor","getSnapshotBlob","getSnapshotBase64","prototype","getSvgRootElement","offsetX","Number","MAX_SAFE_INTEGER","offsetY","graphModel","nodes","forEach","item","x","width","y","height","edges","edge","pointsList","point","svgRootElement","container","querySelector","triggerDownload","imgURI","evt","MouseEvent","view","window","bubbles","cancelable","a","document","createElement","setAttribute","dispatchEvent","removeAnchor","element","childNodes","childLength","length","i","child","classList","Array","from","indexOf","removeChild","Date","now","svg","getCanvasData","then","canvas","toDataURL","replace","Promise","resolve","base64","data","toBlob","blob","getClassRules","rules","styleSheets","sheet","j","cssRules","cssText","copy","cloneNode","graph","lastChild","lfLayer","layerClassList","lfBase","firstChild","style","transform","dpr","devicePixelRatio","base","getElementsByClassName","bbox","getBoundingClientRect","transformModel","SCALE_X","SCALE_Y","bboxWidth","Math","ceil","bboxHeight","ctx","getContext","clearRect","scale","fillStyle","fillRect","img","Image","innerHTML","foreignObject","appendChild","onload","drawImage","svg2Img","XMLSerializer","serializeToString","imgSrc","src","pluginName"],"mappings":"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","sourcesContent":["/**\n * 快照插件，生成视图\n */\nvar Snapshot = /** @class */ (function () {\n    function Snapshot(_a) {\n        var _this = this;\n        var lf = _a.lf;\n        this.lf = lf;\n        this.customCssRules = '';\n        this.useGlobalRules = true;\n        /* 下载快照 */\n        lf.getSnapshot = function (fileName, backgroundColor) {\n            _this.getSnapshot(fileName, backgroundColor);\n        };\n        /* 获取Blob对象，用户图片上传 */\n        lf.getSnapshotBlob = function (backgroundColor) { return _this.getSnapshotBlob(backgroundColor); };\n        /* 获取Base64对象，用户图片上传 */\n        lf.getSnapshotBase64 = function (backgroundColor) { return _this.getSnapshotBase64(backgroundColor); };\n    }\n    /* 获取svgRoot对象 */\n    Snapshot.prototype.getSvgRootElement = function (lf) {\n        var _this = this;\n        this.offsetX = Number.MAX_SAFE_INTEGER;\n        this.offsetY = Number.MAX_SAFE_INTEGER;\n        lf.graphModel.nodes.forEach(function (item) {\n            var x = item.x, width = item.width, y = item.y, height = item.height;\n            var offsetX = x - width / 2;\n            var offsetY = y - height / 2;\n            if (offsetX < _this.offsetX) {\n                _this.offsetX = offsetX - 5;\n            }\n            if (offsetY < _this.offsetY) {\n                _this.offsetY = offsetY - 5;\n            }\n        });\n        lf.graphModel.edges.forEach(function (edge) {\n            if (edge.pointsList) {\n                edge.pointsList.forEach(function (point) {\n                    var x = point.x, y = point.y;\n                    if (x < _this.offsetX) {\n                        _this.offsetX = x - 5;\n                    }\n                    if (y < _this.offsetY) {\n                        _this.offsetY = y - 5;\n                    }\n                });\n            }\n        });\n        var svgRootElement = lf.container.querySelector('.lf-canvas-overlay');\n        return svgRootElement;\n    };\n    Snapshot.prototype.triggerDownload = function (imgURI) {\n        var evt = new MouseEvent('click', {\n            view: window,\n            bubbles: false,\n            cancelable: true,\n        });\n        var a = document.createElement('a');\n        a.setAttribute('download', this.fileName);\n        a.setAttribute('href', imgURI);\n        a.setAttribute('target', '_blank');\n        a.dispatchEvent(evt);\n    };\n    Snapshot.prototype.removeAnchor = function (element) {\n        var childNodes = element.childNodes;\n        var childLength = element.childNodes && element.childNodes.length;\n        for (var i = 0; i < childLength; i++) {\n            var child = childNodes[i];\n            var classList = (child.classList && Array.from(child.classList)) || [];\n            if (classList.indexOf('lf-anchor') > -1) {\n                element.removeChild(element.childNodes[i]);\n                childLength--;\n                i--;\n            }\n        }\n    };\n    /* 下载图片 */\n    Snapshot.prototype.getSnapshot = function (fileName, backgroundColor) {\n        var _this = this;\n        this.fileName = fileName || \"logic-flow.\" + Date.now() + \".png\";\n        var svg = this.getSvgRootElement(this.lf);\n        this.getCanvasData(svg, backgroundColor).then(function (canvas) {\n            var imgURI = canvas.toDataURL('image/png')\n                .replace('image/png', 'image/octet-stream');\n            _this.triggerDownload(imgURI);\n        });\n    };\n    /* 获取base64对象 */\n    Snapshot.prototype.getSnapshotBase64 = function (backgroundColor) {\n        var _this = this;\n        var svg = this.getSvgRootElement(this.lf);\n        return new Promise(function (resolve) {\n            _this.getCanvasData(svg, backgroundColor).then(function (canvas) {\n                var base64 = canvas.toDataURL('image/png');\n                // 输出图片数据以及图片宽高\n                resolve({ data: base64, width: canvas.width, height: canvas.height });\n            });\n        });\n    };\n    /* 获取Blob对象 */\n    Snapshot.prototype.getSnapshotBlob = function (backgroundColor) {\n        var _this = this;\n        var svg = this.getSvgRootElement(this.lf);\n        return new Promise(function (resolve) {\n            _this.getCanvasData(svg, backgroundColor).then(function (canvas) {\n                canvas.toBlob(function (blob) {\n                    // 输出图片数据以及图片宽高\n                    resolve({ data: blob, width: canvas.width, height: canvas.height });\n                }, 'image/png');\n            });\n        });\n    };\n    Snapshot.prototype.getClassRules = function () {\n        var rules = '';\n        if (this.useGlobalRules) {\n            var styleSheets = document.styleSheets;\n            for (var i = 0; i < styleSheets.length; i++) {\n                var sheet = styleSheets[i];\n                for (var j = 0; j < sheet.cssRules.length; j++) {\n                    rules += sheet.cssRules[j].cssText;\n                }\n            }\n        }\n        if (this.customCssRules) {\n            rules += this.customCssRules;\n        }\n        return rules;\n    };\n    // 获取图片生成中中间产物canvas对象，用户转换为其他需要的格式\n    Snapshot.prototype.getCanvasData = function (svg, backgroundColor) {\n        var _this = this;\n        var copy = svg.cloneNode(true);\n        var graph = copy.lastChild;\n        var childLength = graph.childNodes && graph.childNodes.length;\n        if (childLength) {\n            for (var i = 0; i < childLength; i++) {\n                var lfLayer = graph.childNodes[i];\n                // 只保留包含节点和边的基础图层进行下载，其他图层删除\n                var layerClassList = lfLayer.classList && Array.from(lfLayer.classList);\n                if (layerClassList && layerClassList.indexOf('lf-base') < 0) {\n                    graph.removeChild(graph.childNodes[i]);\n                    childLength--;\n                    i--;\n                }\n                else {\n                    // 删除锚点\n                    var lfBase = graph.childNodes[i];\n                    lfBase && lfBase.childNodes.forEach(function (item) {\n                        var element = item;\n                        _this.removeAnchor(element.firstChild);\n                    });\n                }\n            }\n        }\n        // offset值加10，保证图形不会紧贴着下载图片的左边和上边\n        copy.lastChild.style.transform = \"matrix(1, 0, 0, 1, \" + (-this.offsetX + 10) + \", \" + (-this.offsetY + 10) + \")\";\n        var dpr = window.devicePixelRatio || 1;\n        var canvas = document.createElement('canvas');\n        /*\n        为了计算真实宽高需要取图的真实dom\n        真实dom存在缩放影响其宽高数值\n        在得到真实宽高后除以缩放比例即可得到正常宽高\n        */\n        var base = document.getElementsByClassName('lf-base')[0];\n        var bbox = base.getBoundingClientRect();\n        var graphModel = this.lf.graphModel;\n        var transformModel = graphModel.transformModel;\n        var SCALE_X = transformModel.SCALE_X, SCALE_Y = transformModel.SCALE_Y;\n        var bboxWidth = Math.ceil(bbox.width / SCALE_X);\n        var bboxHeight = Math.ceil(bbox.height / SCALE_Y);\n        // width,height 值加40，保证图形不会紧贴着下载图片的右边和下边\n        canvas.style.width = bboxWidth + \"px\";\n        canvas.style.height = bboxHeight + \"px\";\n        canvas.width = bboxWidth * dpr + 80;\n        canvas.height = bboxHeight * dpr + 80;\n        var ctx = canvas.getContext('2d');\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.scale(dpr, dpr);\n        // 如果有背景色，设置流程图导出的背景色\n        if (backgroundColor) {\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(0, 0, bboxWidth * dpr + 80, bboxHeight * dpr + 80);\n        }\n        else {\n            ctx.clearRect(0, 0, bboxWidth, bboxHeight);\n        }\n        var img = new Image();\n        var style = document.createElement('style');\n        style.innerHTML = this.getClassRules();\n        var foreignObject = document.createElement('foreignObject');\n        foreignObject.appendChild(style);\n        copy.appendChild(foreignObject);\n        return new Promise(function (resolve) {\n            img.onload = function () {\n                ctx.drawImage(img, 0, 0);\n                resolve(canvas);\n            };\n            /*\n            因为svg中存在dom存放在foreignObject元素中\n            SVG图形转成img对象\n            todo: 会导致一些清晰度问题这个需要再解决\n            fixme: XMLSerializer的中的css background url不会下载图片\n            */\n            var svg2Img = \"data:image/svg+xml;charset=utf-8,\" + new XMLSerializer().serializeToString(copy);\n            var imgSrc = svg2Img.replace(/\\n/g, '').replace(/\\t/g, '').replace(/#/g, '%23');\n            img.src = imgSrc;\n        });\n    };\n    Snapshot.pluginName = 'snapshot';\n    return Snapshot;\n}());\nexport default Snapshot;\nexport { Snapshot, };\n"]},"metadata":{},"sourceType":"module"}