{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.symbol.iterator.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.fill.js\";\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {\n      ar.push(r.value);\n    }\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spread = this && this.__spread || function () {\n  for (var ar = [], i = 0; i < arguments.length; i++) {\n    ar = ar.concat(__read(arguments[i]));\n  }\n\n  return ar;\n};\n\nimport { h } from '@logicflow/core';\nimport { RectResize } from '../../NodeResize';\nvar defaultWidth = 500;\nvar defaultHeight = 300;\n\nvar GroupNodeModel =\n/** @class */\nfunction (_super) {\n  __extends(GroupNodeModel, _super);\n\n  function GroupNodeModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.isGroup = true;\n    _this.unfoldedWidth = defaultWidth;\n    _this.unfoldedHight = defaultHeight;\n    return _this;\n  }\n\n  GroupNodeModel.prototype.initNodeData = function (data) {\n    var _this = this;\n\n    _super.prototype.initNodeData.call(this, data);\n\n    var children = [];\n\n    if (Array.isArray(data.children)) {\n      children = data.children;\n    } // 初始化组的子节点\n\n\n    this.children = new Set(children);\n    this.width = defaultWidth;\n    this.height = defaultHeight;\n    this.foldedWidth = 80;\n    this.foldedHeight = 60; // todo: 参考bpmn.js, 分组和未加入分组的节点重合时，未加入分组的节点在分组之下。方便标识。\n\n    this.zIndex = -1;\n    this.radius = 0;\n    this.text.editable = false;\n    this.text.draggable = false;\n    this.isRestrict = false;\n    this.resizable = false;\n    this.autoToFront = false;\n    this.foldable = false;\n\n    if (this.properties.isFolded === undefined) {\n      this.properties.isFolded = false;\n    }\n\n    this.isFolded = this.properties.isFolded; // fixme: 虽然默认保存的分组不会收起，但是如果重写保存数据分组了，\n    // 此处代码会导致多一个history记录\n\n    setTimeout(function () {\n      _this.isFolded && _this.foldGroup(_this.isFolded);\n    }); // this.foldGroup(this.isFolded);\n  };\n\n  GroupNodeModel.prototype.getResizeOutlineStyle = function () {\n    var style = _super.prototype.getResizeOutlineStyle.call(this);\n\n    style.stroke = 'none';\n    return style;\n  };\n  /**\n   * 折叠分组\n   * 1. 折叠分组的宽高\n   * 2. 处理分组子节点\n   * 3. 处理连线\n   */\n\n\n  GroupNodeModel.prototype.foldGroup = function (isFolded) {\n    var _this = this;\n\n    this.setProperty('isFolded', isFolded);\n    this.isFolded = isFolded; // step 1\n\n    if (isFolded) {\n      this.x = this.x - this.width / 2 + this.foldedWidth / 2;\n      this.y = this.y - this.height / 2 + this.foldedHeight / 2;\n      this.unfoldedWidth = this.width;\n      this.unfoldedHight = this.height;\n      this.width = this.foldedWidth;\n      this.height = this.foldedHeight;\n    } else {\n      this.width = this.unfoldedWidth;\n      this.height = this.unfoldedHight;\n      this.x = this.x + this.width / 2 - this.foldedWidth / 2;\n      this.y = this.y + this.height / 2 - this.foldedHeight / 2;\n    } // step 2\n\n\n    var allEdges = this.incoming.edges.concat(this.outgoing.edges);\n    this.children.forEach(function (elementId) {\n      var nodeModel = _this.graphModel.getElement(elementId);\n\n      nodeModel.visible = !isFolded;\n      allEdges = allEdges.concat(nodeModel.incoming.edges.concat(nodeModel.outgoing.edges));\n    }); // step 3\n\n    this.foldEdge(isFolded, allEdges);\n  };\n\n  GroupNodeModel.prototype.getAnchorStyle = function (anchorInfo) {\n    var style = _super.prototype.getAnchorStyle.call(this, anchorInfo);\n\n    style.stroke = 'transparent';\n    style.fill = 'transparent';\n    style.hover.fill = 'transparent';\n    style.hover.stroke = 'transparent';\n    return style;\n  };\n  /**\n   * 折叠分组的时候，处理分组自身的连线和分组内部子节点上的连线\n   * 边的分类：\n   *   - 虚拟边：分组被收起时，表示分组本身与外部节点关系的边。\n   *   - 真实边：分组本身或者分组内部节点与外部节点节点（非收起分组）关系的边。\n   * 如果一个分组，本身与外部节点有M条连线，且内部N个子节点与外部节点有连线，那么这个分组收起时会生成M+N条连线。\n   * 折叠分组时：\n   *   - 原有的虚拟边删除；\n   *   - 创建一个虚拟边；\n   *   - 真实边则隐藏；\n   * 展开分组是：\n   *   - 原有的虚拟边删除；\n   *   - 如果目外部点是收起的分组，则创建虚拟边；\n   *   - 如果外部节点是普通节点，则显示真实边；\n   */\n\n\n  GroupNodeModel.prototype.foldEdge = function (isFolded, allEdges) {\n    var _this = this;\n\n    allEdges.forEach(function (edgeModel, index) {\n      var id = edgeModel.id,\n          sourceNodeId = edgeModel.sourceNodeId,\n          targetNodeId = edgeModel.targetNodeId,\n          startPoint = edgeModel.startPoint,\n          endPoint = edgeModel.endPoint,\n          type = edgeModel.type,\n          properties = edgeModel.properties,\n          text = edgeModel.text;\n      var data = {\n        id: id + \"__\" + index,\n        sourceNodeId: sourceNodeId,\n        targetNodeId: targetNodeId,\n        startPoint: startPoint,\n        endPoint: endPoint,\n        type: type,\n        properties: properties,\n        text: text === null || text === void 0 ? void 0 : text.value\n      };\n\n      if (edgeModel.virtual) {\n        _this.graphModel.deleteEdgeById(edgeModel.id);\n      }\n\n      var targetNodeIdGroup = _this.graphModel.group.getNodeGroup(targetNodeId); // 考虑目标节点本来就是分组的情况\n\n\n      if (!targetNodeIdGroup) {\n        targetNodeIdGroup = _this.graphModel.getNodeModelById(targetNodeId);\n      }\n\n      var sourceNodeIdGroup = _this.graphModel.group.getNodeGroup(sourceNodeId);\n\n      if (!sourceNodeIdGroup) {\n        sourceNodeIdGroup = _this.graphModel.getNodeModelById(sourceNodeId);\n      } // 折叠时，处理未被隐藏的边的逻辑\n\n\n      if (isFolded && edgeModel.visible !== false) {\n        // 需要确认此分组节点是新连线的起点还是终点\n        // 创建一个虚拟边，虚拟边相对真实边，起点或者终点从一起分组内部的节点成为了分组，\n        // 如果需要被隐藏的边的起点在需要折叠的分组中，那么设置虚拟边的开始节点为此分组\n        if (_this.children.has(sourceNodeId) || _this.id === sourceNodeId) {\n          data.startPoint = undefined;\n          data.sourceNodeId = _this.id;\n        } else {\n          data.endPoint = undefined;\n          data.targetNodeId = _this.id;\n        } // 如果边的起点和终点都在分组内部，则不创建新的虚拟边\n\n\n        if (targetNodeIdGroup.id !== _this.id || sourceNodeIdGroup.id !== _this.id) {\n          _this.createVirtualEdge(data);\n        }\n\n        edgeModel.visible = false;\n      } // 展开时，处理被隐藏的边的逻辑\n\n\n      if (!isFolded && edgeModel.visible === false) {\n        // 展开分组时：判断真实边的起点和终点是否有任一节点在已折叠分组中，如果不是，则显示真实边。如果是，这修改这个边的对应目标节点id来创建虚拟边。\n        if (targetNodeIdGroup && targetNodeIdGroup.isGroup && targetNodeIdGroup.isFolded) {\n          data.targetNodeId = targetNodeIdGroup.id;\n          data.endPoint = undefined;\n\n          _this.createVirtualEdge(data);\n        } else if (sourceNodeIdGroup && sourceNodeIdGroup.isGroup && sourceNodeIdGroup.isFolded) {\n          data.sourceNodeId = sourceNodeIdGroup.id;\n          data.startPoint = undefined;\n\n          _this.createVirtualEdge(data);\n        } else {\n          edgeModel.visible = true;\n        }\n      }\n    });\n  };\n\n  GroupNodeModel.prototype.createVirtualEdge = function (edgeData) {\n    edgeData.pointsList = undefined;\n    var model = this.graphModel.addEdge(edgeData);\n    model.virtual = true; // 强制不保存group连线数据\n\n    model.getData = function () {\n      return null;\n    };\n\n    model.text.editable = false;\n    model.isFoldedEdge = true;\n  };\n\n  GroupNodeModel.prototype.isInRange = function (_a) {\n    var x1 = _a.x1,\n        y1 = _a.y1,\n        x2 = _a.x2,\n        y2 = _a.y2;\n    return x1 >= this.x - this.width / 2 && x2 <= this.x + this.width / 2 && y1 >= this.y - this.height / 2 && y2 <= this.y + this.height / 2;\n  };\n\n  GroupNodeModel.prototype.isAllowMoveTo = function (_a) {\n    var x1 = _a.x1,\n        y1 = _a.y1,\n        x2 = _a.x2,\n        y2 = _a.y2;\n    return {\n      x: x1 >= this.x - this.width / 2 && x2 <= this.x + this.width / 2,\n      y: y1 >= this.y - this.height / 2 && y2 <= this.y + this.height / 2\n    };\n  };\n\n  GroupNodeModel.prototype.setAllowAppendChild = function (isAllow) {\n    this.setProperty('groupAddable', isAllow);\n  };\n  /**\n   * 添加分组子节点\n   * @param id 节点id\n   */\n\n\n  GroupNodeModel.prototype.addChild = function (id) {\n    this.children.add(id);\n  };\n  /**\n   * 删除分组子节点\n   * @param id 节点id\n   */\n\n\n  GroupNodeModel.prototype.removeChild = function (id) {\n    this.children.delete(id);\n  };\n\n  GroupNodeModel.prototype.getAddableOutlineStyle = function () {\n    return {\n      stroke: '#FEB663',\n      strokeWidth: 2,\n      strokeDasharray: '4 4',\n      fill: 'transparent'\n    };\n  };\n\n  GroupNodeModel.prototype.getData = function () {\n    var data = _super.prototype.getData.call(this);\n\n    data.children = __spread(this.children);\n    var properties = data.properties;\n    delete properties.groupAddable;\n    delete properties.isFolded;\n    return data;\n  };\n\n  GroupNodeModel.prototype.getHistoryData = function () {\n    var data = _super.prototype.getData.call(this);\n\n    data.children = __spread(this.children);\n    var properties = data.properties;\n    delete properties.groupAddable;\n\n    if (properties.isFolded) {\n      // 如果分组被折叠\n      data.x = data.x + this.unfoldedWidth / 2 - this.foldedWidth / 2;\n      data.y = data.y + this.unfoldedHight / 2 - this.foldedHeight / 2;\n    }\n\n    return data;\n  };\n\n  return GroupNodeModel;\n}(RectResize.model);\n\nvar GroupNode =\n/** @class */\nfunction (_super) {\n  __extends(GroupNode, _super);\n\n  function GroupNode() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  GroupNode.prototype.getControlGroup = function () {\n    var _a = this.props.model,\n        resizable = _a.resizable,\n        properties = _a.properties;\n    return resizable && !properties.isFolded ? _super.prototype.getControlGroup.call(this) : null;\n  };\n\n  GroupNode.prototype.getAddedableShape = function () {\n    var _a = this.props.model,\n        width = _a.width,\n        height = _a.height,\n        x = _a.x,\n        y = _a.y,\n        radius = _a.radius,\n        properties = _a.properties;\n    if (!properties.groupAddable) return null;\n    var strokeWidth = this.props.model.getNodeStyle().strokeWidth;\n    var style = this.props.model.getAddableOutlineStyle();\n    var newWidth = width + strokeWidth + 8;\n    var newHeight = height + strokeWidth + 8;\n    return h('rect', __assign(__assign({}, style), {\n      width: newWidth,\n      height: newHeight,\n      x: x - newWidth / 2,\n      y: y - newHeight / 2,\n      rx: radius,\n      ry: radius\n    }));\n  };\n\n  GroupNode.prototype.getFoldIcon = function () {\n    var model = this.props.model;\n    var foldX = model.x - model.width / 2 + 5;\n    var foldY = model.y - model.height / 2 + 5;\n    if (!model.foldable) return null;\n    var iconIcon = h('path', {\n      fill: 'none',\n      stroke: '#818281',\n      strokeWidth: 2,\n      'pointer-events': 'none',\n      d: model.properties.isFolded ? \"M \" + (foldX + 3) + \",\" + (foldY + 6) + \" \" + (foldX + 11) + \",\" + (foldY + 6) + \" M\" + (foldX + 7) + \",\" + (foldY + 2) + \" \" + (foldX + 7) + \",\" + (foldY + 10) : \"M \" + (foldX + 3) + \",\" + (foldY + 6) + \" \" + (foldX + 11) + \",\" + (foldY + 6) + \" \"\n    });\n    return h('g', {}, [h('rect', {\n      height: 12,\n      width: 14,\n      rx: 2,\n      ry: 2,\n      strokeWidth: 1,\n      fill: '#F4F5F6',\n      stroke: '#CECECE',\n      cursor: 'pointer',\n      x: model.x - model.width / 2 + 5,\n      y: model.y - model.height / 2 + 5,\n      onClick: function onClick() {\n        model.foldGroup(!model.properties.isFolded);\n      }\n    }), iconIcon]);\n  };\n\n  GroupNode.prototype.getResizeShape = function () {\n    return h('g', {}, [this.getAddedableShape(), _super.prototype.getResizeShape.call(this), this.getFoldIcon()]);\n  };\n\n  return GroupNode;\n}(RectResize.view);\n\nexport default {\n  type: 'group',\n  view: GroupNode,\n  model: GroupNodeModel\n};","map":{"version":3,"sources":["F:/Desktop/two_hours_front/node_modules/@logicflow/extension/es/materials/group/GroupNode.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__read","o","m","Symbol","iterator","r","ar","e","next","done","push","value","error","__spread","concat","h","RectResize","defaultWidth","defaultHeight","GroupNodeModel","_super","_this","isGroup","unfoldedWidth","unfoldedHight","initNodeData","data","children","isArray","Set","width","height","foldedWidth","foldedHeight","zIndex","radius","text","editable","draggable","isRestrict","resizable","autoToFront","foldable","properties","isFolded","undefined","setTimeout","foldGroup","getResizeOutlineStyle","style","stroke","setProperty","x","y","allEdges","incoming","edges","outgoing","forEach","elementId","nodeModel","graphModel","getElement","visible","foldEdge","getAnchorStyle","anchorInfo","fill","hover","edgeModel","index","id","sourceNodeId","targetNodeId","startPoint","endPoint","type","virtual","deleteEdgeById","targetNodeIdGroup","group","getNodeGroup","getNodeModelById","sourceNodeIdGroup","has","createVirtualEdge","edgeData","pointsList","model","addEdge","getData","isFoldedEdge","isInRange","_a","x1","y1","x2","y2","isAllowMoveTo","setAllowAppendChild","isAllow","addChild","add","removeChild","delete","getAddableOutlineStyle","strokeWidth","strokeDasharray","groupAddable","getHistoryData","GroupNode","getControlGroup","props","getAddedableShape","getNodeStyle","newWidth","newHeight","rx","ry","getFoldIcon","foldX","foldY","iconIcon","cursor","onClick","getResizeShape","view"],"mappings":"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","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (this && this.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nimport { h } from '@logicflow/core';\nimport { RectResize } from '../../NodeResize';\nvar defaultWidth = 500;\nvar defaultHeight = 300;\nvar GroupNodeModel = /** @class */ (function (_super) {\n    __extends(GroupNodeModel, _super);\n    function GroupNodeModel() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isGroup = true;\n        _this.unfoldedWidth = defaultWidth;\n        _this.unfoldedHight = defaultHeight;\n        return _this;\n    }\n    GroupNodeModel.prototype.initNodeData = function (data) {\n        var _this = this;\n        _super.prototype.initNodeData.call(this, data);\n        var children = [];\n        if (Array.isArray(data.children)) {\n            children = data.children;\n        }\n        // 初始化组的子节点\n        this.children = new Set(children);\n        this.width = defaultWidth;\n        this.height = defaultHeight;\n        this.foldedWidth = 80;\n        this.foldedHeight = 60;\n        // todo: 参考bpmn.js, 分组和未加入分组的节点重合时，未加入分组的节点在分组之下。方便标识。\n        this.zIndex = -1;\n        this.radius = 0;\n        this.text.editable = false;\n        this.text.draggable = false;\n        this.isRestrict = false;\n        this.resizable = false;\n        this.autoToFront = false;\n        this.foldable = false;\n        if (this.properties.isFolded === undefined) {\n            this.properties.isFolded = false;\n        }\n        this.isFolded = this.properties.isFolded;\n        // fixme: 虽然默认保存的分组不会收起，但是如果重写保存数据分组了，\n        // 此处代码会导致多一个history记录\n        setTimeout(function () {\n            _this.isFolded && _this.foldGroup(_this.isFolded);\n        });\n        // this.foldGroup(this.isFolded);\n    };\n    GroupNodeModel.prototype.getResizeOutlineStyle = function () {\n        var style = _super.prototype.getResizeOutlineStyle.call(this);\n        style.stroke = 'none';\n        return style;\n    };\n    /**\n     * 折叠分组\n     * 1. 折叠分组的宽高\n     * 2. 处理分组子节点\n     * 3. 处理连线\n     */\n    GroupNodeModel.prototype.foldGroup = function (isFolded) {\n        var _this = this;\n        this.setProperty('isFolded', isFolded);\n        this.isFolded = isFolded;\n        // step 1\n        if (isFolded) {\n            this.x = this.x - this.width / 2 + this.foldedWidth / 2;\n            this.y = this.y - this.height / 2 + this.foldedHeight / 2;\n            this.unfoldedWidth = this.width;\n            this.unfoldedHight = this.height;\n            this.width = this.foldedWidth;\n            this.height = this.foldedHeight;\n        }\n        else {\n            this.width = this.unfoldedWidth;\n            this.height = this.unfoldedHight;\n            this.x = this.x + this.width / 2 - this.foldedWidth / 2;\n            this.y = this.y + this.height / 2 - this.foldedHeight / 2;\n        }\n        // step 2\n        var allEdges = this.incoming.edges.concat(this.outgoing.edges);\n        this.children.forEach(function (elementId) {\n            var nodeModel = _this.graphModel.getElement(elementId);\n            nodeModel.visible = !isFolded;\n            allEdges = allEdges.concat(nodeModel.incoming.edges.concat(nodeModel.outgoing.edges));\n        });\n        // step 3\n        this.foldEdge(isFolded, allEdges);\n    };\n    GroupNodeModel.prototype.getAnchorStyle = function (anchorInfo) {\n        var style = _super.prototype.getAnchorStyle.call(this, anchorInfo);\n        style.stroke = 'transparent';\n        style.fill = 'transparent';\n        style.hover.fill = 'transparent';\n        style.hover.stroke = 'transparent';\n        return style;\n    };\n    /**\n     * 折叠分组的时候，处理分组自身的连线和分组内部子节点上的连线\n     * 边的分类：\n     *   - 虚拟边：分组被收起时，表示分组本身与外部节点关系的边。\n     *   - 真实边：分组本身或者分组内部节点与外部节点节点（非收起分组）关系的边。\n     * 如果一个分组，本身与外部节点有M条连线，且内部N个子节点与外部节点有连线，那么这个分组收起时会生成M+N条连线。\n     * 折叠分组时：\n     *   - 原有的虚拟边删除；\n     *   - 创建一个虚拟边；\n     *   - 真实边则隐藏；\n     * 展开分组是：\n     *   - 原有的虚拟边删除；\n     *   - 如果目外部点是收起的分组，则创建虚拟边；\n     *   - 如果外部节点是普通节点，则显示真实边；\n     */\n    GroupNodeModel.prototype.foldEdge = function (isFolded, allEdges) {\n        var _this = this;\n        allEdges.forEach(function (edgeModel, index) {\n            var id = edgeModel.id, sourceNodeId = edgeModel.sourceNodeId, targetNodeId = edgeModel.targetNodeId, startPoint = edgeModel.startPoint, endPoint = edgeModel.endPoint, type = edgeModel.type, properties = edgeModel.properties, text = edgeModel.text;\n            var data = {\n                id: id + \"__\" + index,\n                sourceNodeId: sourceNodeId,\n                targetNodeId: targetNodeId,\n                startPoint: startPoint,\n                endPoint: endPoint,\n                type: type,\n                properties: properties,\n                text: text === null || text === void 0 ? void 0 : text.value,\n            };\n            if (edgeModel.virtual) {\n                _this.graphModel.deleteEdgeById(edgeModel.id);\n            }\n            var targetNodeIdGroup = _this.graphModel.group.getNodeGroup(targetNodeId);\n            // 考虑目标节点本来就是分组的情况\n            if (!targetNodeIdGroup) {\n                targetNodeIdGroup = _this.graphModel.getNodeModelById(targetNodeId);\n            }\n            var sourceNodeIdGroup = _this.graphModel.group.getNodeGroup(sourceNodeId);\n            if (!sourceNodeIdGroup) {\n                sourceNodeIdGroup = _this.graphModel.getNodeModelById(sourceNodeId);\n            }\n            // 折叠时，处理未被隐藏的边的逻辑\n            if (isFolded && edgeModel.visible !== false) {\n                // 需要确认此分组节点是新连线的起点还是终点\n                // 创建一个虚拟边，虚拟边相对真实边，起点或者终点从一起分组内部的节点成为了分组，\n                // 如果需要被隐藏的边的起点在需要折叠的分组中，那么设置虚拟边的开始节点为此分组\n                if (_this.children.has(sourceNodeId) || _this.id === sourceNodeId) {\n                    data.startPoint = undefined;\n                    data.sourceNodeId = _this.id;\n                }\n                else {\n                    data.endPoint = undefined;\n                    data.targetNodeId = _this.id;\n                }\n                // 如果边的起点和终点都在分组内部，则不创建新的虚拟边\n                if (targetNodeIdGroup.id !== _this.id || sourceNodeIdGroup.id !== _this.id) {\n                    _this.createVirtualEdge(data);\n                }\n                edgeModel.visible = false;\n            }\n            // 展开时，处理被隐藏的边的逻辑\n            if (!isFolded && edgeModel.visible === false) {\n                // 展开分组时：判断真实边的起点和终点是否有任一节点在已折叠分组中，如果不是，则显示真实边。如果是，这修改这个边的对应目标节点id来创建虚拟边。\n                if (targetNodeIdGroup && targetNodeIdGroup.isGroup && targetNodeIdGroup.isFolded) {\n                    data.targetNodeId = targetNodeIdGroup.id;\n                    data.endPoint = undefined;\n                    _this.createVirtualEdge(data);\n                }\n                else if (sourceNodeIdGroup && sourceNodeIdGroup.isGroup && sourceNodeIdGroup.isFolded) {\n                    data.sourceNodeId = sourceNodeIdGroup.id;\n                    data.startPoint = undefined;\n                    _this.createVirtualEdge(data);\n                }\n                else {\n                    edgeModel.visible = true;\n                }\n            }\n        });\n    };\n    GroupNodeModel.prototype.createVirtualEdge = function (edgeData) {\n        edgeData.pointsList = undefined;\n        var model = this.graphModel.addEdge(edgeData);\n        model.virtual = true;\n        // 强制不保存group连线数据\n        model.getData = function () { return null; };\n        model.text.editable = false;\n        model.isFoldedEdge = true;\n    };\n    GroupNodeModel.prototype.isInRange = function (_a) {\n        var x1 = _a.x1, y1 = _a.y1, x2 = _a.x2, y2 = _a.y2;\n        return x1 >= (this.x - this.width / 2)\n            && x2 <= (this.x + this.width / 2)\n            && y1 >= (this.y - this.height / 2)\n            && y2 <= (this.y + this.height / 2);\n    };\n    GroupNodeModel.prototype.isAllowMoveTo = function (_a) {\n        var x1 = _a.x1, y1 = _a.y1, x2 = _a.x2, y2 = _a.y2;\n        return {\n            x: x1 >= (this.x - this.width / 2) && x2 <= (this.x + this.width / 2),\n            y: y1 >= (this.y - this.height / 2) && y2 <= (this.y + this.height / 2),\n        };\n    };\n    GroupNodeModel.prototype.setAllowAppendChild = function (isAllow) {\n        this.setProperty('groupAddable', isAllow);\n    };\n    /**\n     * 添加分组子节点\n     * @param id 节点id\n     */\n    GroupNodeModel.prototype.addChild = function (id) {\n        this.children.add(id);\n    };\n    /**\n     * 删除分组子节点\n     * @param id 节点id\n     */\n    GroupNodeModel.prototype.removeChild = function (id) {\n        this.children.delete(id);\n    };\n    GroupNodeModel.prototype.getAddableOutlineStyle = function () {\n        return {\n            stroke: '#FEB663',\n            strokeWidth: 2,\n            strokeDasharray: '4 4',\n            fill: 'transparent',\n        };\n    };\n    GroupNodeModel.prototype.getData = function () {\n        var data = _super.prototype.getData.call(this);\n        data.children = __spread(this.children);\n        var properties = data.properties;\n        delete properties.groupAddable;\n        delete properties.isFolded;\n        return data;\n    };\n    GroupNodeModel.prototype.getHistoryData = function () {\n        var data = _super.prototype.getData.call(this);\n        data.children = __spread(this.children);\n        var properties = data.properties;\n        delete properties.groupAddable;\n        if (properties.isFolded) { // 如果分组被折叠\n            data.x = data.x + this.unfoldedWidth / 2 - this.foldedWidth / 2;\n            data.y = data.y + this.unfoldedHight / 2 - this.foldedHeight / 2;\n        }\n        return data;\n    };\n    return GroupNodeModel;\n}(RectResize.model));\nvar GroupNode = /** @class */ (function (_super) {\n    __extends(GroupNode, _super);\n    function GroupNode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    GroupNode.prototype.getControlGroup = function () {\n        var _a = this.props.model, resizable = _a.resizable, properties = _a.properties;\n        return resizable && !properties.isFolded ? _super.prototype.getControlGroup.call(this) : null;\n    };\n    GroupNode.prototype.getAddedableShape = function () {\n        var _a = this.props.model, width = _a.width, height = _a.height, x = _a.x, y = _a.y, radius = _a.radius, properties = _a.properties;\n        if (!properties.groupAddable)\n            return null;\n        var strokeWidth = this.props.model.getNodeStyle().strokeWidth;\n        var style = this.props.model.getAddableOutlineStyle();\n        var newWidth = width + strokeWidth + 8;\n        var newHeight = height + strokeWidth + 8;\n        return h('rect', __assign(__assign({}, style), { width: newWidth, height: newHeight, x: x - newWidth / 2, y: y - newHeight / 2, rx: radius, ry: radius }));\n    };\n    GroupNode.prototype.getFoldIcon = function () {\n        var model = this.props.model;\n        var foldX = model.x - model.width / 2 + 5;\n        var foldY = model.y - model.height / 2 + 5;\n        if (!model.foldable)\n            return null;\n        var iconIcon = h('path', {\n            fill: 'none',\n            stroke: '#818281',\n            strokeWidth: 2,\n            'pointer-events': 'none',\n            d: model.properties.isFolded\n                ? \"M \" + (foldX + 3) + \",\" + (foldY + 6) + \" \" + (foldX + 11) + \",\" + (foldY + 6) + \" M\" + (foldX + 7) + \",\" + (foldY + 2) + \" \" + (foldX + 7) + \",\" + (foldY + 10)\n                : \"M \" + (foldX + 3) + \",\" + (foldY + 6) + \" \" + (foldX + 11) + \",\" + (foldY + 6) + \" \",\n        });\n        return h('g', {}, [\n            h('rect', {\n                height: 12,\n                width: 14,\n                rx: 2,\n                ry: 2,\n                strokeWidth: 1,\n                fill: '#F4F5F6',\n                stroke: '#CECECE',\n                cursor: 'pointer',\n                x: model.x - model.width / 2 + 5,\n                y: model.y - model.height / 2 + 5,\n                onClick: function () {\n                    model.foldGroup(!model.properties.isFolded);\n                },\n            }),\n            iconIcon,\n        ]);\n    };\n    GroupNode.prototype.getResizeShape = function () {\n        return h('g', {}, [\n            this.getAddedableShape(),\n            _super.prototype.getResizeShape.call(this),\n            this.getFoldIcon(),\n        ]);\n    };\n    return GroupNode;\n}(RectResize.view));\nexport default {\n    type: 'group',\n    view: GroupNode,\n    model: GroupNodeModel,\n};\n"]},"metadata":{},"sourceType":"module"}