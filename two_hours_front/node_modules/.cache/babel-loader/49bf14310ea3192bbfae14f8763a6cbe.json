{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url.js\";\nimport \"core-js/modules/web.url-search-params.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport UserAvatar from \"@/components/UserAvatar\";\nimport WhiteLogo from \"@/components/WhiteLogo\";\nimport NoticeDrawer from \"@/components/NoticeDrawer\";\nimport PageFooter from \"@/components/PageFooter\";\nimport SHAEncrypt from \"@/components/SHAEncrypt\";\nexport default {\n  name: \"UserMainPage\",\n  components: {\n    UserAvatar: UserAvatar,\n    WhiteLogo: WhiteLogo,\n    PageFooter: PageFooter,\n    NoticeDrawer: NoticeDrawer\n  },\n  // 数据模型\n  data: function data() {\n    return {\n      // 导航栏激活索引\n      activeIndex: '',\n      // 头像大小\n      size: 'large',\n      // 用户信息\n      user: '',\n      // 用户头像展示\n      userAvatarUrl: '',\n      // 用户名\n      username: '',\n      // 课程公告\n      courseNotice: '',\n      // 公告抽屉\n      noticeDrawer: false,\n      noticeDrawerContent: '',\n      // 内容\n      // 加入课程的信息\n      studyCourse: [],\n      // 教授课程的信息\n      teachCourse: [],\n      // 查找到的课程\n      findCourses: [],\n      findCoursesUserName: [],\n      showPrivate: true,\n      // 展示私有课程\n      showClose: true,\n      // 展示关闭课程\n      yesOrNo: [{\n        value: true,\n        label: '显示'\n      }, {\n        value: false,\n        label: '隐藏'\n      }],\n      // 课程查找条件-课程名称\n      findCondition: {\n        courseName: ''\n      },\n      // 创建课程的信息\n      createCourseInfo: {\n        courseName: '',\n        isPublic: 1,\n        coverImg: '',\n        describes: ''\n      },\n      // 头像路径-默认为封面1\n      CoverImageUrl: '',\n      // 修改个人信息对话框可见\n      updateUserInfoDialogVisible: false,\n      // 查找课程对话框可见\n      findCourseDialogVisible: false,\n      // 创建课程对话框可见\n      createCourseInfoDialogVisible: false,\n      // 课程封面格式\n      coverImgFit: 'cover',\n      // 表单校验规则\n      rules: {\n        courseName: {\n          required: true,\n          message: '请输入课程名称',\n          trigger: 'blur'\n        }\n      }\n    };\n  },\n  created: function created() {\n    this.openLoading(); // 获取用户数据\n\n    this.getUser(); // 获取公告数据\n\n    this.getNotice(); // 获取我学的课信息\n\n    this.getMyJoinCourse(); // 获取我教的课信息\n\n    this.getMyTeachCourse(); // 缓存课程信息\n\n    this.selectCourseInfo();\n  },\n  // 方法模型\n  methods: {\n    /* 加载动画 */\n    openLoading: function openLoading() {\n      var loading = this.$loading({\n        lock: true,\n        text: 'Loading',\n        spinner: 'el-icon-loading',\n        background: 'rgba(255,255,255,0.8)'\n      });\n      setTimeout(function () {\n        loading.close();\n      }, 400);\n    },\n    // 获取用户数据\n    getUser: function getUser() {\n      var _this = this;\n\n      this.$axios.get(\"/Users/isUserLogin\").then(function (res) {\n        if (res.data.flag) {\n          // 保存用户数据\n          _this.user = res.data.data;\n          _this.username = _this.user.username;\n        } else {\n          // 服务故障-跳转登陆界面\n          _this.$router.push({\n            name: 'Login'\n          });\n        }\n      });\n    },\n    // 获取我学的课信息\n    getMyJoinCourse: function getMyJoinCourse() {\n      var _this2 = this;\n\n      // 获取我学的课\n      this.$axios.get(\"/CourseView/getMyJoinCourse\").then(function (res) {\n        if (res.data.flag) {\n          // 保存用户数据\n          _this2.studyCourse = res.data.data; // 防止空指针异常\n\n          if (_this2.studyCourse === null) _this2.studyCourse = [];\n        } else {\n          // 服务故障\n          _this2.$message.error(\"课程信息获取失败，请稍后重试！\");\n        }\n      });\n    },\n    // 获取我教的课信息\n    getMyTeachCourse: function getMyTeachCourse() {\n      var _this3 = this;\n\n      // 获取我教的课\n      this.$axios.get(\"/CourseView/getMyTeachCourse\").then(function (res) {\n        if (res.data.flag) {\n          // 保存用户数据\n          _this3.teachCourse = res.data.data; // 防止空指针异常\n\n          if (_this3.teachCourse === null) _this3.teachCourse = [];\n        } else {\n          // 服务故障\n          _this3.$message.error(\"课程信息获取失败，请稍后重试！\");\n        }\n      });\n    },\n    // 获取课程相关公告\n    getNotice: function getNotice() {\n      var _this4 = this;\n\n      this.$axios.get(\"/Notice/getAll\").then(function (res) {\n        if (res.data.flag) {\n          // 保存公告数据\n          _this4.courseNotice = res.data.data; // 防止空指针异常\n\n          if (_this4.courseNotice === null) _this4.courseNotice = [];\n        } else {\n          // 服务故障\n          _this4.$message.error(\"公告信息获取失败！\");\n        }\n      });\n    },\n    // 导航栏事件\n    handleSelect: function handleSelect(key) {\n      var _this5 = this;\n\n      this.activeIndex = key;\n\n      switch (key) {\n        case '0':\n          // logo\n          this.$router.push({\n            name: 'MainPage'\n          });\n          return;\n\n        case '1':\n          // 消息中心\n          this.$router.push({\n            name: 'NoticePage'\n          });\n          return;\n\n        case '3':\n          // 修改信息\n          this.userAvatarUrl = this.user.userAvatar;\n          this.updateUserInfoDialogVisible = true;\n          return;\n\n        case '4':\n          // 退出登陆\n          this.$axios.get(\"/LoginCon/loginOut\").then(function (res) {\n            if (res.data.flag) {\n              _this5.$router.push({\n                name: 'Login'\n              });\n            } else {\n              // 服务故障\n              _this5.$message.error(\"操作失败！\");\n            }\n          });\n          return;\n      }\n    },\n    // 头像上传成功的钩子-回显到界面\n    handleUserAvatarSuccess: function handleUserAvatarSuccess(res, file) {\n      this.userAvatarUrl = URL.createObjectURL(file.raw); // 删除旧图 todo :由于异步导致的无法及时判断数据库写入状态，故默认成功，但不排除可能失败\n\n      this.$axios.post(\"/Files/deleteUserAvatar\", this.user); // 写入图片路径\n\n      this.user.userAvatar = res;\n    },\n    // 更新用户信息\n    updateUserInfo: function updateUserInfo() {\n      var _this6 = this;\n\n      this.$axios.post(\"/Users/updateInfo\", this.user).then(function (res) {\n        if (res.data.flag) {\n          // 修改成功\n          _this6.$message.success(res.data.msg);\n\n          _this6.updateUserInfoDialogVisible = false;\n\n          _this6.getUser(); // 更新用户数据\n\n        } else {\n          // 服务故障\n          _this6.$message.error(res.data.msg);\n        }\n      });\n    },\n    // 展示公告\n    showNotice: function showNotice(notice) {\n      var _this7 = this;\n\n      this.noticeDrawer = true;\n      this.noticeDrawerContent = notice; // 发送一次请求\n\n      setTimeout(function () {\n        _this7.noticeDrawer = false;\n      }, 500);\n    },\n    // 跳转到课程界面\n    toUserCourse: function toUserCourse(courseId) {\n      var _this8 = this;\n\n      var course = {\n        courseId: courseId\n      }; // 添加课程id到session\n\n      this.$axios.post(\"/CourseView/addCourseIdToSession\", course).then(function (res) {\n        if (res.data.flag) {\n          /* // 修改成功\n           this.$message.success(\"即将为您跳转n_n\");*/\n          // 跳转到课程界面\n          _this8.$router.push({\n            name: 'LearningPage'\n          });\n        } else {\n          // 服务故障\n          _this8.$message.error(\"服务处理失败，请重新尝试T_T\");\n        }\n      });\n    },\n    // 跳转到课程管理界面\n    toCourseManager: function toCourseManager(courseId) {\n      var _this9 = this;\n\n      var course = {\n        courseId: courseId\n      };\n      this.$axios.post(\"/CourseView/addCourseIdToSession\", course).then(function (res) {\n        if (res.data.flag) {\n          // 修改成功\n\n          /* this.$message.success(\"即将为您跳转n_n\");*/\n          _this9.$router.push({\n            name: 'Management'\n          });\n        } else {\n          // 服务故障\n          _this9.$message.error(\"服务处理失败，请重新尝试T_T\");\n        }\n      });\n    },\n    // 标签控制器\n    tabController: function tabController(tab) {\n      switch (tab.index) {\n        case '0':\n          this.getMyJoinCourse();\n          break;\n\n        case '1':\n          this.getMyTeachCourse();\n          break;\n      }\n    },\n    // 添加课程-打开课程查找列表\n    addCourse: function addCourse() {\n      this.selectCourseInfo();\n      this.findCondition.courseName = '';\n      this.findCourseDialogVisible = true;\n      this.showPrivate = true;\n      this.showClose = true;\n    },\n    // 根据条件查找相关课程\n    selectCourseInfo: function selectCourseInfo() {\n      var _this10 = this;\n\n      this.$axios.post(\"/CourseView/selectCourseInfo\", this.findCondition).then(function (res) {\n        if (res.data.flag) {\n          // 保存用户数据\n          _this10.findCourses = res.data.data;\n\n          if (_this10.findCourses.length === 0) {\n            _this10.$message.warning(\"未找到相关课程\");\n          }\n        } else {\n          // 服务故障\n          _this10.$message.warning(\"未找到相关课程\");\n        }\n      });\n    },\n    // 判断用户是否已加入该课程\n    isJoinThisCourse: function isJoinThisCourse(courseId) {\n      var i = 0;\n\n      for (i = 0; i < this.studyCourse.length; i++) {\n        if (courseId === this.studyCourse[i].courseId) return true;\n      }\n\n      for (i = 0; i < this.teachCourse.length; i++) {\n        if (courseId === this.teachCourse[i].courseId) return true;\n      }\n\n      return false;\n    },\n    // 加入课程\n    addCourseToDB: function addCourseToDB(course) {\n      var _this11 = this;\n\n      // 弹出确认加入选择框\n      this.$confirm('加入该课程?', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'info'\n      }).then(function () {\n        // 确认加入\n        if (!course.isPublic) {\n          // 是否公开\n          _this11.$message.error(\"课程未公开！\");\n\n          return false;\n        } else if (!course.isStart) {\n          // 是否开启\n          _this11.$message.error(\"课程已关闭！\");\n\n          return false;\n        } else {\n          // 加入课程\n          var courseUser = {\n            courseId: course.courseId\n          };\n\n          _this11.$axios.post(\"/CourseUser/save\", courseUser).then(function (res) {\n            if (res.data.flag) {\n              // 修改成功\n              _this11.$message.success(res.data.msg); // 关闭\n\n\n              _this11.findCourseDialogVisible = false; // 刷新数据\n\n              _this11.getMyJoinCourse(); // 刷新公告\n\n\n              _this11.getNotice();\n            } else {\n              // 服务故障\n              _this11.$message.error(res.data.msg);\n            }\n          });\n        }\n      });\n    },\n    // 创建课程\n    createCourse: function createCourse() {\n      // 重置数据和默认封面\n      this.CoverImageUrl = '/imgs/course/default.jpg';\n      this.createCourseInfo.courseName = '';\n      this.createCourseInfo.isPublic = true;\n      this.createCourseInfo.coverImg = '';\n      this.createCourseInfo.describes = '';\n      this.createCourseInfo.createTime = ''; // 打开对话框\n\n      this.createCourseInfoDialogVisible = true;\n    },\n    // 封面上传成功的钩子-回显到界面\n    handleCourseCoverSuccess: function handleCourseCoverSuccess(res, file) {\n      this.CoverImageUrl = URL.createObjectURL(file.raw); // 写入图片路径\n\n      this.createCourseInfo.coverImg = res;\n    },\n    // 上传文件之前的钩子，参数为上传的文件，若返回 false 或者返回 Promise 且被 reject，则停止上传。\n    beforeAvatarUpload: function beforeAvatarUpload(file) {\n      var isJPG = file.type === 'image/jpeg';\n      var isPNG = file.type === 'image/png';\n      var isLt2M = file.size / 1024 / 1024 < 40;\n\n      if (!isJPG && !isPNG) {\n        this.$message.error('上传头像图片只能是 JPG/PNG 格式!');\n      }\n\n      if (!isLt2M) {\n        this.$message.error('上传头像图片大小不能超过 40MB!');\n      }\n\n      return isJPG || isPNG && isLt2M;\n    },\n    // 创建课程-整理提交数据\n    createCourseMethod: function createCourseMethod(course) {\n      var _this12 = this;\n\n      // 整理数据\n      if (course.courseName === '') {\n        this.$message.error(\"课程名不能为空！\");\n        return 0;\n      } // 布尔值转int\n\n\n      if (course.isPublic === true) {\n        course.isPublic = 1;\n      } else {\n        course.isPublic = 0;\n      } // 发送请求\n\n\n      this.$axios.post(\"/Course/save\", course).then(function (res) {\n        if (res.data.flag) {\n          // 修改成功\n          _this12.$message.success(res.data.msg); // 关闭\n\n\n          _this12.createCourseInfoDialogVisible = false; // 刷新数据\n\n          _this12.getMyTeachCourse();\n        } else {\n          // 服务故障\n          _this12.$message.error(res.data.msg);\n        }\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkUA;AACA;AACA;AACA;AACA;AACA;AACAA,sBADA;AAEAC;AACAC,0BADA;AAEAC,wBAFA;AAGAC,0BAHA;AAIAC;AAJA,GAFA;AAQA;AACAC,MATA,kBASA;AACA;AACA;AACAC,qBAFA;AAGA;AACAC,mBAJA;AAKA;AACAC,cANA;AAOA;AACAC,uBARA;AASA;AACAC,kBAVA;AAWA;AACAC,sBAZA;AAaA;AACAC,yBAdA;AAeAC,6BAfA;AAeA;AACA;AACAC,qBAjBA;AAkBA;AACAC,qBAnBA;AAoBA;AACAC,qBArBA;AAsBAC,6BAtBA;AAuBAC,uBAvBA;AAuBA;AACAC,qBAxBA;AAwBA;AACAC;AACAC,mBADA;AAEAC;AAFA,SAGA;AACAD,oBADA;AAEAC;AAFA,OAHA,CAzBA;AAgCA;AACAC;AACAC;AADA,OAjCA;AAoCA;AACAC;AACAD,sBADA;AAEAE,mBAFA;AAGAC,oBAHA;AAIAC;AAJA,OArCA;AA2CA;AACAC,uBA5CA;AA6CA;AACAC,wCA9CA;AA+CA;AACAC,oCAhDA;AAiDA;AACAC,0CAlDA;AAmDA;AACAC,0BApDA;AAqDA;AACAC;AACAV;AAAAW;AAAAC;AAAAC;AAAA;AADA;AAtDA;AA0DA,GApEA;AAqEAC,SArEA,qBAqEA;AACA,uBADA,CAEA;;AACA,mBAHA,CAIA;;AACA,qBALA,CAMA;;AACA,2BAPA,CAQA;;AACA,4BATA,CAUA;;AACA;AACA,GAjFA;AAkFA;AACAC;AACA;AACAC,eAFA,yBAEA;AACA;AACAC,kBADA;AAEAC,uBAFA;AAGAC,kCAHA;AAIAC;AAJA;AAMAC;AAAAC;AAAA;AACA,KAVA;AAWA;AACAC,WAZA,qBAYA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA,SAJA,MAIA;AACA;AACA;AAAAhD;AAAA;AACA;AACA,OATA;AAUA,KAvBA;AAwBA;AACAiD,mBAzBA,6BAyBA;AAAA;;AACA;AACA;AACA;AAAA;AACA,6CADA,CAEA;;AACA;AACA,SAJA,MAIA;AAAA;AACA;AACA;AACA,OARA;AASA,KApCA;AAqCA;AACAC,oBAtCA,8BAsCA;AAAA;;AACA;AACA;AACA;AAAA;AACA,6CADA,CAEA;;AACA;AACA,SAJA,MAIA;AAAA;AACA;AACA;AACA,OARA;AASA,KAjDA;AAkDA;AACAC,aAnDA,uBAmDA;AAAA;;AACA;AACA;AACA;AACA,8CAFA,CAGA;;AACA;AACA,SALA,MAKA;AACA;AACA;AACA;AACA,OAVA;AAWA,KA/DA;AAgEA;AACAC,gBAjEA,wBAiEAC,GAjEA,EAiEA;AAAA;;AACA;;AACA;AACA;AAAA;AACA;AACArD;AADA;AAGA;;AACA;AAAA;AACA;AACAA;AADA;AAGA;;AACA;AAAA;AACA;AACA;AACA;;AACA;AAAA;AACA;AACA;AACA;AACAA;AADA;AAGA,aAJA,MAIA;AACA;AACA;AACA;AACA,WATA;AAUA;AA1BA;AA4BA,KA/FA;AAgGA;AACAsD,2BAjGA,mCAiGAC,GAjGA,EAiGAC,IAjGA,EAiGA;AACA,yDADA,CAEA;;AACA,6DAHA,CAIA;;AACA;AACA,KAvGA;AAwGA;AACAC,kBAzGA,4BAyGA;AAAA;;AACA;AACA;AACA;AACA;;AACA;;AACA,2BAJA,CAIA;;AACA,SALA,MAKA;AACA;AACA;AACA;AACA,OAVA;AAWA,KArHA;AAsHA;AACAC,cAvHA,sBAuHAC,MAvHA,EAuHA;AAAA;;AACA;AACA,wCAFA,CAGA;;AACAb;AAAA;AAAA;AACA,KA5HA;AA6HA;AACAc,gBA9HA,wBA8HAC,QA9HA,EA8HA;AAAA;;AACA;AACAA;AADA,QADA,CAIA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA7D;AADA;AAGA,SAPA,MAOA;AACA;AACA;AACA;AACA,OAZA;AAaA,KAhJA;AAiJA;AACA8D,mBAlJA,2BAkJAD,QAlJA,EAkJA;AAAA;;AACA;AACAA;AADA;AAGA;AACA;AACA;;AACA;AACA;AACA7D;AADA;AAGA,SANA,MAMA;AACA;AACA;AACA;AACA,OAXA;AAYA,KAlKA;AAmKA;AACA+D,iBApKA,yBAoKAC,GApKA,EAoKA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AANA;AAQA,KA7KA;AA8KA;AACAC,aA/KA,uBA+KA;AACA;AACA;AACA;AACA;AACA;AACA,KArLA;AAsLA;AACAC,oBAvLA,8BAuLA;AAAA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA,SANA,MAMA;AACA;AACA;AACA;AACA,OAXA;AAYA,KApMA;AAqMA;AACAC,oBAtMA,4BAsMAN,QAtMA,EAsMA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA,KA/MA;AAgNA;AACAO,iBAjNA,yBAiNAC,MAjNA,EAiNA;AAAA;;AACA;AACA;AACAC,+BADA;AAEAC,8BAFA;AAGAC;AAHA,SAIAC,IAJA,CAIA;AAAA;AACA;AAAA;AACA;;AACA;AACA,SAHA,MAIA;AAAA;AACA;;AACA;AACA,SAHA,MAIA;AAAA;AACA;AACAZ;AADA;;AAGA;AACA;AACA;AACA,qDAFA,CAGA;;;AACA,sDAJA,CAKA;;AACA,wCANA,CAOA;;;AACA;AACA,aATA,MASA;AACA;AACA;AACA;AACA,WAdA;AAeA;AACA,OAjCA;AAkCA,KArPA;AAsPA;AACAa,gBAvPA,0BAuPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAPA,CAQA;;AACA;AACA,KAjQA;AAkQA;AACAC,4BAnQA,oCAmQApB,GAnQA,EAmQAC,IAnQA,EAmQA;AACA,yDADA,CAEA;;AACA;AACA,KAvQA;AAwQA;AACAoB,sBAzQA,8BAyQApB,IAzQA,EAyQA;AACA;AACA;AAEA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA,KArRA;AAsRA;AACAqB,sBAvRA,8BAuRAR,MAvRA,EAuRA;AAAA;;AACA;AACA;AACA;AACA;AACA,OALA,CAMA;;;AACA;AACAA;AACA,OAFA,MAEA;AACAA;AACA,OAXA,CAYA;;;AACA;AACA;AACA;AACA,iDAFA,CAGA;;;AACA,wDAJA,CAKA;;AACA;AACA,SAPA,MAOA;AACA;AACA;AACA;AACA,OAZA;AAaA;AAjTA;AAnFA","names":["name","components","UserAvatar","WhiteLogo","PageFooter","NoticeDrawer","data","activeIndex","size","user","userAvatarUrl","username","courseNotice","noticeDrawer","noticeDrawerContent","studyCourse","teachCourse","findCourses","findCoursesUserName","showPrivate","showClose","yesOrNo","value","label","findCondition","courseName","createCourseInfo","isPublic","coverImg","describes","CoverImageUrl","updateUserInfoDialogVisible","findCourseDialogVisible","createCourseInfoDialogVisible","coverImgFit","rules","required","message","trigger","created","methods","openLoading","lock","text","spinner","background","setTimeout","loading","getUser","getMyJoinCourse","getMyTeachCourse","getNotice","handleSelect","key","handleUserAvatarSuccess","res","file","updateUserInfo","showNotice","notice","toUserCourse","courseId","toCourseManager","tabController","tab","addCourse","selectCourseInfo","isJoinThisCourse","addCourseToDB","course","confirmButtonText","cancelButtonText","type","then","createCourse","handleCourseCoverSuccess","beforeAvatarUpload","createCourseMethod"],"sourceRoot":"src/pages/user","sources":["UserMainPage.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <el-container>\r\n            <!-- 顶栏容器 -->\r\n            <el-header id=\"elDaoHang\">\r\n                <!--导航栏-->\r\n                <el-menu\r\n                        id=\"dhBar\"\r\n                        :default-active=\"activeIndex\"\r\n                        mode=\"horizontal\"\r\n                        @select=\"handleSelect\"\r\n                        background-color=\"#4858c9\"\r\n                        text-color=\"#ffffff\">\r\n                    <!--引导列/品牌名-->\r\n                    <el-menu-item index=\"0\">\r\n                        <span class=\"dhClaText\"><white-logo></white-logo></span>\r\n                    </el-menu-item>\r\n                    <!--列一/消息中心-->\r\n                    <el-menu-item index=\"1\" class=\"items\"><span id=\"dhText3\" class=\"dhClaText\">消息中心</span></el-menu-item>\r\n                    <!--列二/用户-->\r\n                    <el-submenu index=\"2\" class=\"items\">\r\n                        <template slot=\"title\">\r\n                                <span id=\"dhText4\" class=\"dhClaText\">\r\n                                    <user-avatar :src=\"user.userAvatar\"/> <!-- 用户头像 -->\r\n                                    {{username}}\r\n                                </span>\r\n                        </template>\r\n                        <el-menu-item index=\"3\"><span id=\"dhTextA\" class=\"dhClaText subText\">修改信息</span></el-menu-item>\r\n                        <el-menu-item index=\"4\"><span id=\"dhTextB\" class=\"dhClaText subText\">退出登录</span></el-menu-item>\r\n                    </el-submenu>\r\n                </el-menu>\r\n            </el-header>\r\n\r\n            <!-- 修改个人信息对话框 -->\r\n            <el-dialog\r\n                    title=\"修改数据\"\r\n                    :visible.sync=\"updateUserInfoDialogVisible\"\r\n                    width=\"30%\">\r\n                <el-form ref=\"form\" :model=\"user\" label-width=\"80px\">\r\n                    <el-form-item label=\"用户名\">\r\n                        <el-input v-model=\"user.username\"></el-input>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"联系方式\">\r\n                        <el-input v-model=\"user.telephone\"></el-input>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"邮箱\">\r\n                        <el-input v-model=\"user.email\"></el-input>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"密保问题1\">\r\n                        <el-input type=\"textarea\" v-model=\"user.question1\"></el-input>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"答案1\">\r\n                        <el-input type=\"textarea\" v-model=\"user.answer1\"></el-input>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"密保问题2\">\r\n                        <el-input type=\"textarea\" v-model=\"user.question2\"></el-input>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item label=\"答案2\">\r\n                        <el-input type=\"textarea\" v-model=\"user.answer2\"></el-input>\r\n                    </el-form-item>\r\n                    <!-- 头像上传 -->\r\n                    <el-form-item>\r\n                        <el-upload\r\n                                id=\"userAvatarUploader\"\r\n                                action=\"/Files/userAvatarUpload\"\r\n                                :show-file-list=\"false\"\r\n                                :on-success=\"handleUserAvatarSuccess\"\r\n                                :before-upload=\"beforeAvatarUpload\">\r\n                            <!-- 此处设置有默认封面 -->\r\n                            <el-image id=\"userAvatar\" v-if=\"userAvatarUrl\" :src=\"userAvatarUrl\" :fit=\"coverImgFit\"></el-image>\r\n                            <i class=\"el-icon-plus\" id=\"userAvatarUploader-icons\">上传头像</i>\r\n                        </el-upload>\r\n                    </el-form-item>\r\n\r\n                    <el-form-item>\r\n                        <el-button type=\"primary\" @click=\"updateUserInfo\">提交</el-button>\r\n                        <el-button @click=\"updateUserInfoDialogVisible = false\">取消</el-button>\r\n                    </el-form-item>\r\n                </el-form>\r\n            </el-dialog>\r\n\r\n            <!-- 加入课程对话框 -->\r\n            <el-dialog\r\n                    title=\"查找课程\"\r\n                    :visible.sync=\"findCourseDialogVisible\"\r\n                    style=\"z-index: 5\"\r\n                    width=\"80%\">\r\n                <!-- 课程查找条件 -->\r\n                <el-form ref=\"form\" :inline=\"true\" :model=\"findCondition\" label-width=\"80px\">\r\n                    <!-- 课程名称输入框 -->\r\n                    <el-form-item label=\"课程名称\">\r\n                        <el-input v-model=\"findCondition.courseName\" clearable></el-input>\r\n                    </el-form-item>\r\n                    <!-- 显示私有选择框 -->\r\n                    <el-form-item label=\"私有课程\">\r\n                        <template>\r\n                            <el-select v-model=\"showPrivate\">\r\n                                <el-option\r\n                                        v-for=\"item in yesOrNo\"\r\n                                        :key=\"item.value\"\r\n                                        :label=\"item.label\"\r\n                                        :value=\"item.value\">\r\n                                </el-option>\r\n                            </el-select>\r\n                        </template>\r\n                    </el-form-item>\r\n                    <!-- 显示关闭选择框 -->\r\n                    <el-form-item label=\"关闭课程\">\r\n                        <template>\r\n                            <el-select v-model=\"showClose\">\r\n                                <el-option\r\n                                        v-for=\"item in yesOrNo\"\r\n                                        :key=\"item.value\"\r\n                                        :label=\"item.label\"\r\n                                        :value=\"item.value\">\r\n                                </el-option>\r\n                            </el-select>\r\n                        </template>\r\n                    </el-form-item>\r\n                    <!-- 提交按钮 -->\r\n                    <el-form-item>\r\n                        <el-button type=\"primary\" @click=\"selectCourseInfo\">提交</el-button>\r\n                        <el-button @click=\"findCourseDialogVisible = false\">取消</el-button>\r\n                    </el-form-item>\r\n                </el-form>\r\n                <!-- 可加入课程 -->\r\n                <el-row>\r\n                    <el-col :span=\"5\"\r\n                            v-for=\"(item,index) in findCourses\"\r\n                            :key=\"index\"\r\n                            class=\"CourseCard\"\r\n                            style=\"margin: 2%\"\r\n                            v-show=\"!isJoinThisCourse(item.courseId)\r\n                                && (item.isPublic || showPrivate)\r\n                                && (item.isStart || showClose)\">  <!-- 隐藏已加入课程 -->\r\n                        <el-card :body-style=\"{ padding: '0px' }\" class=\"courseCards\">\r\n                            <div @click=\"addCourseToDB(item)\">\r\n                                <!-- 封面 -->\r\n                                <el-image\r\n                                        class=\"courseCoverImg\"\r\n                                        :src=\"item.coverImg\"\r\n                                        :fit=\"coverImgFit\">\r\n                                    <div slot=\"error\" class=\"image-slot\">\r\n                                        <i class=\"el-icon-picture-outline courseCoverImgAlt\"></i>\r\n                                    </div>\r\n                                </el-image>\r\n                                <!-- 标题 -->\r\n                                <div class=\"courseName\">{{item.courseName}}</div>\r\n                                <!-- 创建者和创建时间 -->\r\n                                <div class=\"courseCreatorAndCreateTime\">\r\n                                    <span class=\"courseCreator\"> {{ item.username }} </span>\r\n                                    <span class=\"TimeAndTags\">\r\n                                        <span>{{ item.formatDateShort }}</span>\r\n                                        <el-tag class=\"courseTag\" type=\"success\" v-show=\"item.isPublic==1\">公开</el-tag>\r\n                                        <el-tag class=\"courseTag\" type=\"info\" v-show=\"item.isPublic==0 \">私有</el-tag>\r\n                                        <el-tag class=\"courseTag\" type=\"success\" v-show=\"item.isStart==1\">开启</el-tag>\r\n                                        <el-tag class=\"courseTag\" type=\"warning\" v-show=\"item.isStart==0 \">关闭</el-tag>\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </el-card>\r\n                    </el-col>\r\n                </el-row>\r\n            </el-dialog>\r\n\r\n            <!-- 创建课程 -->\r\n            <el-dialog\r\n                    title=\"创建课程\"\r\n                    :visible.sync=\"createCourseInfoDialogVisible\"\r\n                    width=\"36%\">\r\n                <el-form :model=\"createCourseInfo\" style=\"position: relative\" :rules=\"rules\" ref=\"createCourseInfo\">\r\n                    <el-form-item label=\"课程名称\" style=\"width: 50%\" prop=\"courseName\">\r\n                        <el-input v-model=\"createCourseInfo.courseName\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item label=\"是否公开\" prop=\"isPublic\">\r\n                        <el-switch v-model=\"createCourseInfo.isPublic\"></el-switch>\r\n                    </el-form-item>\r\n                    <!-- 封面上传 -->\r\n                    <el-upload\r\n                            id=\"uploader\"\r\n                            action=\"/Files/courseCoverUpload\"\r\n                            :show-file-list=\"false\"\r\n                            :on-success=\"handleCourseCoverSuccess\"\r\n                            :before-upload=\"beforeAvatarUpload\">\r\n                        <!-- 此处设置有默认封面 -->\r\n                        <el-image v-if=\"CoverImageUrl\" :src=\"CoverImageUrl\" fit=\"scale-down\" class=\"headImage\"></el-image>\r\n                        <i class=\"el-icon-plus uploader-icons\">上传封面</i>\r\n                    </el-upload>\r\n\r\n                    <!-- 课程介绍textarea -->\r\n                    <el-form-item label=\"课程介绍\" prop=\"describes\">\r\n                        <el-input type=\"textarea\" :autosize=\"{ minRows: 5, maxRows: 8}\" v-model=\"createCourseInfo.describes\"></el-input>\r\n                    </el-form-item>\r\n                    <el-form-item>\r\n                        <el-button type=\"primary\" @click=\"createCourseMethod(createCourseInfo)\">立即创建</el-button>\r\n                        <el-button @click=\"createCourseInfoDialogVisible=false\">取消</el-button>\r\n                    </el-form-item>\r\n                </el-form>\r\n            </el-dialog>\r\n\r\n            <!-- 公告区 -->\r\n            <el-main>\r\n                <template style=\"position: relative\">\r\n                    <el-carousel :interval=\"5000\" type=\"card\">\r\n                        <el-carousel-item v-for=\"notice in courseNotice\" :key=\"notice.noticeId\" class=\"noticeController\">\r\n                            <div id=\"noticeCardBody\" @click=\"showNotice(notice)\">\r\n                                <!-- 通知标题-->\r\n                                <div class=\"medium\" id=\"noticeTitle\">{{ notice.title }}</div>\r\n                                <!-- 通知详情 -->\r\n                                <div class=\"medium\" id=\"noticeDetails\">\r\n                                    <span id=\"noticeCreator\">发布人：{{ notice.username }}</span>\r\n                                    <span id=\"noticeHits\">点击量：{{ notice.hits }}</span>\r\n                                    <span id=\"noticeCreateTime\">{{ notice.formatDate }}</span>\r\n                                </div>\r\n                                <!-- 通知内容 -->\r\n                                <div class=\"medium\" id=\"noticeContent\" v-html=\"notice.content\">{{ notice.content }}</div>\r\n                            </div>\r\n                        </el-carousel-item>\r\n                    </el-carousel>\r\n                </template>\r\n            </el-main>\r\n\r\n            <!-- 公告详情-抽屉 -->\r\n            <notice-drawer v-model=\"noticeDrawer\" :notice=\"noticeDrawerContent\"></notice-drawer>\r\n\r\n            <!-- 课程区 -->\r\n            <el-main>\r\n                <!-- 课程标签栏 -->\r\n                <el-tabs type=\"border-card\"  @tab-click=\"tabController\">\r\n                    <!-- 我学的课 -->\r\n                    <el-tab-pane label=\"我学的课\" class=\"tab-pane\">\r\n                        <!-- 添加课程按钮 -->\r\n                        <el-button type=\"primary\" style=\"margin-left: 40px\" @click=\"addCourse\" round>添加课程</el-button>\r\n                        <!-- 学生课程 -->\r\n                        <el-row>\r\n                            <el-col :span=\"4\" v-for=\"(item,index) in studyCourse\" :key=\"index\" class=\"CourseCard\">\r\n                                <el-card :body-style=\"{ padding: '0px' }\" class=\"courseCards\">\r\n                                    <div @click=\"toUserCourse(item.courseId)\">\r\n                                        <!-- 封面 -->\r\n                                        <el-image\r\n                                                class=\"courseCoverImg\"\r\n                                                :src=\"item.coverImg\"\r\n                                                :fit=\"coverImgFit\">\r\n                                            <div slot=\"error\" class=\"image-slot\">\r\n                                                <i class=\"el-icon-picture-outline courseCoverImgAlt\"></i>\r\n                                            </div>\r\n                                        </el-image>\r\n                                        <!-- 标题 -->\r\n                                        <div class=\"courseName\">{{ item.courseName }}</div>\r\n                                        <!-- 创建者和创建时间  -->\r\n                                        <div class=\"courseCreatorAndCreateTime\">\r\n                                            <span class=\"courseCreator\">{{item.username }} </span>\r\n                                            <span class=\"TimeAndTags\">\r\n                                                <span>{{ item.formatDateShort }}</span>\r\n                                                <el-tag class=\"courseTag\" type=\"success\" v-show=\"item.isPublic==1\">公开</el-tag>\r\n                                                <el-tag class=\"courseTag\" type=\"info\" v-show=\"item.isPublic==0 \">私有</el-tag>\r\n                                                <el-tag class=\"courseTag\" type=\"success\" v-show=\"item.isStart==1\">开启</el-tag>\r\n                                                <el-tag class=\"courseTag\" type=\"warning\" v-show=\"item.isStart==0 \">关闭</el-tag>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </el-card>\r\n                            </el-col>\r\n                        </el-row>\r\n                    </el-tab-pane>\r\n                    <!-- 我教的课 -->\r\n                    <el-tab-pane label=\"我教的课\" class=\"tab-pane\">\r\n                        <!-- 创建课程按钮 -->\r\n                        <el-button type=\"primary\" style=\"margin-left: 40px\" @click=\"createCourse\" round>创建课程</el-button>\r\n                        <!-- 教师课程 -->\r\n                        <el-row>\r\n                            <el-col :span=\"4\"\r\n                                    v-for=\"(item,index) in teachCourse\"\r\n                                    :key=\"index\"\r\n                                    class=\"CourseCard\">\r\n                                <el-card :body-style=\"{ padding: '0px' }\" class=\"courseCards\">\r\n                                    <div @click=\"toCourseManager(item.courseId)\">\r\n                                        <!-- 封面 -->\r\n                                        <el-image\r\n                                                class=\"courseCoverImg\"\r\n                                                :src=\"item.coverImg\"\r\n                                                :fit=\"coverImgFit\"\r\n                                                placeholder=\"图片睡觉了~\">\r\n                                            <div slot=\"error\" class=\"image-slot\">\r\n                                                <i class=\"el-icon-picture-outline courseCoverImgAlt\"></i>\r\n                                            </div>\r\n                                        </el-image>\r\n                                        <!-- 标题 -->\r\n                                        <div class=\"courseName\">{{ item.courseName }}</div>\r\n                                        <!-- 创建者和创建时间 -->\r\n                                        <div class=\"courseCreatorAndCreateTime\">\r\n                                            <span class=\"courseCreator\" >{{ item.username }} </span>\r\n                                            <span class=\"TimeAndTags\">\r\n                                                <span>{{ item.formatDateShort }}</span>\r\n                                                <el-tag class=\"courseTag\" type=\"success\" v-show=\"item.isPublic==1\">公开</el-tag>\r\n                                                <el-tag class=\"courseTag\" type=\"info\" v-show=\"item.isPublic==0 \">私有</el-tag>\r\n                                                <el-tag class=\"courseTag\" type=\"success\" v-show=\"item.isStart==1\">开启</el-tag>\r\n                                                <el-tag class=\"courseTag\" type=\"warning\" v-show=\"item.isStart==0 \">关闭</el-tag>\r\n                                            </span>\r\n                                        </div>\r\n                                    </div>\r\n                                </el-card>\r\n                            </el-col>\r\n                        </el-row>\r\n                    </el-tab-pane>\r\n                </el-tabs>\r\n            </el-main>\r\n\r\n            <!-- 底部区 -->\r\n            <page-footer></page-footer>\r\n            <PageFooter></PageFooter>\r\n        </el-container>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import UserAvatar from \"@/components/UserAvatar\";\r\n    import WhiteLogo from \"@/components/WhiteLogo\";\r\n    import NoticeDrawer from \"@/components/NoticeDrawer\";\r\n    import PageFooter from \"@/components/PageFooter\";\r\n    import SHAEncrypt from \"@/components/SHAEncrypt\";\r\n    export default {\r\n        name: \"UserMainPage\",\r\n        components:{\r\n            UserAvatar,\r\n            WhiteLogo,\r\n            PageFooter,\r\n            NoticeDrawer,\r\n        },\r\n        // 数据模型\r\n        data(){\r\n            return {\r\n                // 导航栏激活索引\r\n                activeIndex: '',\r\n                // 头像大小\r\n                size:'large',\r\n                // 用户信息\r\n                user:'',\r\n                // 用户头像展示\r\n                userAvatarUrl:'',\r\n                // 用户名\r\n                username:'',\r\n                // 课程公告\r\n                courseNotice:'',\r\n                // 公告抽屉\r\n                noticeDrawer:false,\r\n                noticeDrawerContent:'',     // 内容\r\n                // 加入课程的信息\r\n                studyCourse:[],\r\n                // 教授课程的信息\r\n                teachCourse:[],\r\n                // 查找到的课程\r\n                findCourses:[],\r\n                findCoursesUserName:[],\r\n                showPrivate:true,           // 展示私有课程\r\n                showClose:true,             // 展示关闭课程\r\n                yesOrNo: [{\r\n                    value: true,\r\n                    label: '显示'\r\n                }, {\r\n                    value: false,\r\n                    label: '隐藏'\r\n                }],\r\n                // 课程查找条件-课程名称\r\n                findCondition:{\r\n                courseName:'',\r\n                },\r\n                // 创建课程的信息\r\n                createCourseInfo:{\r\n                    courseName:'',\r\n                    isPublic: 1,\r\n                    coverImg:'',\r\n                    describes:'',\r\n                },\r\n                // 头像路径-默认为封面1\r\n                CoverImageUrl:'',\r\n                // 修改个人信息对话框可见\r\n                updateUserInfoDialogVisible: false,\r\n                // 查找课程对话框可见\r\n                findCourseDialogVisible: false,\r\n                // 创建课程对话框可见\r\n                createCourseInfoDialogVisible:false,\r\n                // 课程封面格式\r\n                coverImgFit:'cover',\r\n                // 表单校验规则\r\n                rules: {\r\n                    courseName: {required: true, message: '请输入课程名称', trigger: 'blur'}\r\n                },\r\n            }\r\n        },\r\n        created(){\r\n            this.openLoading();\r\n            // 获取用户数据\r\n            this.getUser();\r\n            // 获取公告数据\r\n            this.getNotice();\r\n            // 获取我学的课信息\r\n            this.getMyJoinCourse();\r\n            // 获取我教的课信息\r\n            this.getMyTeachCourse();\r\n            // 缓存课程信息\r\n            this.selectCourseInfo();\r\n        },\r\n        // 方法模型\r\n        methods: {\r\n            /* 加载动画 */\r\n            openLoading(){\r\n                let loading = this.$loading({\r\n                    lock: true,\r\n                    text: 'Loading',\r\n                    spinner: 'el-icon-loading',\r\n                    background: 'rgba(255,255,255,0.8)'\r\n                });\r\n                setTimeout(()=>{loading.close();},400)\r\n            },\r\n            // 获取用户数据\r\n            getUser(){\r\n                this.$axios.get(\"/Users/isUserLogin\").then((res)=>{\r\n                    if(res.data.flag){\r\n                        // 保存用户数据\r\n                        this.user = res.data.data;\r\n                        this.username = this.user.username;\r\n                    }else{\r\n                        // 服务故障-跳转登陆界面\r\n                        this.$router.push({name:'Login'});\r\n                    }\r\n                });\r\n            },\r\n            // 获取我学的课信息\r\n            getMyJoinCourse(){\r\n                // 获取我学的课\r\n                this.$axios.get(\"/CourseView/getMyJoinCourse\").then((res)=>{\r\n                    if(res.data.flag){// 保存用户数据\r\n                        this.studyCourse = res.data.data;\r\n                        // 防止空指针异常\r\n                        if(this.studyCourse === null)this.studyCourse = [];\r\n                    }else{// 服务故障\r\n                        this.$message.error(\"课程信息获取失败，请稍后重试！\");\r\n                    }\r\n                });\r\n            },\r\n            // 获取我教的课信息\r\n            getMyTeachCourse(){\r\n                // 获取我教的课\r\n                this.$axios.get(\"/CourseView/getMyTeachCourse\").then((res)=>{\r\n                    if(res.data.flag){// 保存用户数据\r\n                        this.teachCourse = res.data.data;\r\n                        // 防止空指针异常\r\n                        if(this.teachCourse === null)this.teachCourse = [];\r\n                    }else{// 服务故障\r\n                        this.$message.error(\"课程信息获取失败，请稍后重试！\");\r\n                    }\r\n                });\r\n            },\r\n            // 获取课程相关公告\r\n            getNotice(){\r\n                this.$axios.get(\"/Notice/getAll\").then((res)=>{\r\n                    if(res.data.flag){\r\n                        // 保存公告数据\r\n                        this.courseNotice = res.data.data;\r\n                        // 防止空指针异常\r\n                        if(this.courseNotice === null)this.courseNotice = [];\r\n                    }else{\r\n                        // 服务故障\r\n                        this.$message.error(\"公告信息获取失败！\");\r\n                    }\r\n                });\r\n            },\r\n            // 导航栏事件\r\n            handleSelect(key){\r\n                this.activeIndex = key;\r\n                switch (key) {\r\n                    case '0': // logo\r\n                        this.$router.push({\r\n                            name:'MainPage'\r\n                        });\r\n                        return;\r\n                    case '1': // 消息中心\r\n                        this.$router.push({\r\n                            name:'NoticePage'\r\n                        });\r\n                        return;\r\n                    case '3': // 修改信息\r\n                        this.userAvatarUrl=this.user.userAvatar;\r\n                        this.updateUserInfoDialogVisible = true;\r\n                        return;\r\n                    case '4': // 退出登陆\r\n                        this.$axios.get(\"/LoginCon/loginOut\").then((res)=>{\r\n                            if(res.data.flag){\r\n                                this.$router.push({\r\n                                    name:'Login'\r\n                                });\r\n                            }else{\r\n                                // 服务故障\r\n                                this.$message.error(\"操作失败！\");\r\n                            }\r\n                        });\r\n                        return;\r\n                }\r\n            },\r\n            // 头像上传成功的钩子-回显到界面\r\n            handleUserAvatarSuccess(res, file) {\r\n                this.userAvatarUrl = URL.createObjectURL(file.raw);\r\n                // 删除旧图 todo :由于异步导致的无法及时判断数据库写入状态，故默认成功，但不排除可能失败\r\n                this.$axios.post(\"/Files/deleteUserAvatar\",this.user );\r\n                // 写入图片路径\r\n                this.user.userAvatar = res;\r\n            },\r\n            // 更新用户信息\r\n            updateUserInfo(){\r\n                this.$axios.post(\"/Users/updateInfo\",this.user).then((res)=>{\r\n                    if(res.data.flag){\r\n                        // 修改成功\r\n                        this.$message.success(res.data.msg);\r\n                        this.updateUserInfoDialogVisible = false;\r\n                        this.getUser(); // 更新用户数据\r\n                    }else{\r\n                        // 服务故障\r\n                        this.$message.error(res.data.msg);\r\n                    }\r\n                });\r\n            },\r\n            // 展示公告\r\n            showNotice(notice){\r\n                this.noticeDrawer = true;\r\n                this.noticeDrawerContent = notice;\r\n                // 发送一次请求\r\n                setTimeout(()=>{this.noticeDrawer = false; },500);\r\n            },\r\n            // 跳转到课程界面\r\n            toUserCourse(courseId){\r\n                let course={\r\n                    courseId:courseId\r\n                };\r\n                // 添加课程id到session\r\n                this.$axios.post(\"/CourseView/addCourseIdToSession\", course).then((res)=>{\r\n                    if(res.data.flag){\r\n                       /* // 修改成功\r\n                        this.$message.success(\"即将为您跳转n_n\");*/\r\n                        // 跳转到课程界面\r\n                        this.$router.push({\r\n                            name:'LearningPage'\r\n                        })\r\n                    }else{\r\n                        // 服务故障\r\n                        this.$message.error(\"服务处理失败，请重新尝试T_T\");\r\n                    }\r\n                });\r\n            },\r\n            // 跳转到课程管理界面\r\n            toCourseManager(courseId){\r\n                let course={\r\n                    courseId:courseId\r\n                };\r\n                this.$axios.post(\"/CourseView/addCourseIdToSession\", course).then((res)=>{\r\n                    if(res.data.flag){\r\n                        // 修改成功\r\n                       /* this.$message.success(\"即将为您跳转n_n\");*/\r\n                        this.$router.push({\r\n                            name:'Management'\r\n                        })\r\n                    }else{\r\n                        // 服务故障\r\n                        this.$message.error(\"服务处理失败，请重新尝试T_T\");\r\n                    }\r\n                });\r\n            },\r\n            // 标签控制器\r\n            tabController(tab){\r\n                switch (tab.index) {\r\n                    case '0':\r\n                        this.getMyJoinCourse();\r\n                        break;\r\n                    case '1':\r\n                        this.getMyTeachCourse();\r\n                        break;\r\n                }\r\n            },\r\n            // 添加课程-打开课程查找列表\r\n            addCourse(){\r\n                this.selectCourseInfo();\r\n                this.findCondition.courseName = '';\r\n                this.findCourseDialogVisible = true;\r\n                this.showPrivate=true;\r\n                this.showClose=true;\r\n            },\r\n            // 根据条件查找相关课程\r\n            selectCourseInfo(){\r\n                this.$axios.post(\"/CourseView/selectCourseInfo\",this.findCondition).then((res)=>{\r\n                    if(res.data.flag){\r\n                        // 保存用户数据\r\n                        this.findCourses = res.data.data;\r\n                        if(this.findCourses.length === 0){\r\n                            this.$message.warning(\"未找到相关课程\");\r\n                        }\r\n                    }else{\r\n                        // 服务故障\r\n                        this.$message.warning(\"未找到相关课程\");\r\n                    }\r\n                });\r\n            },\r\n            // 判断用户是否已加入该课程\r\n            isJoinThisCourse(courseId){\r\n                let i = 0;\r\n                for(i = 0; i < this.studyCourse.length; i++){\r\n                    if(courseId === this.studyCourse[i].courseId)return true;\r\n                }\r\n                for(i = 0; i < this.teachCourse.length; i++){\r\n                    if(courseId === this.teachCourse[i].courseId)return true;\r\n                }\r\n                return false;\r\n            },\r\n            // 加入课程\r\n            addCourseToDB(course){\r\n                // 弹出确认加入选择框\r\n                this.$confirm('加入该课程?', '提示', {\r\n                    confirmButtonText: '确定',\r\n                    cancelButtonText: '取消',\r\n                    type: 'info'\r\n                }).then(() => { // 确认加入\r\n                    if(!course.isPublic){    // 是否公开\r\n                        this.$message.error(\"课程未公开！\");\r\n                        return false;\r\n                    }\r\n                    else if(!course.isStart){  // 是否开启\r\n                        this.$message.error(\"课程已关闭！\");\r\n                        return false;\r\n                    }\r\n                    else{   // 加入课程\r\n                        let courseUser = {\r\n                            courseId:course.courseId\r\n                        };\r\n                        this.$axios.post(\"/CourseUser/save\",courseUser).then((res)=>{\r\n                            if(res.data.flag){\r\n                                // 修改成功\r\n                                this.$message.success(res.data.msg);\r\n                                // 关闭\r\n                                this.findCourseDialogVisible = false;\r\n                                // 刷新数据\r\n                                this.getMyJoinCourse();\r\n                                // 刷新公告\r\n                                this.getNotice();\r\n                            }else{\r\n                                // 服务故障\r\n                                this.$message.error(res.data.msg);\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            },\r\n            // 创建课程\r\n            createCourse(){\r\n                // 重置数据和默认封面\r\n                this.CoverImageUrl='/imgs/course/default.jpg';\r\n                this.createCourseInfo.courseName = '';\r\n                this.createCourseInfo.isPublic = true;\r\n                this.createCourseInfo.coverImg = '';\r\n                this.createCourseInfo.describes = '';\r\n                this.createCourseInfo.createTime = '';\r\n                // 打开对话框\r\n                this.createCourseInfoDialogVisible = true;\r\n            },\r\n            // 封面上传成功的钩子-回显到界面\r\n            handleCourseCoverSuccess(res, file) {\r\n                this.CoverImageUrl = URL.createObjectURL(file.raw);\r\n                // 写入图片路径\r\n                this.createCourseInfo.coverImg = res;\r\n            },\r\n            // 上传文件之前的钩子，参数为上传的文件，若返回 false 或者返回 Promise 且被 reject，则停止上传。\r\n            beforeAvatarUpload(file) {\r\n                const isJPG = file.type === ('image/jpeg');\r\n                const isPNG = file.type === ('image/png');\r\n\r\n                const isLt2M = file.size / 1024 / 1024 < 40;\r\n                if (!isJPG && !isPNG) {\r\n                    this.$message.error('上传头像图片只能是 JPG/PNG 格式!');\r\n                }\r\n                if (!isLt2M) {\r\n                    this.$message.error('上传头像图片大小不能超过 40MB!');\r\n                }\r\n                return isJPG||isPNG && isLt2M;\r\n            },\r\n            // 创建课程-整理提交数据\r\n            createCourseMethod(course) {\r\n                // 整理数据\r\n                if(course.courseName === ''){\r\n                    this.$message.error(\"课程名不能为空！\");\r\n                    return 0;\r\n                }\r\n                // 布尔值转int\r\n                if(course.isPublic === true){\r\n                    course.isPublic = 1;\r\n                }else{\r\n                    course.isPublic = 0;\r\n                }\r\n                // 发送请求\r\n                this.$axios.post(\"/Course/save\",course).then((res)=>{\r\n                    if(res.data.flag){\r\n                        // 修改成功\r\n                        this.$message.success(res.data.msg);\r\n                        // 关闭\r\n                        this.createCourseInfoDialogVisible = false;\r\n                        // 刷新数据\r\n                        this.getMyTeachCourse();\r\n                    }else{\r\n                        // 服务故障\r\n                        this.$message.error(res.data.msg);\r\n                    }\r\n                });\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    /*\r\n     * 导航栏样式\r\n     */\r\n    #elDaoHang{\r\n        /* 粘性定位 */\r\n        position: sticky;\r\n        top: 0;\r\n        z-index:5;  /* 防遮挡 */\r\n        background-color: #4858c9;\r\n        /* 设置底色扩张至边框 */\r\n        outline: #4858c9 solid 8px;\r\n    }\r\n    /* 取消导航栏底框颜色 */\r\n    .el-menu.el-menu--horizontal {\r\n        border-bottom: solid 1px #4858c9;\r\n    }\r\n    /* 取消激活栏下划线 */\r\n    .el-menu--horizontal>.el-menu-item.is-active,\r\n    .el-menu--horizontal>.el-submenu.is-active{\r\n        border-bottom: 2px solid #4858c9;\r\n    }\r\n    /* 导航栏文字样式 */\r\n    .dhClaText {\r\n        font-size: 20px;\r\n        color: #ffffff;\r\n        font-weight: 500;\r\n        font-family: \"微软雅黑\";\r\n    }\r\n    /* 用户标签偏移 */\r\n    .items{\r\n        left: 70%;\r\n        position: relative;\r\n    }\r\n    .subText{\r\n        align-content: center;\r\n    }\r\n    /*\r\n     * 公告区\r\n     */\r\n    /* 控制公告区背景色 */\r\n    .el-carousel__item:nth-child(2n) {\r\n        background-color: #4f66d3;\r\n    }\r\n    .el-carousel__item:nth-child(2n+1) {\r\n        background-color: #4f66d3;\r\n    }\r\n    /* 通知信息设置 */\r\n    .medium{\r\n        font-family: \"微软雅黑\";\r\n        color: #ffffff;\r\n        /* 文本换行 */\r\n        /* white-space:pre-wrap;*/\r\n    }\r\n    #noticeCardBody{\r\n        overflow-y: auto;\r\n        width: 102%;\r\n        height: 100%;\r\n    }\r\n    /* 通知标题 */\r\n    #noticeTitle{\r\n        /* 上边距 */\r\n        margin-top: 10px;\r\n        /* 居中 */\r\n        text-align: center;\r\n        font-size: 40px;\r\n    }\r\n    /* 通知详情 */\r\n    #noticeDetails{\r\n        /* 上边距 */\r\n        margin-top: 10px;\r\n        /* 大小和间距 */\r\n        font-size: 18px;\r\n        letter-spacing: 1px;\r\n        /* 暗色调 */\r\n        color: #c2cbd9;\r\n    }\r\n    /* 发布人 */\r\n    #noticeCreator{\r\n        left: 20%;\r\n        position: relative;\r\n    }\r\n    /* 点击量 */\r\n    #noticeHits{\r\n        left: 30%;\r\n        position: relative;\r\n    }\r\n    /* 创建时间 */\r\n    #noticeCreateTime{\r\n        left: 40%;\r\n        position: relative;\r\n    }\r\n    /* 内容 */\r\n    #noticeContent{\r\n        /* 位置 */\r\n        margin-top: 10px;\r\n        padding-left: 27px;\r\n        padding-right: 27px;\r\n        /* 段落 */\r\n        font-size: 20px;\r\n        letter-spacing: 1px;\r\n        /*text-indent: 45px;  !* 首行缩进 *!*/\r\n        line-height: 1.5;   /* 行高 */\r\n    }\r\n    /*\r\n     * 课程卡片显示\r\n     */\r\n    .tab-pane{\r\n        min-height: 500px;\r\n    }\r\n    /* 卡片边距-调制参数 */\r\n    .CourseCard{\r\n        margin: 1.6%;\r\n    }\r\n    /* 用于解决总列值超过24导致的排版混乱 */\r\n    ::v-deep .el-row {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n    }\r\n    /* 鼠标指针 */\r\n    .CourseCard:hover{\r\n        cursor: pointer;\r\n    }\r\n    /* 图片高度-调制参数 */\r\n    .courseCoverImg{\r\n        width: 100%;\r\n        height: 178px;\r\n        position: relative;\r\n    }\r\n    .courseCards:hover .courseName{\r\n        color: #3a75ff;\r\n    }\r\n    .courseCoverImgAlt{\r\n        position: absolute;\r\n        left: 45%;\r\n        top: 45%;\r\n        font-size: 1.5em;\r\n    }\r\n    /* 课程名称 */\r\n    .courseName{\r\n        font-size: 20px;\r\n        font-family: \"等线\";\r\n        font-weight: 600;\r\n        margin-left: 10px;\r\n        margin-top: 10px;\r\n    }\r\n    /* 作者和创建时间 */\r\n    .courseCreatorAndCreateTime{\r\n        font-size: 16px;\r\n        font-family: \"微软雅黑\";\r\n        font-weight: 400;\r\n        margin-top: 4px;\r\n        margin-left: 10px;\r\n        margin-bottom: 9px;\r\n        color: #8c939d;\r\n        position: relative;\r\n    }\r\n    /* 时间和标签绝对位置 */\r\n    .TimeAndTags{\r\n        left: 30%;\r\n        bottom: -7px;\r\n        position: absolute;\r\n    }\r\n    /* 已加入标签 */\r\n    .courseTag{\r\n        left: 3%;\r\n        bottom: 2px;\r\n        position: relative;\r\n        font-family: \"微软雅黑\";\r\n        font-weight: 400;\r\n        margin-left: 5px;\r\n    }\r\n    /*\r\n     * 创建课程\r\n     */\r\n    /* 头像提交部分 */\r\n    ::v-deep #uploader{\r\n        border: 1px dashed #a7a7a7;\r\n        border-radius: 6px; /* 圆角 */\r\n        cursor: pointer;    /* 鼠标样式 */\r\n        position: relative;\r\n        overflow: hidden;   /* 隐藏滚动 */\r\n        width: 300px;\r\n        height: 168px;\r\n    }\r\n    /* 边框高亮显示 */\r\n    ::v-deep #uploader:hover {\r\n        border-color: #409EFF;\r\n    }\r\n    /* 上传文字 */\r\n    .uploader-icons {\r\n        font-size: 20px;\r\n        font-family: \"微软雅黑\";\r\n        color: #dfe1e1;\r\n        /* 定位 */\r\n        top: 45%;\r\n        left: 33%;\r\n        position: absolute;\r\n        z-index: 5;\r\n    }\r\n    /*\r\n     * 修改用户信息\r\n     */\r\n    #userAvatarUploader{\r\n        border: 1px dashed #a7a7a7;\r\n        border-radius: 6px; /* 圆角 */\r\n        cursor: pointer;    /* 鼠标样式 */\r\n        position: relative;\r\n        overflow: hidden;   /* 隐藏滚动 */\r\n        width: 168px;\r\n        height: 168px;\r\n    }\r\n    #userAvatarUploader:hover{\r\n        border-color: #409EFF;\r\n    }\r\n    /* 上传头像 */\r\n    ::v-deep #userAvatar{\r\n        width: 168px;\r\n        height: 168px;\r\n    }\r\n    #userAvatarUploader-icons{\r\n        font-size: 18px;\r\n        font-family: \"微软雅黑\";\r\n        color: #ffffff;\r\n        /* 定位 */\r\n        top: 45%;\r\n        left: 25%;\r\n        position: absolute;\r\n        z-index: 5;\r\n    }\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}